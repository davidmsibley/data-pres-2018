{"version":3,"file":"common.min.js","sources":["../../node_modules/lit-html/lib/directive.js","../../node_modules/lit-html/lib/dom.js","../../node_modules/lit-html/lib/part.js","../../node_modules/lit-html/lib/template.js","../../node_modules/lit-html/lib/template-instance.js","../../node_modules/lit-html/lib/template-result.js","../../node_modules/lit-html/lib/parts.js","../../node_modules/lit-html/lib/default-template-processor.js","../../node_modules/lit-html/lib/template-factory.js","../../node_modules/lit-html/lib/render.js","../../node_modules/lit-html/lit-html.js","../../node_modules/lit-html/lib/modify-template.js","../../node_modules/lit-html/lib/shady-render.js","../../node_modules/lit-element/lib/updating-element.js","../../node_modules/lit-element/lib/css-tag.js","../../node_modules/lit-element/lit-element.js","../../node_modules/@uirouter/core/lib-esm/common/hof.js","../../node_modules/@uirouter/core/lib-esm/common/predicates.js","../../node_modules/@uirouter/core/lib-esm/common/coreservices.js","../../node_modules/@uirouter/core/lib-esm/common/common.js","../../node_modules/@uirouter/core/lib-esm/transition/rejectFactory.js","../../node_modules/@uirouter/core/lib-esm/common/glob.js","../../node_modules/@uirouter/core/lib-esm/common/queue.js","../../node_modules/@uirouter/core/lib-esm/common/strings.js","../../node_modules/@uirouter/core/lib-esm/common/trace.js","../../node_modules/@uirouter/core/lib-esm/params/paramType.js","../../node_modules/@uirouter/core/lib-esm/params/param.js","../../node_modules/@uirouter/core/lib-esm/params/paramTypes.js","../../node_modules/@uirouter/core/lib-esm/params/stateParams.js","../../node_modules/@uirouter/core/lib-esm/path/pathNode.js","../../node_modules/@uirouter/core/lib-esm/state/targetState.js","../../node_modules/@uirouter/core/lib-esm/path/pathUtils.js","../../node_modules/@uirouter/core/lib-esm/resolve/interface.js","../../node_modules/@uirouter/core/lib-esm/resolve/resolvable.js","../../node_modules/@uirouter/core/lib-esm/resolve/resolveContext.js","../../node_modules/@uirouter/core/lib-esm/state/stateBuilder.js","../../node_modules/@uirouter/core/lib-esm/transition/interface.js","../../node_modules/@uirouter/core/lib-esm/state/stateObject.js","../../node_modules/@uirouter/core/lib-esm/state/stateMatcher.js","../../node_modules/@uirouter/core/lib-esm/state/stateQueueManager.js","../../node_modules/@uirouter/core/lib-esm/state/stateRegistry.js","../../node_modules/@uirouter/core/lib-esm/transition/transitionHook.js","../../node_modules/@uirouter/core/lib-esm/transition/hookRegistry.js","../../node_modules/@uirouter/core/lib-esm/transition/hookBuilder.js","../../node_modules/@uirouter/core/lib-esm/transition/transition.js","../../node_modules/@uirouter/core/lib-esm/url/urlMatcher.js","../../node_modules/@uirouter/core/lib-esm/url/urlMatcherFactory.js","../../node_modules/@uirouter/core/lib-esm/url/urlRule.js","../../node_modules/@uirouter/core/lib-esm/url/urlRouter.js","../../node_modules/@uirouter/core/lib-esm/url/urlRules.js","../../node_modules/@uirouter/core/lib-esm/view/view.js","../../node_modules/@uirouter/core/lib-esm/globals.js","../../node_modules/@uirouter/core/lib-esm/url/urlConfig.js","../../node_modules/@uirouter/core/lib-esm/url/urlService.js","../../node_modules/@uirouter/core/lib-esm/router.js","../../node_modules/@uirouter/core/lib-esm/hooks/coreResolvables.js","../../node_modules/@uirouter/core/lib-esm/hooks/redirectTo.js","../../node_modules/@uirouter/core/lib-esm/hooks/onEnterExitRetain.js","../../node_modules/@uirouter/core/lib-esm/hooks/resolve.js","../../node_modules/@uirouter/core/lib-esm/hooks/views.js","../../node_modules/@uirouter/core/lib-esm/hooks/updateGlobals.js","../../node_modules/@uirouter/core/lib-esm/hooks/url.js","../../node_modules/@uirouter/core/lib-esm/hooks/lazyLoad.js","../../node_modules/@uirouter/core/lib-esm/transition/transitionEventType.js","../../node_modules/@uirouter/core/lib-esm/hooks/ignoredTransition.js","../../node_modules/@uirouter/core/lib-esm/hooks/invalidTransition.js","../../node_modules/@uirouter/core/lib-esm/transition/transitionService.js","../../node_modules/@uirouter/core/lib-esm/state/stateService.js","../../node_modules/@uirouter/core/lib-esm/vanilla/q.js","../../node_modules/@uirouter/core/lib-esm/vanilla/injector.js","../../node_modules/@uirouter/core/lib-esm/vanilla/utils.js","../../node_modules/@uirouter/core/lib-esm/vanilla/baseLocationService.js","../../node_modules/@uirouter/core/lib-esm/vanilla/hashLocationService.js","../../node_modules/@uirouter/core/lib-esm/vanilla/memoryLocationService.js","../../node_modules/@uirouter/core/lib-esm/vanilla/pushStateLocationService.js","../../node_modules/@uirouter/core/lib-esm/vanilla/browserLocationConfig.js","../../node_modules/@uirouter/core/lib-esm/vanilla/plugins.js","../../js/common.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment poisition.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceeding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceeding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? marker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // tslint:disable-next-line:no-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = value;\n        }\n        else {\n            this.__commitNode(document.createTextNode(typeof value === 'string' ? value : String(value)));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result a TemplateResult created by evaluating a template tag like\n *     `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.0.0');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module shady-render\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (renderedDOM, template, scopeName) => {\n    shadyRenderSet.add(scopeName);\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        window.ShadyCSS.prepareTemplateStyles(template.element, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = template.element.content;\n    insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(template.element, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host && result instanceof TemplateResult;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        if (part.value instanceof TemplateInstance) {\n            prepareTemplateStyles(renderContainer, part.value.template, scopeName);\n        }\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst microtaskPromise = Promise.resolve(true);\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        this._updatePromise = microtaskPromise;\n        this._hasConnectedResolver = undefined;\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        Object.defineProperty(this.prototype, name, {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        });\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        if (this.hasOwnProperty(JSCompiler_renameProperty('finalized', this)) &&\n            this.finalized) {\n            return;\n        }\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (typeof superCtor.finalize === 'function') {\n            superCtor.finalize();\n        }\n        this.finalized = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        this._updateState = this._updateState | STATE_HAS_CONNECTED;\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection and if one is pending connection the\n        // `_hasConnectionResolver` will exist. If so, resolve it to complete the\n        // update, otherwise requestUpdate.\n        if (this._hasConnectedResolver) {\n            this._hasConnectedResolver();\n            this._hasConnectedResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor._classProperties.get(propName) || defaultPropertyDeclaration;\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor._classProperties.get(name) || defaultPropertyDeclaration;\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        // Mark state updating...\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        let resolve;\n        let reject;\n        const previousUpdatePromise = this._updatePromise;\n        this._updatePromise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await previousUpdatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        // Make sure the element has connected before updating.\n        if (!this._hasConnected) {\n            await new Promise((res) => this._hasConnectedResolver = res);\n        }\n        try {\n            const result = this.performUpdate();\n            // If `performUpdate` returns a Promise, we await it. This is done to\n            // enable coordinating updates with a scheduler. Note, the result is\n            // checked to avoid delaying an additional microtask unless we need to.\n            if (result != null) {\n                await result;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n        resolve(!this._hasRequestedUpdate);\n    }\n    get _hasConnected() {\n        return (this._updateState & STATE_HAS_CONNECTED);\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            throw e;\n        }\n        finally {\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update. This getter can be implemented to\n     * await additional state. For example, it is sometimes useful to await a\n     * rendered element before fulfilling this Promise. To do this, first await\n     * `super.updateComplete` then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement.finalized = true;\n//# sourceMappingURL=updating-element.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { TemplateResult } from 'lit-html';\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.2.0');\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(styles, result = []) {\n    for (let i = 0, length = styles.length; i < length; i++) {\n        const value = styles[i];\n        if (Array.isArray(value)) {\n            arrayFlat(value, result);\n        }\n        else {\n            result.push(value);\n        }\n    }\n    return result;\n}\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles) => styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\nexport class LitElement extends UpdatingElement {\n    /** @nocollapse */\n    static finalize() {\n        super.finalize();\n        // Prepare styling that is stamped at first render time. Styling\n        // is built from user provided `styles` or is inherited from the superclass.\n        this._styles =\n            this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n                this._getUniqueStyles() :\n                this._styles || [];\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Take care not to call `this.styles` multiple times since this generates\n        // new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.styles;\n        const styles = [];\n        if (Array.isArray(userStyles)) {\n            const flatStyles = flattenStyles(userStyles);\n            // As a performance optimization to avoid duplicated styling that can\n            // occur especially when composing via subclassing, de-duplicate styles\n            // preserving the last item in the list. The last item is kept to\n            // try to preserve cascade order with the assumption that it's most\n            // important that last added styles override previous styles.\n            const styleSet = flatStyles.reduceRight((set, s) => {\n                set.add(s);\n                // on IE set.add does not return the set.\n                return set;\n            }, new Set());\n            // Array.from does not work on Set in IE\n            styleSet.forEach((v) => styles.unshift(v));\n        }\n        else if (userStyles) {\n            styles.push(userStyles);\n        }\n        return styles;\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        super.update(changedProperties);\n        const templateResult = this.render();\n        if (templateResult instanceof TemplateResult) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method must return\n     * a lit-html TemplateResult. Setting properties inside this method will *not*\n     * trigger the element to update.\n     */\n    render() {\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n */\nLitElement.finalized = true;\n/**\n * Render method used to render the lit-html TemplateResult to the element's\n * DOM.\n * @param {TemplateResult} Template to render.\n * @param {Element|DocumentFragment} Node into which to render.\n * @param {String} Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","/**\n * Higher order functions\n *\n * These utility functions are exported, but are subject to change without notice.\n *\n * @module common_hof\n */ /** */\n/**\n * Returns a new function for [Partial Application](https://en.wikipedia.org/wiki/Partial_application) of the original function.\n *\n * Given a function with N parameters, returns a new function that supports partial application.\n * The new function accepts anywhere from 1 to N parameters.  When that function is called with M parameters,\n * where M is less than N, it returns a new function that accepts the remaining parameters.  It continues to\n * accept more parameters until all N parameters have been supplied.\n *\n *\n * This contrived example uses a partially applied function as an predicate, which returns true\n * if an object is found in both arrays.\n * @example\n * ```\n * // returns true if an object is in both of the two arrays\n * function inBoth(array1, array2, object) {\n *   return array1.indexOf(object) !== -1 &&\n *          array2.indexOf(object) !== 1;\n * }\n * let obj1, obj2, obj3, obj4, obj5, obj6, obj7\n * let foos = [obj1, obj3]\n * let bars = [obj3, obj4, obj5]\n *\n * // A curried \"copy\" of inBoth\n * let curriedInBoth = curry(inBoth);\n * // Partially apply both the array1 and array2\n * let inFoosAndBars = curriedInBoth(foos, bars);\n *\n * // Supply the final argument; since all arguments are\n * // supplied, the original inBoth function is then called.\n * let obj1InBoth = inFoosAndBars(obj1); // false\n *\n * // Use the inFoosAndBars as a predicate.\n * // Filter, on each iteration, supplies the final argument\n * let allObjs = [ obj1, obj2, obj3, obj4, obj5, obj6, obj7 ];\n * let foundInBoth = allObjs.filter(inFoosAndBars); // [ obj3 ]\n *\n * ```\n *\n * Stolen from: http://stackoverflow.com/questions/4394747/javascript-curry-function\n *\n * @param fn\n * @returns {*|function(): (*|any)}\n */\nexport function curry(fn) {\n    var initial_args = [].slice.apply(arguments, [1]);\n    var func_args_length = fn.length;\n    function curried(args) {\n        if (args.length >= func_args_length)\n            return fn.apply(null, args);\n        return function () {\n            return curried(args.concat([].slice.apply(arguments)));\n        };\n    }\n    return curried(initial_args);\n}\n/**\n * Given a varargs list of functions, returns a function that composes the argument functions, right-to-left\n * given: f(x), g(x), h(x)\n * let composed = compose(f,g,h)\n * then, composed is: f(g(h(x)))\n */\nexport function compose() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function () {\n        var i = start, result = args[start].apply(this, arguments);\n        while (i--)\n            result = args[i].call(this, result);\n        return result;\n    };\n}\n/**\n * Given a varargs list of functions, returns a function that is composes the argument functions, left-to-right\n * given: f(x), g(x), h(x)\n * let piped = pipe(f,g,h);\n * then, piped is: h(g(f(x)))\n */\nexport function pipe() {\n    var funcs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        funcs[_i] = arguments[_i];\n    }\n    return compose.apply(null, [].slice.call(arguments).reverse());\n}\n/**\n * Given a property name, returns a function that returns that property from an object\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = prop(\"name\");\n * getName(obj) === \"blarg\"\n */\nexport var prop = function (name) { return function (obj) { return obj && obj[name]; }; };\n/**\n * Given a property name and a value, returns a function that returns a boolean based on whether\n * the passed object has a property that matches the value\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = propEq(\"name\", \"blarg\");\n * getName(obj) === true\n */\nexport var propEq = curry(function (name, _val, obj) { return obj && obj[name] === _val; });\n/**\n * Given a dotted property name, returns a function that returns a nested property from an object, or undefined\n * let obj = { id: 1, nestedObj: { foo: 1, name: \"blarg\" }, };\n * let getName = prop(\"nestedObj.name\");\n * getName(obj) === \"blarg\"\n * let propNotFound = prop(\"this.property.doesnt.exist\");\n * propNotFound(obj) === undefined\n */\nexport var parse = function (name) { return pipe.apply(null, name.split('.').map(prop)); };\n/**\n * Given a function that returns a truthy or falsey value, returns a\n * function that returns the opposite (falsey or truthy) value given the same inputs\n */\nexport var not = function (fn) { return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return !fn.apply(null, args);\n}; };\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if both functions return truthy for the given arguments\n */\nexport function and(fn1, fn2) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return fn1.apply(null, args) && fn2.apply(null, args);\n    };\n}\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if at least one of the functions returns truthy for the given arguments\n */\nexport function or(fn1, fn2) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return fn1.apply(null, args) || fn2.apply(null, args);\n    };\n}\n/**\n * Check if all the elements of an array match a predicate function\n *\n * @param fn1 a predicate function `fn1`\n * @returns a function which takes an array and returns true if `fn1` is true for all elements of the array\n */\nexport var all = function (fn1) { return function (arr) { return arr.reduce(function (b, x) { return b && !!fn1(x); }, true); }; };\n// tslint:disable-next-line:variable-name\nexport var any = function (fn1) { return function (arr) { return arr.reduce(function (b, x) { return b || !!fn1(x); }, false); }; };\n/** Given a class, returns a Predicate function that returns true if the object is of that class */\nexport var is = function (ctor) { return function (obj) {\n    return (obj != null && obj.constructor === ctor) || obj instanceof ctor;\n}; };\n/** Given a value, returns a Predicate function that returns true if another value is === equal to the original value */\nexport var eq = function (value) { return function (other) { return value === other; }; };\n/** Given a value, returns a function which returns the value */\nexport var val = function (v) { return function () { return v; }; };\nexport function invoke(fnName, args) {\n    return function (obj) { return obj[fnName].apply(obj, args); };\n}\n/**\n * Sorta like Pattern Matching (a functional programming conditional construct)\n *\n * See http://c2.com/cgi/wiki?PatternMatching\n *\n * This is a conditional construct which allows a series of predicates and output functions\n * to be checked and then applied.  Each predicate receives the input.  If the predicate\n * returns truthy, then its matching output function (mapping function) is provided with\n * the input and, then the result is returned.\n *\n * Each combination (2-tuple) of predicate + output function should be placed in an array\n * of size 2: [ predicate, mapFn ]\n *\n * These 2-tuples should be put in an outer array.\n *\n * @example\n * ```\n *\n * // Here's a 2-tuple where the first element is the isString predicate\n * // and the second element is a function that returns a description of the input\n * let firstTuple = [ angular.isString, (input) => `Heres your string ${input}` ];\n *\n * // Second tuple: predicate \"isNumber\", mapfn returns a description\n * let secondTuple = [ angular.isNumber, (input) => `(${input}) That's a number!` ];\n *\n * let third = [ (input) => input === null,  (input) => `Oh, null...` ];\n *\n * let fourth = [ (input) => input === undefined,  (input) => `notdefined` ];\n *\n * let descriptionOf = pattern([ firstTuple, secondTuple, third, fourth ]);\n *\n * console.log(descriptionOf(undefined)); // 'notdefined'\n * console.log(descriptionOf(55)); // '(55) That's a number!'\n * console.log(descriptionOf(\"foo\")); // 'Here's your string foo'\n * ```\n *\n * @param struct A 2D array.  Each element of the array should be an array, a 2-tuple,\n * with a Predicate and a mapping/output function\n * @returns {function(any): *}\n */\nexport function pattern(struct) {\n    return function (x) {\n        for (var i = 0; i < struct.length; i++) {\n            if (struct[i][0](x))\n                return struct[i][1](x);\n        }\n    };\n}\n//# sourceMappingURL=hof.js.map","/** Predicates\n *\n * These predicates return true/false based on the input.\n * Although these functions are exported, they are subject to change without notice.\n *\n * @module common_predicates\n */ /** */\nimport { and, not, pipe, prop, or } from './hof';\nvar toStr = Object.prototype.toString;\nvar tis = function (t) { return function (x) { return typeof x === t; }; };\nexport var isUndefined = tis('undefined');\nexport var isDefined = not(isUndefined);\nexport var isNull = function (o) { return o === null; };\nexport var isNullOrUndefined = or(isNull, isUndefined);\nexport var isFunction = tis('function');\nexport var isNumber = tis('number');\nexport var isString = tis('string');\nexport var isObject = function (x) { return x !== null && typeof x === 'object'; };\nexport var isArray = Array.isArray;\nexport var isDate = (function (x) { return toStr.call(x) === '[object Date]'; });\nexport var isRegExp = (function (x) { return toStr.call(x) === '[object RegExp]'; });\n/**\n * Predicate which checks if a value is injectable\n *\n * A value is \"injectable\" if it is a function, or if it is an ng1 array-notation-style array\n * where all the elements in the array are Strings, except the last one, which is a Function\n */\nexport function isInjectable(val) {\n    if (isArray(val) && val.length) {\n        var head = val.slice(0, -1), tail = val.slice(-1);\n        return !(head.filter(not(isString)).length || tail.filter(not(isFunction)).length);\n    }\n    return isFunction(val);\n}\n/**\n * Predicate which checks if a value looks like a Promise\n *\n * It is probably a Promise if it's an object, and it has a `then` property which is a Function\n */\nexport var isPromise = and(isObject, pipe(prop('then'), isFunction));\n//# sourceMappingURL=predicates.js.map","var noImpl = function (fnname) { return function () {\n    throw new Error(\"No implementation for \" + fnname + \". The framework specific code did not implement this method.\");\n}; };\nexport var makeStub = function (service, methods) {\n    return methods.reduce(function (acc, key) { return ((acc[key] = noImpl(service + \".\" + key + \"()\")), acc); }, {});\n};\nvar services = {\n    $q: undefined,\n    $injector: undefined,\n};\nexport { services };\n//# sourceMappingURL=coreservices.js.map","/**\n * Random utility functions used in the UI-Router code\n *\n * These functions are exported, but are subject to change without notice.\n *\n * @preferred @publicapi @module common\n */ /** */\nimport { isFunction, isString, isArray, isRegExp, isDate } from './predicates';\nimport { all, any, prop, curry, not } from './hof';\nimport { services } from './coreservices';\nexport var root = (typeof self === 'object' && self.self === self && self) ||\n    (typeof global === 'object' && global.global === global && global) ||\n    this;\nvar angular = root.angular || {};\nexport var fromJson = angular.fromJson || JSON.parse.bind(JSON);\nexport var toJson = angular.toJson || JSON.stringify.bind(JSON);\nexport var forEach = angular.forEach || _forEach;\nexport var extend = Object.assign || _extend;\nexport var equals = angular.equals || _equals;\nexport function identity(x) {\n    return x;\n}\nexport function noop() { }\n/**\n * Builds proxy functions on the `to` object which pass through to the `from` object.\n *\n * For each key in `fnNames`, creates a proxy function on the `to` object.\n * The proxy function calls the real function on the `from` object.\n *\n *\n * #### Example:\n * This example creates an new class instance whose functions are prebound to the new'd object.\n * ```js\n * class Foo {\n *   constructor(data) {\n *     // Binds all functions from Foo.prototype to 'this',\n *     // then copies them to 'this'\n *     bindFunctions(Foo.prototype, this, this);\n *     this.data = data;\n *   }\n *\n *   log() {\n *     console.log(this.data);\n *   }\n * }\n *\n * let myFoo = new Foo([1,2,3]);\n * var logit = myFoo.log;\n * logit(); // logs [1, 2, 3] from the myFoo 'this' instance\n * ```\n *\n * #### Example:\n * This example creates a bound version of a service function, and copies it to another object\n * ```\n *\n * var SomeService = {\n *   this.data = [3, 4, 5];\n *   this.log = function() {\n *     console.log(this.data);\n *   }\n * }\n *\n * // Constructor fn\n * function OtherThing() {\n *   // Binds all functions from SomeService to SomeService,\n *   // then copies them to 'this'\n *   bindFunctions(SomeService, this, SomeService);\n * }\n *\n * let myOtherThing = new OtherThing();\n * myOtherThing.log(); // logs [3, 4, 5] from SomeService's 'this'\n * ```\n *\n * @param source A function that returns the source object which contains the original functions to be bound\n * @param target A function that returns the target object which will receive the bound functions\n * @param bind A function that returns the object which the functions will be bound to\n * @param fnNames The function names which will be bound (Defaults to all the functions found on the 'from' object)\n * @param latebind If true, the binding of the function is delayed until the first time it's invoked\n */\nexport function createProxyFunctions(source, target, bind, fnNames, latebind) {\n    if (latebind === void 0) { latebind = false; }\n    var bindFunction = function (fnName) { return source()[fnName].bind(bind()); };\n    var makeLateRebindFn = function (fnName) {\n        return function lateRebindFunction() {\n            target[fnName] = bindFunction(fnName);\n            return target[fnName].apply(null, arguments);\n        };\n    };\n    fnNames = fnNames || Object.keys(source());\n    return fnNames.reduce(function (acc, name) {\n        acc[name] = latebind ? makeLateRebindFn(name) : bindFunction(name);\n        return acc;\n    }, target);\n}\n/**\n * prototypal inheritance helper.\n * Creates a new object which has `parent` object as its prototype, and then copies the properties from `extra` onto it\n */\nexport var inherit = function (parent, extra) { return extend(Object.create(parent), extra); };\n/** Given an array, returns true if the object is found in the array, (using indexOf) */\nexport var inArray = curry(_inArray);\nexport function _inArray(array, obj) {\n    return array.indexOf(obj) !== -1;\n}\n/**\n * Given an array, and an item, if the item is found in the array, it removes it (in-place).\n * The same array is returned\n */\nexport var removeFrom = curry(_removeFrom);\nexport function _removeFrom(array, obj) {\n    var idx = array.indexOf(obj);\n    if (idx >= 0)\n        array.splice(idx, 1);\n    return array;\n}\n/** pushes a values to an array and returns the value */\nexport var pushTo = curry(_pushTo);\nexport function _pushTo(arr, val) {\n    return arr.push(val), val;\n}\n/** Given an array of (deregistration) functions, calls all functions and removes each one from the source array */\nexport var deregAll = function (functions) {\n    return functions.slice().forEach(function (fn) {\n        typeof fn === 'function' && fn();\n        removeFrom(functions, fn);\n    });\n};\n/**\n * Applies a set of defaults to an options object.  The options object is filtered\n * to only those properties of the objects in the defaultsList.\n * Earlier objects in the defaultsList take precedence when applying defaults.\n */\nexport function defaults(opts) {\n    var defaultsList = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        defaultsList[_i - 1] = arguments[_i];\n    }\n    var defaultVals = extend.apply(void 0, [{}].concat(defaultsList.reverse()));\n    return extend(defaultVals, pick(opts || {}, Object.keys(defaultVals)));\n}\n/** Reduce function that merges each element of the list into a single object, using extend */\nexport var mergeR = function (memo, item) { return extend(memo, item); };\n/**\n * Finds the common ancestor path between two states.\n *\n * @param {Object} first The first state.\n * @param {Object} second The second state.\n * @return {Array} Returns an array of state names in descending order, not including the root.\n */\nexport function ancestors(first, second) {\n    var path = [];\n    // tslint:disable-next-line:forin\n    for (var n in first.path) {\n        if (first.path[n] !== second.path[n])\n            break;\n        path.push(first.path[n]);\n    }\n    return path;\n}\n/**\n * Return a copy of the object only containing the whitelisted properties.\n *\n * #### Example:\n * ```\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = pick(foo, ['a', 'b']); // { a: 1, b: 2 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the whitelisted property names\n */\nexport function pick(obj, propNames) {\n    var objCopy = {};\n    for (var _prop in obj) {\n        if (propNames.indexOf(_prop) !== -1) {\n            objCopy[_prop] = obj[_prop];\n        }\n    }\n    return objCopy;\n}\n/**\n * Return a copy of the object omitting the blacklisted properties.\n *\n * @example\n * ```\n *\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = omit(foo, ['a', 'b']); // { c: 3 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the blacklisted property names\n */\nexport function omit(obj, propNames) {\n    return Object.keys(obj)\n        .filter(not(inArray(propNames)))\n        .reduce(function (acc, key) { return ((acc[key] = obj[key]), acc); }, {});\n}\n/**\n * Maps an array, or object to a property (by name)\n */\nexport function pluck(collection, propName) {\n    return map(collection, prop(propName));\n}\n/** Filters an Array or an Object's properties based on a predicate */\nexport function filter(collection, callback) {\n    var arr = isArray(collection), result = arr ? [] : {};\n    var accept = arr ? function (x) { return result.push(x); } : function (x, key) { return (result[key] = x); };\n    forEach(collection, function (item, i) {\n        if (callback(item, i))\n            accept(item, i);\n    });\n    return result;\n}\n/** Finds an object from an array, or a property of an object, that matches a predicate */\nexport function find(collection, callback) {\n    var result;\n    forEach(collection, function (item, i) {\n        if (result)\n            return;\n        if (callback(item, i))\n            result = item;\n    });\n    return result;\n}\n/** Given an object, returns a new object, where each property is transformed by the callback function */\nexport var mapObj = map;\n/** Maps an array or object properties using a callback function */\nexport function map(collection, callback, target) {\n    target = target || (isArray(collection) ? [] : {});\n    forEach(collection, function (item, i) { return (target[i] = callback(item, i)); });\n    return target;\n}\n/**\n * Given an object, return its enumerable property values\n *\n * @example\n * ```\n *\n * let foo = { a: 1, b: 2, c: 3 }\n * let vals = values(foo); // [ 1, 2, 3 ]\n * ```\n */\nexport var values = function (obj) { return Object.keys(obj).map(function (key) { return obj[key]; }); };\n/**\n * Reduce function that returns true if all of the values are truthy.\n *\n * @example\n * ```\n *\n * let vals = [ 1, true, {}, \"hello world\"];\n * vals.reduce(allTrueR, true); // true\n *\n * vals.push(0);\n * vals.reduce(allTrueR, true); // false\n * ```\n */\nexport var allTrueR = function (memo, elem) { return memo && elem; };\n/**\n * Reduce function that returns true if any of the values are truthy.\n *\n *  * @example\n * ```\n *\n * let vals = [ 0, null, undefined ];\n * vals.reduce(anyTrueR, true); // false\n *\n * vals.push(\"hello world\");\n * vals.reduce(anyTrueR, true); // true\n * ```\n */\nexport var anyTrueR = function (memo, elem) { return memo || elem; };\n/**\n * Reduce function which un-nests a single level of arrays\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexport var unnestR = function (memo, elem) { return memo.concat(elem); };\n/**\n * Reduce function which recursively un-nests all arrays\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexport var flattenR = function (memo, elem) {\n    return isArray(elem) ? memo.concat(elem.reduce(flattenR, [])) : pushR(memo, elem);\n};\n/**\n * Reduce function that pushes an object to an array, then returns the array.\n * Mostly just for [[flattenR]] and [[uniqR]]\n */\nexport function pushR(arr, obj) {\n    arr.push(obj);\n    return arr;\n}\n/** Reduce function that filters out duplicates */\nexport var uniqR = function (acc, token) { return (inArray(acc, token) ? acc : pushR(acc, token)); };\n/**\n * Return a new array with a single level of arrays unnested.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * unnest(input) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexport var unnest = function (arr) { return arr.reduce(unnestR, []); };\n/**\n * Return a completely flattened version of an array.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * flatten(input) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexport var flatten = function (arr) { return arr.reduce(flattenR, []); };\n/**\n * Given a .filter Predicate, builds a .filter Predicate which throws an error if any elements do not pass.\n * @example\n * ```\n *\n * let isNumber = (obj) => typeof(obj) === 'number';\n * let allNumbers = [ 1, 2, 3, 4, 5 ];\n * allNumbers.filter(assertPredicate(isNumber)); //OK\n *\n * let oneString = [ 1, 2, 3, 4, \"5\" ];\n * oneString.filter(assertPredicate(isNumber, \"Not all numbers\")); // throws Error(\"\"Not all numbers\"\");\n * ```\n */\nexport var assertPredicate = assertFn;\n/**\n * Given a .map function, builds a .map function which throws an error if any mapped elements do not pass a truthyness test.\n * @example\n * ```\n *\n * var data = { foo: 1, bar: 2 };\n *\n * let keys = [ 'foo', 'bar' ]\n * let values = keys.map(assertMap(key => data[key], \"Key not found\"));\n * // values is [1, 2]\n *\n * let keys = [ 'foo', 'bar', 'baz' ]\n * let values = keys.map(assertMap(key => data[key], \"Key not found\"));\n * // throws Error(\"Key not found\")\n * ```\n */\nexport var assertMap = assertFn;\nexport function assertFn(predicateOrMap, errMsg) {\n    if (errMsg === void 0) { errMsg = 'assert failure'; }\n    return function (obj) {\n        var result = predicateOrMap(obj);\n        if (!result) {\n            throw new Error(isFunction(errMsg) ? errMsg(obj) : errMsg);\n        }\n        return result;\n    };\n}\n/**\n * Like _.pairs: Given an object, returns an array of key/value pairs\n *\n * @example\n * ```\n *\n * pairs({ foo: \"FOO\", bar: \"BAR }) // [ [ \"foo\", \"FOO\" ], [ \"bar\": \"BAR\" ] ]\n * ```\n */\nexport var pairs = function (obj) { return Object.keys(obj).map(function (key) { return [key, obj[key]]; }); };\n/**\n * Given two or more parallel arrays, returns an array of tuples where\n * each tuple is composed of [ a[i], b[i], ... z[i] ]\n *\n * @example\n * ```\n *\n * let foo = [ 0, 2, 4, 6 ];\n * let bar = [ 1, 3, 5, 7 ];\n * let baz = [ 10, 30, 50, 70 ];\n * arrayTuples(foo, bar);       // [ [0, 1], [2, 3], [4, 5], [6, 7] ]\n * arrayTuples(foo, bar, baz);  // [ [0, 1, 10], [2, 3, 30], [4, 5, 50], [6, 7, 70] ]\n * ```\n */\nexport function arrayTuples() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 0)\n        return [];\n    var maxArrayLen = args.reduce(function (min, arr) { return Math.min(arr.length, min); }, 9007199254740991); // aka 2^53 − 1 aka Number.MAX_SAFE_INTEGER\n    var result = [];\n    var _loop_1 = function (i) {\n        // This is a hot function\n        // Unroll when there are 1-4 arguments\n        switch (args.length) {\n            case 1:\n                result.push([args[0][i]]);\n                break;\n            case 2:\n                result.push([args[0][i], args[1][i]]);\n                break;\n            case 3:\n                result.push([args[0][i], args[1][i], args[2][i]]);\n                break;\n            case 4:\n                result.push([args[0][i], args[1][i], args[2][i], args[3][i]]);\n                break;\n            default:\n                result.push(args.map(function (array) { return array[i]; }));\n                break;\n        }\n    };\n    for (var i = 0; i < maxArrayLen; i++) {\n        _loop_1(i);\n    }\n    return result;\n}\n/**\n * Reduce function which builds an object from an array of [key, value] pairs.\n *\n * Each iteration sets the key/val pair on the memo object, then returns the memo for the next iteration.\n *\n * Each keyValueTuple should be an array with values [ key: string, value: any ]\n *\n * @example\n * ```\n *\n * var pairs = [ [\"fookey\", \"fooval\"], [\"barkey\", \"barval\"] ]\n *\n * var pairsToObj = pairs.reduce((memo, pair) => applyPairs(memo, pair), {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n *\n * // Or, more simply:\n * var pairsToObj = pairs.reduce(applyPairs, {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n * ```\n */\nexport function applyPairs(memo, keyValTuple) {\n    var key, value;\n    if (isArray(keyValTuple))\n        key = keyValTuple[0], value = keyValTuple[1];\n    if (!isString(key))\n        throw new Error('invalid parameters to applyPairs');\n    memo[key] = value;\n    return memo;\n}\n/** Get the last element of an array */\nexport function tail(arr) {\n    return (arr.length && arr[arr.length - 1]) || undefined;\n}\n/**\n * shallow copy from src to dest\n */\nexport function copy(src, dest) {\n    if (dest)\n        Object.keys(dest).forEach(function (key) { return delete dest[key]; });\n    if (!dest)\n        dest = {};\n    return extend(dest, src);\n}\n/** Naive forEach implementation works with Objects or Arrays */\nfunction _forEach(obj, cb, _this) {\n    if (isArray(obj))\n        return obj.forEach(cb, _this);\n    Object.keys(obj).forEach(function (key) { return cb(obj[key], key); });\n}\nexport function _extend(toObj) {\n    for (var i = 1; i < arguments.length; i++) {\n        var obj = arguments[i];\n        if (!obj)\n            continue;\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; j++) {\n            toObj[keys[j]] = obj[keys[j]];\n        }\n    }\n    return toObj;\n}\nfunction _equals(o1, o2) {\n    if (o1 === o2)\n        return true;\n    if (o1 === null || o2 === null)\n        return false;\n    if (o1 !== o1 && o2 !== o2)\n        return true; // NaN === NaN\n    var t1 = typeof o1, t2 = typeof o2;\n    if (t1 !== t2 || t1 !== 'object')\n        return false;\n    var tup = [o1, o2];\n    if (all(isArray)(tup))\n        return _arraysEq(o1, o2);\n    if (all(isDate)(tup))\n        return o1.getTime() === o2.getTime();\n    if (all(isRegExp)(tup))\n        return o1.toString() === o2.toString();\n    if (all(isFunction)(tup))\n        return true; // meh\n    var predicates = [isFunction, isArray, isDate, isRegExp];\n    if (predicates.map(any).reduce(function (b, fn) { return b || !!fn(tup); }, false))\n        return false;\n    var keys = {};\n    // tslint:disable-next-line:forin\n    for (var key in o1) {\n        if (!_equals(o1[key], o2[key]))\n            return false;\n        keys[key] = true;\n    }\n    for (var key in o2) {\n        if (!keys[key])\n            return false;\n    }\n    return true;\n}\nfunction _arraysEq(a1, a2) {\n    if (a1.length !== a2.length)\n        return false;\n    return arrayTuples(a1, a2).reduce(function (b, t) { return b && _equals(t[0], t[1]); }, true);\n}\n// issue #2676\nexport var silenceUncaughtInPromise = function (promise) { return promise.catch(function (e) { return 0; }) && promise; };\nexport var silentRejection = function (error) { return silenceUncaughtInPromise(services.$q.reject(error)); };\n//# sourceMappingURL=common.js.map","/** @publicapi @module transition */ /** */\n'use strict';\nimport { extend, silentRejection } from '../common/common';\nimport { stringify } from '../common/strings';\nimport { is } from '../common/hof';\nvar RejectType;\n(function (RejectType) {\n    /**\n     * A new transition superseded this one.\n     *\n     * While this transition was running, a new transition started.\n     * This transition is cancelled because it was superseded by new transition.\n     */\n    RejectType[RejectType[\"SUPERSEDED\"] = 2] = \"SUPERSEDED\";\n    /**\n     * The transition was aborted\n     *\n     * The transition was aborted by a hook which returned `false`\n     */\n    RejectType[RejectType[\"ABORTED\"] = 3] = \"ABORTED\";\n    /**\n     * The transition was invalid\n     *\n     * The transition was never started because it was invalid\n     */\n    RejectType[RejectType[\"INVALID\"] = 4] = \"INVALID\";\n    /**\n     * The transition was ignored\n     *\n     * The transition was ignored because it would have no effect.\n     *\n     * Either:\n     *\n     * - The transition is targeting the current state and parameter values\n     * - The transition is targeting the same state and parameter values as the currently running transition.\n     */\n    RejectType[RejectType[\"IGNORED\"] = 5] = \"IGNORED\";\n    /**\n     * The transition errored.\n     *\n     * This generally means a hook threw an error or returned a rejected promise\n     */\n    RejectType[RejectType[\"ERROR\"] = 6] = \"ERROR\";\n})(RejectType || (RejectType = {}));\nexport { RejectType };\n/** @hidden */\nvar id = 0;\nvar Rejection = /** @class */ (function () {\n    function Rejection(type, message, detail) {\n        /** @hidden */\n        this.$id = id++;\n        this.type = type;\n        this.message = message;\n        this.detail = detail;\n    }\n    /** Returns true if the obj is a rejected promise created from the `asPromise` factory */\n    Rejection.isRejectionPromise = function (obj) {\n        return obj && typeof obj.then === 'function' && is(Rejection)(obj._transitionRejection);\n    };\n    /** Returns a Rejection due to transition superseded */\n    Rejection.superseded = function (detail, options) {\n        var message = 'The transition has been superseded by a different transition';\n        var rejection = new Rejection(RejectType.SUPERSEDED, message, detail);\n        if (options && options.redirected) {\n            rejection.redirected = true;\n        }\n        return rejection;\n    };\n    /** Returns a Rejection due to redirected transition */\n    Rejection.redirected = function (detail) {\n        return Rejection.superseded(detail, { redirected: true });\n    };\n    /** Returns a Rejection due to invalid transition */\n    Rejection.invalid = function (detail) {\n        var message = 'This transition is invalid';\n        return new Rejection(RejectType.INVALID, message, detail);\n    };\n    /** Returns a Rejection due to ignored transition */\n    Rejection.ignored = function (detail) {\n        var message = 'The transition was ignored';\n        return new Rejection(RejectType.IGNORED, message, detail);\n    };\n    /** Returns a Rejection due to aborted transition */\n    Rejection.aborted = function (detail) {\n        var message = 'The transition has been aborted';\n        return new Rejection(RejectType.ABORTED, message, detail);\n    };\n    /** Returns a Rejection due to aborted transition */\n    Rejection.errored = function (detail) {\n        var message = 'The transition errored';\n        return new Rejection(RejectType.ERROR, message, detail);\n    };\n    /**\n     * Returns a Rejection\n     *\n     * Normalizes a value as a Rejection.\n     * If the value is already a Rejection, returns it.\n     * Otherwise, wraps and returns the value as a Rejection (Rejection type: ERROR).\n     *\n     * @returns `detail` if it is already a `Rejection`, else returns an ERROR Rejection.\n     */\n    Rejection.normalize = function (detail) {\n        return is(Rejection)(detail) ? detail : Rejection.errored(detail);\n    };\n    Rejection.prototype.toString = function () {\n        var detailString = function (d) { return (d && d.toString !== Object.prototype.toString ? d.toString() : stringify(d)); };\n        var detail = detailString(this.detail);\n        var _a = this, $id = _a.$id, type = _a.type, message = _a.message;\n        return \"Transition Rejection($id: \" + $id + \" type: \" + type + \", message: \" + message + \", detail: \" + detail + \")\";\n    };\n    Rejection.prototype.toPromise = function () {\n        return extend(silentRejection(this), { _transitionRejection: this });\n    };\n    return Rejection;\n}());\nexport { Rejection };\n//# sourceMappingURL=rejectFactory.js.map","/** @publicapi @module core */\n/**\n * Matches state names using glob-like pattern strings.\n *\n * Globs can be used in specific APIs including:\n *\n * - [[StateService.is]]\n * - [[StateService.includes]]\n * - The first argument to Hook Registration functions like [[TransitionService.onStart]]\n *    - [[HookMatchCriteria]] and [[HookMatchCriterion]]\n *\n * A `Glob` string is a pattern which matches state names.\n * Nested state names are split into segments (separated by a dot) when processing.\n * The state named `foo.bar.baz` is split into three segments ['foo', 'bar', 'baz']\n *\n * Globs work according to the following rules:\n *\n * ### Exact match:\n *\n * The glob `'A.B'` matches the state named exactly `'A.B'`.\n *\n * | Glob        |Matches states named|Does not match state named|\n * |:------------|:--------------------|:---------------------|\n * | `'A'`       | `'A'`               | `'B'` , `'A.C'`      |\n * | `'A.B'`     | `'A.B'`             | `'A'` , `'A.B.C'`    |\n * | `'foo'`     | `'foo'`             | `'FOO'` , `'foo.bar'`|\n *\n * ### Single star (`*`)\n *\n * A single star (`*`) is a wildcard that matches exactly one segment.\n *\n * | Glob        |Matches states named  |Does not match state named |\n * |:------------|:---------------------|:--------------------------|\n * | `'*'`       | `'A'` , `'Z'`        | `'A.B'` , `'Z.Y.X'`       |\n * | `'A.*'`     | `'A.B'` , `'A.C'`    | `'A'` , `'A.B.C'`         |\n * | `'A.*.*'`   | `'A.B.C'` , `'A.X.Y'`| `'A'`, `'A.B'` , `'Z.Y.X'`|\n *\n * ### Double star (`**`)\n *\n * A double star (`'**'`) is a wildcard that matches *zero or more segments*\n *\n * | Glob        |Matches states named                           |Does not match state named         |\n * |:------------|:----------------------------------------------|:----------------------------------|\n * | `'**'`      | `'A'` , `'A.B'`, `'Z.Y.X'`                    | (matches all states)              |\n * | `'A.**'`    | `'A'` , `'A.B'` , `'A.C.X'`                   | `'Z.Y.X'`                         |\n * | `'**.X'`    | `'X'` , `'A.X'` , `'Z.Y.X'`                   | `'A'` , `'A.login.Z'`             |\n * | `'A.**.X'`  | `'A.X'` , `'A.B.X'` , `'A.B.C.X'`             | `'A'` , `'A.B.C'`                 |\n *\n */\nvar Glob = /** @class */ (function () {\n    function Glob(text) {\n        this.text = text;\n        this.glob = text.split('.');\n        var regexpString = this.text\n            .split('.')\n            .map(function (seg) {\n            if (seg === '**')\n                return '(?:|(?:\\\\.[^.]*)*)';\n            if (seg === '*')\n                return '\\\\.[^.]*';\n            return '\\\\.' + seg;\n        })\n            .join('');\n        this.regexp = new RegExp('^' + regexpString + '$');\n    }\n    /** Returns true if the string has glob-like characters in it */\n    Glob.is = function (text) {\n        return !!/[!,*]+/.exec(text);\n    };\n    /** Returns a glob from the string, or null if the string isn't Glob-like */\n    Glob.fromString = function (text) {\n        return Glob.is(text) ? new Glob(text) : null;\n    };\n    Glob.prototype.matches = function (name) {\n        return this.regexp.test('.' + name);\n    };\n    return Glob;\n}());\nexport { Glob };\n//# sourceMappingURL=glob.js.map","/** @publicapi @module common */ /** */\nimport { pushTo } from './common';\nvar Queue = /** @class */ (function () {\n    function Queue(_items, _limit) {\n        if (_items === void 0) { _items = []; }\n        if (_limit === void 0) { _limit = null; }\n        this._items = _items;\n        this._limit = _limit;\n        this._evictListeners = [];\n        this.onEvict = pushTo(this._evictListeners);\n    }\n    Queue.prototype.enqueue = function (item) {\n        var items = this._items;\n        items.push(item);\n        if (this._limit && items.length > this._limit)\n            this.evict();\n        return item;\n    };\n    Queue.prototype.evict = function () {\n        var item = this._items.shift();\n        this._evictListeners.forEach(function (fn) { return fn(item); });\n        return item;\n    };\n    Queue.prototype.dequeue = function () {\n        if (this.size())\n            return this._items.splice(0, 1)[0];\n    };\n    Queue.prototype.clear = function () {\n        var current = this._items;\n        this._items = [];\n        return current;\n    };\n    Queue.prototype.size = function () {\n        return this._items.length;\n    };\n    Queue.prototype.remove = function (item) {\n        var idx = this._items.indexOf(item);\n        return idx > -1 && this._items.splice(idx, 1)[0];\n    };\n    Queue.prototype.peekTail = function () {\n        return this._items[this._items.length - 1];\n    };\n    Queue.prototype.peekHead = function () {\n        if (this.size())\n            return this._items[0];\n    };\n    return Queue;\n}());\nexport { Queue };\n//# sourceMappingURL=queue.js.map","/**\n * Functions that manipulate strings\n *\n * Although these functions are exported, they are subject to change without notice.\n *\n * @module common_strings\n */ /** */\nimport { isArray, isFunction, isInjectable, isNull, isObject, isPromise, isString, isUndefined } from './predicates';\nimport { Rejection } from '../transition/rejectFactory';\nimport { identity, pushR, tail } from './common';\nimport { pattern, val } from './hof';\n/**\n * Returns a string shortened to a maximum length\n *\n * If the string is already less than the `max` length, return the string.\n * Else return the string, shortened to `max - 3` and append three dots (\"...\").\n *\n * @param max the maximum length of the string to return\n * @param str the input string\n */\nexport function maxLength(max, str) {\n    if (str.length <= max)\n        return str;\n    return str.substr(0, max - 3) + '...';\n}\n/**\n * Returns a string, with spaces added to the end, up to a desired str length\n *\n * If the string is already longer than the desired length, return the string.\n * Else returns the string, with extra spaces on the end, such that it reaches `length` characters.\n *\n * @param length the desired length of the string to return\n * @param str the input string\n */\nexport function padString(length, str) {\n    while (str.length < length)\n        str += ' ';\n    return str;\n}\nexport function kebobString(camelCase) {\n    return camelCase\n        .replace(/^([A-Z])/, function ($1) { return $1.toLowerCase(); }) // replace first char\n        .replace(/([A-Z])/g, function ($1) { return '-' + $1.toLowerCase(); }); // replace rest\n}\nexport function functionToString(fn) {\n    var fnStr = fnToString(fn);\n    var namedFunctionMatch = fnStr.match(/^(function [^ ]+\\([^)]*\\))/);\n    var toStr = namedFunctionMatch ? namedFunctionMatch[1] : fnStr;\n    var fnName = fn['name'] || '';\n    if (fnName && toStr.match(/function \\(/)) {\n        return 'function ' + fnName + toStr.substr(9);\n    }\n    return toStr;\n}\nexport function fnToString(fn) {\n    var _fn = isArray(fn) ? fn.slice(-1)[0] : fn;\n    return (_fn && _fn.toString()) || 'undefined';\n}\nvar isRejection = Rejection.isRejectionPromise;\nvar hasToString = function (obj) {\n    return isObject(obj) && !isArray(obj) && obj.constructor !== Object && isFunction(obj.toString);\n};\nvar stringifyPattern = pattern([\n    [isUndefined, val('undefined')],\n    [isNull, val('null')],\n    [isPromise, val('[Promise]')],\n    [isRejection, function (x) { return x._transitionRejection.toString(); }],\n    [hasToString, function (x) { return x.toString(); }],\n    [isInjectable, functionToString],\n    [val(true), identity],\n]);\nexport function stringify(o) {\n    var seen = [];\n    function format(value) {\n        if (isObject(value)) {\n            if (seen.indexOf(value) !== -1)\n                return '[circular ref]';\n            seen.push(value);\n        }\n        return stringifyPattern(value);\n    }\n    if (isUndefined(o)) {\n        // Workaround for IE & Edge Spec incompatibility where replacer function would not be called when JSON.stringify\n        // is given `undefined` as value. To work around that, we simply detect `undefined` and bail out early by\n        // manually stringifying it.\n        return format(o);\n    }\n    return JSON.stringify(o, function (key, value) { return format(value); }).replace(/\\\\\"/g, '\"');\n}\n/** Returns a function that splits a string on a character or substring */\nexport var beforeAfterSubstr = function (char) { return function (str) {\n    if (!str)\n        return ['', ''];\n    var idx = str.indexOf(char);\n    if (idx === -1)\n        return [str, ''];\n    return [str.substr(0, idx), str.substr(idx + 1)];\n}; };\nexport var hostRegex = new RegExp('^(?:[a-z]+:)?//[^/]+/');\nexport var stripLastPathElement = function (str) { return str.replace(/\\/[^/]*$/, ''); };\nexport var splitHash = beforeAfterSubstr('#');\nexport var splitQuery = beforeAfterSubstr('?');\nexport var splitEqual = beforeAfterSubstr('=');\nexport var trimHashVal = function (str) { return (str ? str.replace(/^#/, '') : ''); };\n/**\n * Splits on a delimiter, but returns the delimiters in the array\n *\n * #### Example:\n * ```js\n * var splitOnSlashes = splitOnDelim('/');\n * splitOnSlashes(\"/foo\"); // [\"/\", \"foo\"]\n * splitOnSlashes(\"/foo/\"); // [\"/\", \"foo\", \"/\"]\n * ```\n */\nexport function splitOnDelim(delim) {\n    var re = new RegExp('(' + delim + ')', 'g');\n    return function (str) { return str.split(re).filter(identity); };\n}\n/**\n * Reduce fn that joins neighboring strings\n *\n * Given an array of strings, returns a new array\n * where all neighboring strings have been joined.\n *\n * #### Example:\n * ```js\n * let arr = [\"foo\", \"bar\", 1, \"baz\", \"\", \"qux\" ];\n * arr.reduce(joinNeighborsR, []) // [\"foobar\", 1, \"bazqux\" ]\n * ```\n */\nexport function joinNeighborsR(acc, x) {\n    if (isString(tail(acc)) && isString(x))\n        return acc.slice(0, -1).concat(tail(acc) + x);\n    return pushR(acc, x);\n}\n//# sourceMappingURL=strings.js.map","/**\n * # Transition tracing (debug)\n *\n * Enable transition tracing to print transition information to the console,\n * in order to help debug your application.\n * Tracing logs detailed information about each Transition to your console.\n *\n * To enable tracing, import the [[Trace]] singleton and enable one or more categories.\n *\n * ### ES6\n * ```js\n * import {trace} from \"@uirouter/core\";\n * trace.enable(1, 5); // TRANSITION and VIEWCONFIG\n * ```\n *\n * ### CJS\n * ```js\n * let trace = require(\"@uirouter/core\").trace;\n * trace.enable(\"TRANSITION\", \"VIEWCONFIG\");\n * ```\n *\n * ### Globals\n * ```js\n * let trace = window[\"@uirouter/core\"].trace;\n * trace.enable(); // Trace everything (very verbose)\n * ```\n *\n * ### Angular 1:\n * ```js\n * app.run($trace => $trace.enable());\n * ```\n *\n * @publicapi @module trace\n */\n/* tslint:disable:no-console */\nimport { parse } from '../common/hof';\nimport { isFunction, isNumber } from '../common/predicates';\nimport { stringify, functionToString, maxLength, padString } from './strings';\n/** @hidden */\nfunction uiViewString(uiview) {\n    if (!uiview)\n        return 'ui-view (defunct)';\n    var state = uiview.creationContext ? uiview.creationContext.name || '(root)' : '(none)';\n    return \"[ui-view#\" + uiview.id + \" \" + uiview.$type + \":\" + uiview.fqn + \" (\" + uiview.name + \"@\" + state + \")]\";\n}\n/** @hidden */\nvar viewConfigString = function (viewConfig) {\n    var view = viewConfig.viewDecl;\n    var state = view.$context.name || '(root)';\n    return \"[View#\" + viewConfig.$id + \" from '\" + state + \"' state]: target ui-view: '\" + view.$uiViewName + \"@\" + view.$uiViewContextAnchor + \"'\";\n};\n/** @hidden */\nfunction normalizedCat(input) {\n    return isNumber(input) ? Category[input] : Category[Category[input]];\n}\n/** @hidden */\nvar consoleLog = Function.prototype.bind.call(console.log, console);\n/** @hidden */\nvar consoletable = isFunction(console.table) ? console.table.bind(console) : consoleLog.bind(console);\n/**\n * Trace categories Enum\n *\n * Enable or disable a category using [[Trace.enable]] or [[Trace.disable]]\n *\n * `trace.enable(Category.TRANSITION)`\n *\n * These can also be provided using a matching string, or position ordinal\n *\n * `trace.enable(\"TRANSITION\")`\n *\n * `trace.enable(1)`\n */\nvar Category;\n(function (Category) {\n    Category[Category[\"RESOLVE\"] = 0] = \"RESOLVE\";\n    Category[Category[\"TRANSITION\"] = 1] = \"TRANSITION\";\n    Category[Category[\"HOOK\"] = 2] = \"HOOK\";\n    Category[Category[\"UIVIEW\"] = 3] = \"UIVIEW\";\n    Category[Category[\"VIEWCONFIG\"] = 4] = \"VIEWCONFIG\";\n})(Category || (Category = {}));\nexport { Category };\n/** @hidden */\nvar _tid = parse('$id');\n/** @hidden */\nvar _rid = parse('router.$id');\n/** @hidden */\nvar transLbl = function (trans) { return \"Transition #\" + _tid(trans) + \"-\" + _rid(trans); };\n/**\n * Prints UI-Router Transition trace information to the console.\n */\nvar Trace = /** @class */ (function () {\n    /** @hidden */\n    function Trace() {\n        /** @hidden */\n        this._enabled = {};\n        this.approximateDigests = 0;\n    }\n    /** @hidden */\n    Trace.prototype._set = function (enabled, categories) {\n        var _this = this;\n        if (!categories.length) {\n            categories = Object.keys(Category)\n                .map(function (k) { return parseInt(k, 10); })\n                .filter(function (k) { return !isNaN(k); })\n                .map(function (key) { return Category[key]; });\n        }\n        categories.map(normalizedCat).forEach(function (category) { return (_this._enabled[category] = enabled); });\n    };\n    Trace.prototype.enable = function () {\n        var categories = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            categories[_i] = arguments[_i];\n        }\n        this._set(true, categories);\n    };\n    Trace.prototype.disable = function () {\n        var categories = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            categories[_i] = arguments[_i];\n        }\n        this._set(false, categories);\n    };\n    /**\n     * Retrieves the enabled stateus of a [[Category]]\n     *\n     * ```js\n     * trace.enabled(\"VIEWCONFIG\"); // true or false\n     * ```\n     *\n     * @returns boolean true if the category is enabled\n     */\n    Trace.prototype.enabled = function (category) {\n        return !!this._enabled[normalizedCat(category)];\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceTransitionStart = function (trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": Started  -> \" + stringify(trans));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceTransitionIgnored = function (trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": Ignored  <> \" + stringify(trans));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceHookInvocation = function (step, trans, options) {\n        if (!this.enabled(Category.HOOK))\n            return;\n        var event = parse('traceData.hookType')(options) || 'internal', context = parse('traceData.context.state.name')(options) || parse('traceData.context')(options) || 'unknown', name = functionToString(step.registeredHook.callback);\n        console.log(transLbl(trans) + \":   Hook -> \" + event + \" context: \" + context + \", \" + maxLength(200, name));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceHookResult = function (hookResult, trans, transitionOptions) {\n        if (!this.enabled(Category.HOOK))\n            return;\n        console.log(transLbl(trans) + \":   <- Hook returned: \" + maxLength(200, stringify(hookResult)));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceResolvePath = function (path, when, trans) {\n        if (!this.enabled(Category.RESOLVE))\n            return;\n        console.log(transLbl(trans) + \":         Resolving \" + path + \" (\" + when + \")\");\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceResolvableResolved = function (resolvable, trans) {\n        if (!this.enabled(Category.RESOLVE))\n            return;\n        console.log(transLbl(trans) + \":               <- Resolved  \" + resolvable + \" to: \" + maxLength(200, stringify(resolvable.data)));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceError = function (reason, trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": <- Rejected \" + stringify(trans) + \", reason: \" + reason);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceSuccess = function (finalState, trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": <- Success  \" + stringify(trans) + \", final state: \" + finalState.name);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewEvent = function (event, viewData, extra) {\n        if (extra === void 0) { extra = ''; }\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        console.log(\"ui-view: \" + padString(30, event) + \" \" + uiViewString(viewData) + extra);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewConfigUpdated = function (viewData, context) {\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        this.traceUIViewEvent('Updating', viewData, \" with ViewConfig from context='\" + context + \"'\");\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewFill = function (viewData, html) {\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        this.traceUIViewEvent('Fill', viewData, \" with: \" + maxLength(200, html));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewSync = function (pairs) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        var uivheader = 'uiview component fqn';\n        var cfgheader = 'view config state (view name)';\n        var mapping = pairs\n            .map(function (_a) {\n            var uiView = _a.uiView, viewConfig = _a.viewConfig;\n            var _b;\n            var uiv = uiView && uiView.fqn;\n            var cfg = viewConfig && viewConfig.viewDecl.$context.name + \": (\" + viewConfig.viewDecl.$name + \")\";\n            return _b = {}, _b[uivheader] = uiv, _b[cfgheader] = cfg, _b;\n        })\n            .sort(function (a, b) { return (a[uivheader] || '').localeCompare(b[uivheader] || ''); });\n        consoletable(mapping);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewServiceEvent = function (event, viewConfig) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        console.log(\"VIEWCONFIG: \" + event + \" \" + viewConfigString(viewConfig));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewServiceUIViewEvent = function (event, viewData) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        console.log(\"VIEWCONFIG: \" + event + \" \" + uiViewString(viewData));\n    };\n    return Trace;\n}());\nexport { Trace };\n/**\n * The [[Trace]] singleton\n *\n * #### Example:\n * ```js\n * import {trace} from \"@uirouter/core\";\n * trace.enable(1, 5);\n * ```\n */\nvar trace = new Trace();\nexport { trace };\n//# sourceMappingURL=trace.js.map","/** @publicapi @module params */ /** */\nimport { extend, filter, map } from '../common/common';\nimport { isArray, isDefined } from '../common/predicates';\n/**\n * An internal class which implements [[ParamTypeDefinition]].\n *\n * A [[ParamTypeDefinition]] is a plain javascript object used to register custom parameter types.\n * When a param type definition is registered, an instance of this class is created internally.\n *\n * This class has naive implementations for all the [[ParamTypeDefinition]] methods.\n *\n * Used by [[UrlMatcher]] when matching or formatting URLs, or comparing and validating parameter values.\n *\n * #### Example:\n * ```js\n * var paramTypeDef = {\n *   decode: function(val) { return parseInt(val, 10); },\n *   encode: function(val) { return val && val.toString(); },\n *   equals: function(a, b) { return this.is(a) && a === b; },\n *   is: function(val) { return angular.isNumber(val) && isFinite(val) && val % 1 === 0; },\n *   pattern: /\\d+/\n * }\n *\n * var paramType = new ParamType(paramTypeDef);\n * ```\n * @internalapi\n */\nvar ParamType = /** @class */ (function () {\n    /**\n     * @param def  A configuration object which contains the custom type definition.  The object's\n     *        properties will override the default methods and/or pattern in `ParamType`'s public interface.\n     * @returns a new ParamType object\n     */\n    function ParamType(def) {\n        /** @inheritdoc */\n        this.pattern = /.*/;\n        /** @inheritdoc */\n        this.inherit = true;\n        extend(this, def);\n    }\n    // consider these four methods to be \"abstract methods\" that should be overridden\n    /** @inheritdoc */\n    ParamType.prototype.is = function (val, key) {\n        return true;\n    };\n    /** @inheritdoc */\n    ParamType.prototype.encode = function (val, key) {\n        return val;\n    };\n    /** @inheritdoc */\n    ParamType.prototype.decode = function (val, key) {\n        return val;\n    };\n    /** @inheritdoc */\n    ParamType.prototype.equals = function (a, b) {\n        // tslint:disable-next-line:triple-equals\n        return a == b;\n    };\n    ParamType.prototype.$subPattern = function () {\n        var sub = this.pattern.toString();\n        return sub.substr(1, sub.length - 2);\n    };\n    ParamType.prototype.toString = function () {\n        return \"{ParamType:\" + this.name + \"}\";\n    };\n    /** Given an encoded string, or a decoded object, returns a decoded object */\n    ParamType.prototype.$normalize = function (val) {\n        return this.is(val) ? val : this.decode(val);\n    };\n    /**\n     * Wraps an existing custom ParamType as an array of ParamType, depending on 'mode'.\n     * e.g.:\n     * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n     * - url: \"/path?queryParam=1&queryParam=2\n     * - $stateParams.queryParam will be [1, 2]\n     * if `mode` is \"auto\", then\n     * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n     * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n     */\n    ParamType.prototype.$asArray = function (mode, isSearch) {\n        if (!mode)\n            return this;\n        if (mode === 'auto' && !isSearch)\n            throw new Error(\"'auto' array mode is for query parameters only\");\n        return new ArrayType(this, mode);\n    };\n    return ParamType;\n}());\nexport { ParamType };\n/**\n * Wraps up a `ParamType` object to handle array values.\n * @internalapi\n */\nfunction ArrayType(type, mode) {\n    var _this = this;\n    // Wrap non-array value as array\n    function arrayWrap(val) {\n        return isArray(val) ? val : isDefined(val) ? [val] : [];\n    }\n    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n    function arrayUnwrap(val) {\n        switch (val.length) {\n            case 0:\n                return undefined;\n            case 1:\n                return mode === 'auto' ? val[0] : val;\n            default:\n                return val;\n        }\n    }\n    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n    function arrayHandler(callback, allTruthyMode) {\n        return function handleArray(val) {\n            if (isArray(val) && val.length === 0)\n                return val;\n            var arr = arrayWrap(val);\n            var result = map(arr, callback);\n            return allTruthyMode === true ? filter(result, function (x) { return !x; }).length === 0 : arrayUnwrap(result);\n        };\n    }\n    // Wraps type (.equals) functions to operate on each value of an array\n    function arrayEqualsHandler(callback) {\n        return function handleArray(val1, val2) {\n            var left = arrayWrap(val1), right = arrayWrap(val2);\n            if (left.length !== right.length)\n                return false;\n            for (var i = 0; i < left.length; i++) {\n                if (!callback(left[i], right[i]))\n                    return false;\n            }\n            return true;\n        };\n    }\n    ['encode', 'decode', 'equals', '$normalize'].forEach(function (name) {\n        var paramTypeFn = type[name].bind(type);\n        var wrapperFn = name === 'equals' ? arrayEqualsHandler : arrayHandler;\n        _this[name] = wrapperFn(paramTypeFn);\n    });\n    extend(this, {\n        dynamic: type.dynamic,\n        name: type.name,\n        pattern: type.pattern,\n        inherit: type.inherit,\n        raw: type.raw,\n        is: arrayHandler(type.is.bind(type), true),\n        $arrayMode: mode,\n    });\n}\n//# sourceMappingURL=paramType.js.map","/** @publicapi @module params */ /** */\nimport { extend, filter, map, allTrueR, find } from '../common/common';\nimport { prop } from '../common/hof';\nimport { isInjectable, isDefined, isString, isArray, isUndefined } from '../common/predicates';\nimport { services } from '../common/coreservices';\nimport { ParamType } from './paramType';\n/** @hidden */\nvar hasOwn = Object.prototype.hasOwnProperty;\n/** @hidden */\nvar isShorthand = function (cfg) {\n    return ['value', 'type', 'squash', 'array', 'dynamic'].filter(hasOwn.bind(cfg || {})).length === 0;\n};\n/** @internalapi */\nvar DefType;\n(function (DefType) {\n    DefType[DefType[\"PATH\"] = 0] = \"PATH\";\n    DefType[DefType[\"SEARCH\"] = 1] = \"SEARCH\";\n    DefType[DefType[\"CONFIG\"] = 2] = \"CONFIG\";\n})(DefType || (DefType = {}));\nexport { DefType };\n/** @internalapi */\nfunction getParamDeclaration(paramName, location, state) {\n    var noReloadOnSearch = (state.reloadOnSearch === false && location === DefType.SEARCH) || undefined;\n    var dynamic = find([state.dynamic, noReloadOnSearch], isDefined);\n    var defaultConfig = isDefined(dynamic) ? { dynamic: dynamic } : {};\n    var paramConfig = unwrapShorthand(state && state.params && state.params[paramName]);\n    return extend(defaultConfig, paramConfig);\n}\n/** @hidden */\nfunction unwrapShorthand(cfg) {\n    cfg = isShorthand(cfg) ? { value: cfg } : cfg;\n    getStaticDefaultValue['__cacheable'] = true;\n    function getStaticDefaultValue() {\n        return cfg.value;\n    }\n    var $$fn = isInjectable(cfg.value) ? cfg.value : getStaticDefaultValue;\n    return extend(cfg, { $$fn: $$fn });\n}\n/** @hidden */\nfunction getType(cfg, urlType, location, id, paramTypes) {\n    if (cfg.type && urlType && urlType.name !== 'string')\n        throw new Error(\"Param '\" + id + \"' has two type configurations.\");\n    if (cfg.type && urlType && urlType.name === 'string' && paramTypes.type(cfg.type))\n        return paramTypes.type(cfg.type);\n    if (urlType)\n        return urlType;\n    if (!cfg.type) {\n        var type = location === DefType.CONFIG\n            ? 'any'\n            : location === DefType.PATH\n                ? 'path'\n                : location === DefType.SEARCH\n                    ? 'query'\n                    : 'string';\n        return paramTypes.type(type);\n    }\n    return cfg.type instanceof ParamType ? cfg.type : paramTypes.type(cfg.type);\n}\n/**\n * @internalapi\n * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n */\nfunction getSquashPolicy(config, isOptional, defaultPolicy) {\n    var squash = config.squash;\n    if (!isOptional || squash === false)\n        return false;\n    if (!isDefined(squash) || squash == null)\n        return defaultPolicy;\n    if (squash === true || isString(squash))\n        return squash;\n    throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n}\n/** @internalapi */\nfunction getReplace(config, arrayMode, isOptional, squash) {\n    var defaultPolicy = [\n        { from: '', to: isOptional || arrayMode ? undefined : '' },\n        { from: null, to: isOptional || arrayMode ? undefined : '' },\n    ];\n    var replace = isArray(config.replace) ? config.replace : [];\n    if (isString(squash))\n        replace.push({ from: squash, to: undefined });\n    var configuredKeys = map(replace, prop('from'));\n    return filter(defaultPolicy, function (item) { return configuredKeys.indexOf(item.from) === -1; }).concat(replace);\n}\n/** @internalapi */\nvar Param = /** @class */ (function () {\n    function Param(id, type, location, urlConfig, state) {\n        var config = getParamDeclaration(id, location, state);\n        type = getType(config, type, location, id, urlConfig.paramTypes);\n        var arrayMode = getArrayMode();\n        type = arrayMode ? type.$asArray(arrayMode, location === DefType.SEARCH) : type;\n        var isOptional = config.value !== undefined || location === DefType.SEARCH;\n        var dynamic = isDefined(config.dynamic) ? !!config.dynamic : !!type.dynamic;\n        var raw = isDefined(config.raw) ? !!config.raw : !!type.raw;\n        var squash = getSquashPolicy(config, isOptional, urlConfig.defaultSquashPolicy());\n        var replace = getReplace(config, arrayMode, isOptional, squash);\n        var inherit = isDefined(config.inherit) ? !!config.inherit : !!type.inherit;\n        // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n        function getArrayMode() {\n            var arrayDefaults = { array: location === DefType.SEARCH ? 'auto' : false };\n            var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n            return extend(arrayDefaults, arrayParamNomenclature, config).array;\n        }\n        extend(this, { id: id, type: type, location: location, isOptional: isOptional, dynamic: dynamic, raw: raw, squash: squash, replace: replace, inherit: inherit, array: arrayMode, config: config });\n    }\n    Param.values = function (params, values) {\n        if (values === void 0) { values = {}; }\n        var paramValues = {};\n        for (var _i = 0, params_1 = params; _i < params_1.length; _i++) {\n            var param = params_1[_i];\n            paramValues[param.id] = param.value(values[param.id]);\n        }\n        return paramValues;\n    };\n    /**\n     * Finds [[Param]] objects which have different param values\n     *\n     * Filters a list of [[Param]] objects to only those whose parameter values differ in two param value objects\n     *\n     * @param params: The list of Param objects to filter\n     * @param values1: The first set of parameter values\n     * @param values2: the second set of parameter values\n     *\n     * @returns any Param objects whose values were different between values1 and values2\n     */\n    Param.changed = function (params, values1, values2) {\n        if (values1 === void 0) { values1 = {}; }\n        if (values2 === void 0) { values2 = {}; }\n        return params.filter(function (param) { return !param.type.equals(values1[param.id], values2[param.id]); });\n    };\n    /**\n     * Checks if two param value objects are equal (for a set of [[Param]] objects)\n     *\n     * @param params The list of [[Param]] objects to check\n     * @param values1 The first set of param values\n     * @param values2 The second set of param values\n     *\n     * @returns true if the param values in values1 and values2 are equal\n     */\n    Param.equals = function (params, values1, values2) {\n        if (values1 === void 0) { values1 = {}; }\n        if (values2 === void 0) { values2 = {}; }\n        return Param.changed(params, values1, values2).length === 0;\n    };\n    /** Returns true if a the parameter values are valid, according to the Param definitions */\n    Param.validates = function (params, values) {\n        if (values === void 0) { values = {}; }\n        return params.map(function (param) { return param.validates(values[param.id]); }).reduce(allTrueR, true);\n    };\n    Param.prototype.isDefaultValue = function (value) {\n        return this.isOptional && this.type.equals(this.value(), value);\n    };\n    /**\n     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n     * default value, which may be the result of an injectable function.\n     */\n    Param.prototype.value = function (value) {\n        var _this = this;\n        /**\n         * [Internal] Get the default value of a parameter, which may be an injectable function.\n         */\n        var getDefaultValue = function () {\n            if (_this._defaultValueCache)\n                return _this._defaultValueCache.defaultValue;\n            if (!services.$injector)\n                throw new Error('Injectable functions cannot be called at configuration time');\n            var defaultValue = services.$injector.invoke(_this.config.$$fn);\n            if (defaultValue !== null && defaultValue !== undefined && !_this.type.is(defaultValue))\n                throw new Error(\"Default value (\" + defaultValue + \") for parameter '\" + _this.id + \"' is not an instance of ParamType (\" + _this.type.name + \")\");\n            if (_this.config.$$fn['__cacheable']) {\n                _this._defaultValueCache = { defaultValue: defaultValue };\n            }\n            return defaultValue;\n        };\n        var replaceSpecialValues = function (val) {\n            for (var _i = 0, _a = _this.replace; _i < _a.length; _i++) {\n                var tuple = _a[_i];\n                if (tuple.from === val)\n                    return tuple.to;\n            }\n            return val;\n        };\n        value = replaceSpecialValues(value);\n        return isUndefined(value) ? getDefaultValue() : this.type.$normalize(value);\n    };\n    Param.prototype.isSearch = function () {\n        return this.location === DefType.SEARCH;\n    };\n    Param.prototype.validates = function (value) {\n        // There was no parameter value, but the param is optional\n        if ((isUndefined(value) || value === null) && this.isOptional)\n            return true;\n        // The value was not of the correct ParamType, and could not be decoded to the correct ParamType\n        var normalized = this.type.$normalize(value);\n        if (!this.type.is(normalized))\n            return false;\n        // The value was of the correct type, but when encoded, did not match the ParamType's regexp\n        var encoded = this.type.encode(normalized);\n        return !(isString(encoded) && !this.type.pattern.exec(encoded));\n    };\n    Param.prototype.toString = function () {\n        return \"{Param:\" + this.id + \" \" + this.type + \" squash: '\" + this.squash + \"' optional: \" + this.isOptional + \"}\";\n    };\n    return Param;\n}());\nexport { Param };\n//# sourceMappingURL=param.js.map","/** @publicapi @module params */ /** */\nimport { fromJson, toJson, identity, equals, inherit, map, extend, pick } from '../common/common';\nimport { isDefined, isNullOrUndefined } from '../common/predicates';\nimport { is } from '../common/hof';\nimport { services } from '../common/coreservices';\nimport { ParamType } from './paramType';\n/**\n * A registry for parameter types.\n *\n * This registry manages the built-in (and custom) parameter types.\n *\n * The built-in parameter types are:\n *\n * - [[string]]\n * - [[path]]\n * - [[query]]\n * - [[hash]]\n * - [[int]]\n * - [[bool]]\n * - [[date]]\n * - [[json]]\n * - [[any]]\n *\n * To register custom parameter types, use [[UrlConfig.type]], i.e.,\n *\n * ```js\n * router.urlService.config.type(customType)\n * ```\n */\nvar ParamTypes = /** @class */ (function () {\n    /** @internalapi */\n    function ParamTypes() {\n        /** @hidden */\n        this.enqueue = true;\n        /** @hidden */\n        this.typeQueue = [];\n        /** @internalapi */\n        this.defaultTypes = pick(ParamTypes.prototype, [\n            'hash',\n            'string',\n            'query',\n            'path',\n            'int',\n            'bool',\n            'date',\n            'json',\n            'any',\n        ]);\n        // Register default types. Store them in the prototype of this.types.\n        var makeType = function (definition, name) { return new ParamType(extend({ name: name }, definition)); };\n        this.types = inherit(map(this.defaultTypes, makeType), {});\n    }\n    /** @internalapi */\n    ParamTypes.prototype.dispose = function () {\n        this.types = {};\n    };\n    /**\n     * Registers a parameter type\n     *\n     * End users should call [[UrlMatcherFactory.type]], which delegates to this method.\n     */\n    ParamTypes.prototype.type = function (name, definition, definitionFn) {\n        if (!isDefined(definition))\n            return this.types[name];\n        if (this.types.hasOwnProperty(name))\n            throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n        this.types[name] = new ParamType(extend({ name: name }, definition));\n        if (definitionFn) {\n            this.typeQueue.push({ name: name, def: definitionFn });\n            if (!this.enqueue)\n                this._flushTypeQueue();\n        }\n        return this;\n    };\n    /** @internalapi */\n    ParamTypes.prototype._flushTypeQueue = function () {\n        while (this.typeQueue.length) {\n            var type = this.typeQueue.shift();\n            if (type.pattern)\n                throw new Error(\"You cannot override a type's .pattern at runtime.\");\n            extend(this.types[type.name], services.$injector.invoke(type.def));\n        }\n    };\n    return ParamTypes;\n}());\nexport { ParamTypes };\n/** @hidden */\nfunction initDefaultTypes() {\n    var makeDefaultType = function (def) {\n        var valToString = function (val) { return (val != null ? val.toString() : val); };\n        var defaultTypeBase = {\n            encode: valToString,\n            decode: valToString,\n            is: is(String),\n            pattern: /.*/,\n            // tslint:disable-next-line:triple-equals\n            equals: function (a, b) { return a == b; },\n        };\n        return extend({}, defaultTypeBase, def);\n    };\n    // Default Parameter Type Definitions\n    extend(ParamTypes.prototype, {\n        string: makeDefaultType({}),\n        path: makeDefaultType({\n            pattern: /[^/]*/,\n        }),\n        query: makeDefaultType({}),\n        hash: makeDefaultType({\n            inherit: false,\n        }),\n        int: makeDefaultType({\n            decode: function (val) { return parseInt(val, 10); },\n            is: function (val) {\n                return !isNullOrUndefined(val) && this.decode(val.toString()) === val;\n            },\n            pattern: /-?\\d+/,\n        }),\n        bool: makeDefaultType({\n            encode: function (val) { return (val && 1) || 0; },\n            decode: function (val) { return parseInt(val, 10) !== 0; },\n            is: is(Boolean),\n            pattern: /0|1/,\n        }),\n        date: makeDefaultType({\n            encode: function (val) {\n                return !this.is(val)\n                    ? undefined\n                    : [val.getFullYear(), ('0' + (val.getMonth() + 1)).slice(-2), ('0' + val.getDate()).slice(-2)].join('-');\n            },\n            decode: function (val) {\n                if (this.is(val))\n                    return val;\n                var match = this.capture.exec(val);\n                return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n            },\n            is: function (val) { return val instanceof Date && !isNaN(val.valueOf()); },\n            equals: function (l, r) {\n                return ['getFullYear', 'getMonth', 'getDate'].reduce(function (acc, fn) { return acc && l[fn]() === r[fn](); }, true);\n            },\n            pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n            capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/,\n        }),\n        json: makeDefaultType({\n            encode: toJson,\n            decode: fromJson,\n            is: is(Object),\n            equals: equals,\n            pattern: /[^/]*/,\n        }),\n        // does not encode/decode\n        any: makeDefaultType({\n            encode: identity,\n            decode: identity,\n            is: function () { return true; },\n            equals: equals,\n        }),\n    });\n}\ninitDefaultTypes();\n//# sourceMappingURL=paramTypes.js.map","/** @publicapi @module params */ /** */\nimport { extend, ancestors } from '../common/common';\n/** @internalapi */\nvar StateParams = /** @class */ (function () {\n    function StateParams(params) {\n        if (params === void 0) { params = {}; }\n        extend(this, params);\n    }\n    /**\n     * Merges a set of parameters with all parameters inherited between the common parents of the\n     * current state and a given destination state.\n     *\n     * @param {Object} newParams The set of parameters which will be composited with inherited params.\n     * @param {Object} $current Internal definition of object representing the current state.\n     * @param {Object} $to Internal definition of object representing state to transition to.\n     */\n    StateParams.prototype.$inherit = function (newParams, $current, $to) {\n        var parentParams;\n        var parents = ancestors($current, $to), inherited = {}, inheritList = [];\n        for (var i in parents) {\n            if (!parents[i] || !parents[i].params)\n                continue;\n            parentParams = Object.keys(parents[i].params);\n            if (!parentParams.length)\n                continue;\n            for (var j in parentParams) {\n                if (inheritList.indexOf(parentParams[j]) >= 0)\n                    continue;\n                inheritList.push(parentParams[j]);\n                inherited[parentParams[j]] = this[parentParams[j]];\n            }\n        }\n        return extend({}, inherited, newParams);\n    };\n    return StateParams;\n}());\nexport { StateParams };\n//# sourceMappingURL=stateParams.js.map","/** @internalapi @module path */ /** */\nimport { extend, applyPairs, find } from '../common/common';\nimport { propEq } from '../common/hof';\nimport { Param } from '../params/param';\n/**\n * A node in a [[TreeChanges]] path\n *\n * For a [[TreeChanges]] path, this class holds the stateful information for a single node in the path.\n * Each PathNode corresponds to a state being entered, exited, or retained.\n * The stateful information includes parameter values and resolve data.\n */\nvar PathNode = /** @class */ (function () {\n    function PathNode(stateOrNode) {\n        if (stateOrNode instanceof PathNode) {\n            var node = stateOrNode;\n            this.state = node.state;\n            this.paramSchema = node.paramSchema.slice();\n            this.paramValues = extend({}, node.paramValues);\n            this.resolvables = node.resolvables.slice();\n            this.views = node.views && node.views.slice();\n        }\n        else {\n            var state = stateOrNode;\n            this.state = state;\n            this.paramSchema = state.parameters({ inherit: false });\n            this.paramValues = {};\n            this.resolvables = state.resolvables.map(function (res) { return res.clone(); });\n        }\n    }\n    PathNode.prototype.clone = function () {\n        return new PathNode(this);\n    };\n    /** Sets [[paramValues]] for the node, from the values of an object hash */\n    PathNode.prototype.applyRawParams = function (params) {\n        var getParamVal = function (paramDef) { return [paramDef.id, paramDef.value(params[paramDef.id])]; };\n        this.paramValues = this.paramSchema.reduce(function (memo, pDef) { return applyPairs(memo, getParamVal(pDef)); }, {});\n        return this;\n    };\n    /** Gets a specific [[Param]] metadata that belongs to the node */\n    PathNode.prototype.parameter = function (name) {\n        return find(this.paramSchema, propEq('id', name));\n    };\n    /**\n     * @returns true if the state and parameter values for another PathNode are\n     * equal to the state and param values for this PathNode\n     */\n    PathNode.prototype.equals = function (node, paramsFn) {\n        var diff = this.diff(node, paramsFn);\n        return diff && diff.length === 0;\n    };\n    /**\n     * Finds Params with different parameter values on another PathNode.\n     *\n     * Given another node (of the same state), finds the parameter values which differ.\n     * Returns the [[Param]] (schema objects) whose parameter values differ.\n     *\n     * Given another node for a different state, returns `false`\n     *\n     * @param node The node to compare to\n     * @param paramsFn A function that returns which parameters should be compared.\n     * @returns The [[Param]]s which differ, or null if the two nodes are for different states\n     */\n    PathNode.prototype.diff = function (node, paramsFn) {\n        if (this.state !== node.state)\n            return false;\n        var params = paramsFn ? paramsFn(this) : this.paramSchema;\n        return Param.changed(params, this.paramValues, node.paramValues);\n    };\n    /**\n     * Returns a clone of the PathNode\n     * @deprecated use instance method `node.clone()`\n     */\n    PathNode.clone = function (node) { return node.clone(); };\n    return PathNode;\n}());\nexport { PathNode };\n//# sourceMappingURL=pathNode.js.map","/** @publicapi @module state */ /** */\nimport { isString } from '../common/predicates';\nimport { stringify } from '../common/strings';\nimport { extend } from '../common';\n/**\n * Encapsulate the target (destination) state/params/options of a [[Transition]].\n *\n * This class is frequently used to redirect a transition to a new destination.\n *\n * See:\n *\n * - [[HookResult]]\n * - [[TransitionHookFn]]\n * - [[TransitionService.onStart]]\n *\n * To create a `TargetState`, use [[StateService.target]].\n *\n * ---\n *\n * This class wraps:\n *\n * 1) an identifier for a state\n * 2) a set of parameters\n * 3) and transition options\n * 4) the registered state object (the [[StateDeclaration]])\n *\n * Many UI-Router APIs such as [[StateService.go]] take a [[StateOrName]] argument which can\n * either be a *state object* (a [[StateDeclaration]] or [[StateObject]]) or a *state name* (a string).\n * The `TargetState` class normalizes those options.\n *\n * A `TargetState` may be valid (the state being targeted exists in the registry)\n * or invalid (the state being targeted is not registered).\n */\nvar TargetState = /** @class */ (function () {\n    /**\n     * The TargetState constructor\n     *\n     * Note: Do not construct a `TargetState` manually.\n     * To create a `TargetState`, use the [[StateService.target]] factory method.\n     *\n     * @param _stateRegistry The StateRegistry to use to look up the _definition\n     * @param _identifier An identifier for a state.\n     *    Either a fully-qualified state name, or the object used to define the state.\n     * @param _params Parameters for the target state\n     * @param _options Transition options.\n     *\n     * @internalapi\n     */\n    function TargetState(_stateRegistry, _identifier, _params, _options) {\n        this._stateRegistry = _stateRegistry;\n        this._identifier = _identifier;\n        this._identifier = _identifier;\n        this._params = extend({}, _params || {});\n        this._options = extend({}, _options || {});\n        this._definition = _stateRegistry.matcher.find(_identifier, this._options.relative);\n    }\n    /** The name of the state this object targets */\n    TargetState.prototype.name = function () {\n        return (this._definition && this._definition.name) || this._identifier;\n    };\n    /** The identifier used when creating this TargetState */\n    TargetState.prototype.identifier = function () {\n        return this._identifier;\n    };\n    /** The target parameter values */\n    TargetState.prototype.params = function () {\n        return this._params;\n    };\n    /** The internal state object (if it was found) */\n    TargetState.prototype.$state = function () {\n        return this._definition;\n    };\n    /** The internal state declaration (if it was found) */\n    TargetState.prototype.state = function () {\n        return this._definition && this._definition.self;\n    };\n    /** The target options */\n    TargetState.prototype.options = function () {\n        return this._options;\n    };\n    /** True if the target state was found */\n    TargetState.prototype.exists = function () {\n        return !!(this._definition && this._definition.self);\n    };\n    /** True if the object is valid */\n    TargetState.prototype.valid = function () {\n        return !this.error();\n    };\n    /** If the object is invalid, returns the reason why */\n    TargetState.prototype.error = function () {\n        var base = this.options().relative;\n        if (!this._definition && !!base) {\n            var stateName = base.name ? base.name : base;\n            return \"Could not resolve '\" + this.name() + \"' from state '\" + stateName + \"'\";\n        }\n        if (!this._definition)\n            return \"No such state '\" + this.name() + \"'\";\n        if (!this._definition.self)\n            return \"State '\" + this.name() + \"' has an invalid definition\";\n    };\n    TargetState.prototype.toString = function () {\n        return \"'\" + this.name() + \"'\" + stringify(this.params());\n    };\n    /**\n     * Returns a copy of this TargetState which targets a different state.\n     * The new TargetState has the same parameter values and transition options.\n     *\n     * @param state The new state that should be targeted\n     */\n    TargetState.prototype.withState = function (state) {\n        return new TargetState(this._stateRegistry, state, this._params, this._options);\n    };\n    /**\n     * Returns a copy of this TargetState, using the specified parameter values.\n     *\n     * @param params the new parameter values to use\n     * @param replace When false (default) the new parameter values will be merged with the current values.\n     *                When true the parameter values will be used instead of the current values.\n     */\n    TargetState.prototype.withParams = function (params, replace) {\n        if (replace === void 0) { replace = false; }\n        var newParams = replace ? params : extend({}, this._params, params);\n        return new TargetState(this._stateRegistry, this._identifier, newParams, this._options);\n    };\n    /**\n     * Returns a copy of this TargetState, using the specified Transition Options.\n     *\n     * @param options the new options to use\n     * @param replace When false (default) the new options will be merged with the current options.\n     *                When true the options will be used instead of the current options.\n     */\n    TargetState.prototype.withOptions = function (options, replace) {\n        if (replace === void 0) { replace = false; }\n        var newOpts = replace ? options : extend({}, this._options, options);\n        return new TargetState(this._stateRegistry, this._identifier, this._params, newOpts);\n    };\n    /** Returns true if the object has a state property that might be a state or state name */\n    TargetState.isDef = function (obj) { return obj && obj.state && (isString(obj.state) || isString(obj.state.name)); };\n    return TargetState;\n}());\nexport { TargetState };\n//# sourceMappingURL=targetState.js.map","/** @internalapi @module path */ /** */\nimport { extend, find, pick, omit, tail, mergeR, values, unnestR, inArray, arrayTuples, } from '../common/common';\nimport { prop, propEq } from '../common/hof';\nimport { TargetState } from '../state/targetState';\nimport { PathNode } from './pathNode';\n/**\n * This class contains functions which convert TargetStates, Nodes and paths from one type to another.\n */\nvar PathUtils = /** @class */ (function () {\n    function PathUtils() {\n    }\n    /** Given a PathNode[], create an TargetState */\n    PathUtils.makeTargetState = function (registry, path) {\n        var state = tail(path).state;\n        return new TargetState(registry, state, path.map(prop('paramValues')).reduce(mergeR, {}), {});\n    };\n    PathUtils.buildPath = function (targetState) {\n        var toParams = targetState.params();\n        return targetState.$state().path.map(function (state) { return new PathNode(state).applyRawParams(toParams); });\n    };\n    /** Given a fromPath: PathNode[] and a TargetState, builds a toPath: PathNode[] */\n    PathUtils.buildToPath = function (fromPath, targetState) {\n        var toPath = PathUtils.buildPath(targetState);\n        if (targetState.options().inherit) {\n            return PathUtils.inheritParams(fromPath, toPath, Object.keys(targetState.params()));\n        }\n        return toPath;\n    };\n    /**\n     * Creates ViewConfig objects and adds to nodes.\n     *\n     * On each [[PathNode]], creates ViewConfig objects from the views: property of the node's state\n     */\n    PathUtils.applyViewConfigs = function ($view, path, states) {\n        // Only apply the viewConfigs to the nodes for the given states\n        path\n            .filter(function (node) { return inArray(states, node.state); })\n            .forEach(function (node) {\n            var viewDecls = values(node.state.views || {});\n            var subPath = PathUtils.subPath(path, function (n) { return n === node; });\n            var viewConfigs = viewDecls.map(function (view) { return $view.createViewConfig(subPath, view); });\n            node.views = viewConfigs.reduce(unnestR, []);\n        });\n    };\n    /**\n     * Given a fromPath and a toPath, returns a new to path which inherits parameters from the fromPath\n     *\n     * For a parameter in a node to be inherited from the from path:\n     * - The toPath's node must have a matching node in the fromPath (by state).\n     * - The parameter name must not be found in the toKeys parameter array.\n     *\n     * Note: the keys provided in toKeys are intended to be those param keys explicitly specified by some\n     * caller, for instance, $state.transitionTo(..., toParams).  If a key was found in toParams,\n     * it is not inherited from the fromPath.\n     */\n    PathUtils.inheritParams = function (fromPath, toPath, toKeys) {\n        if (toKeys === void 0) { toKeys = []; }\n        function nodeParamVals(path, state) {\n            var node = find(path, propEq('state', state));\n            return extend({}, node && node.paramValues);\n        }\n        var noInherit = fromPath\n            .map(function (node) { return node.paramSchema; })\n            .reduce(unnestR, [])\n            .filter(function (param) { return !param.inherit; })\n            .map(prop('id'));\n        /**\n         * Given an [[PathNode]] \"toNode\", return a new [[PathNode]] with param values inherited from the\n         * matching node in fromPath.  Only inherit keys that aren't found in \"toKeys\" from the node in \"fromPath\"\"\n         */\n        function makeInheritedParamsNode(toNode) {\n            // All param values for the node (may include default key/vals, when key was not found in toParams)\n            var toParamVals = extend({}, toNode && toNode.paramValues);\n            // limited to only those keys found in toParams\n            var incomingParamVals = pick(toParamVals, toKeys);\n            toParamVals = omit(toParamVals, toKeys);\n            var fromParamVals = omit(nodeParamVals(fromPath, toNode.state) || {}, noInherit);\n            // extend toParamVals with any fromParamVals, then override any of those those with incomingParamVals\n            var ownParamVals = extend(toParamVals, fromParamVals, incomingParamVals);\n            return new PathNode(toNode.state).applyRawParams(ownParamVals);\n        }\n        // The param keys specified by the incoming toParams\n        return toPath.map(makeInheritedParamsNode);\n    };\n    /**\n     * Computes the tree changes (entering, exiting) between a fromPath and toPath.\n     */\n    PathUtils.treeChanges = function (fromPath, toPath, reloadState) {\n        var max = Math.min(fromPath.length, toPath.length);\n        var keep = 0;\n        var nodesMatch = function (node1, node2) { return node1.equals(node2, PathUtils.nonDynamicParams); };\n        while (keep < max && fromPath[keep].state !== reloadState && nodesMatch(fromPath[keep], toPath[keep])) {\n            keep++;\n        }\n        /** Given a retained node, return a new node which uses the to node's param values */\n        function applyToParams(retainedNode, idx) {\n            var cloned = retainedNode.clone();\n            cloned.paramValues = toPath[idx].paramValues;\n            return cloned;\n        }\n        var from, retained, exiting, entering, to;\n        from = fromPath;\n        retained = from.slice(0, keep);\n        exiting = from.slice(keep);\n        // Create a new retained path (with shallow copies of nodes) which have the params of the toPath mapped\n        var retainedWithToParams = retained.map(applyToParams);\n        entering = toPath.slice(keep);\n        to = retainedWithToParams.concat(entering);\n        return { from: from, to: to, retained: retained, retainedWithToParams: retainedWithToParams, exiting: exiting, entering: entering };\n    };\n    /**\n     * Returns a new path which is: the subpath of the first path which matches the second path.\n     *\n     * The new path starts from root and contains any nodes that match the nodes in the second path.\n     * It stops before the first non-matching node.\n     *\n     * Nodes are compared using their state property and their parameter values.\n     * If a `paramsFn` is provided, only the [[Param]] returned by the function will be considered when comparing nodes.\n     *\n     * @param pathA the first path\n     * @param pathB the second path\n     * @param paramsFn a function which returns the parameters to consider when comparing\n     *\n     * @returns an array of PathNodes from the first path which match the nodes in the second path\n     */\n    PathUtils.matching = function (pathA, pathB, paramsFn) {\n        var done = false;\n        var tuples = arrayTuples(pathA, pathB);\n        return tuples.reduce(function (matching, _a) {\n            var nodeA = _a[0], nodeB = _a[1];\n            done = done || !nodeA.equals(nodeB, paramsFn);\n            return done ? matching : matching.concat(nodeA);\n        }, []);\n    };\n    /**\n     * Returns true if two paths are identical.\n     *\n     * @param pathA\n     * @param pathB\n     * @param paramsFn a function which returns the parameters to consider when comparing\n     * @returns true if the the states and parameter values for both paths are identical\n     */\n    PathUtils.equals = function (pathA, pathB, paramsFn) {\n        return pathA.length === pathB.length && PathUtils.matching(pathA, pathB, paramsFn).length === pathA.length;\n    };\n    /**\n     * Return a subpath of a path, which stops at the first matching node\n     *\n     * Given an array of nodes, returns a subset of the array starting from the first node,\n     * stopping when the first node matches the predicate.\n     *\n     * @param path a path of [[PathNode]]s\n     * @param predicate a [[Predicate]] fn that matches [[PathNode]]s\n     * @returns a subpath up to the matching node, or undefined if no match is found\n     */\n    PathUtils.subPath = function (path, predicate) {\n        var node = find(path, predicate);\n        var elementIdx = path.indexOf(node);\n        return elementIdx === -1 ? undefined : path.slice(0, elementIdx + 1);\n    };\n    PathUtils.nonDynamicParams = function (node) {\n        return node.state.parameters({ inherit: false }).filter(function (param) { return !param.dynamic; });\n    };\n    /** Gets the raw parameter values from a path */\n    PathUtils.paramValues = function (path) { return path.reduce(function (acc, node) { return extend(acc, node.paramValues); }, {}); };\n    return PathUtils;\n}());\nexport { PathUtils };\n//# sourceMappingURL=pathUtils.js.map","/** @internalapi */\nexport var resolvePolicies = {\n    when: {\n        LAZY: 'LAZY',\n        EAGER: 'EAGER',\n    },\n    async: {\n        WAIT: 'WAIT',\n        NOWAIT: 'NOWAIT',\n        RXWAIT: 'RXWAIT',\n    },\n};\n//# sourceMappingURL=interface.js.map","/** @publicapi @module resolve */ /** */\nimport { extend, identity } from '../common/common';\nimport { services } from '../common/coreservices';\nimport { trace } from '../common/trace';\nimport { stringify } from '../common/strings';\nimport { isFunction, isObject } from '../common/predicates';\nimport { isNullOrUndefined } from '../common/predicates';\n// TODO: explicitly make this user configurable\nexport var defaultResolvePolicy = {\n    when: 'LAZY',\n    async: 'WAIT',\n};\n/**\n * The basic building block for the resolve system.\n *\n * Resolvables encapsulate a state's resolve's resolveFn, the resolveFn's declared dependencies, the wrapped (.promise),\n * and the unwrapped-when-complete (.data) result of the resolveFn.\n *\n * Resolvable.get() either retrieves the Resolvable's existing promise, or else invokes resolve() (which invokes the\n * resolveFn) and returns the resulting promise.\n *\n * Resolvable.get() and Resolvable.resolve() both execute within a context path, which is passed as the first\n * parameter to those fns.\n */\nvar Resolvable = /** @class */ (function () {\n    function Resolvable(arg1, resolveFn, deps, policy, data) {\n        this.resolved = false;\n        this.promise = undefined;\n        if (arg1 instanceof Resolvable) {\n            extend(this, arg1);\n        }\n        else if (isFunction(resolveFn)) {\n            if (isNullOrUndefined(arg1))\n                throw new Error('new Resolvable(): token argument is required');\n            if (!isFunction(resolveFn))\n                throw new Error('new Resolvable(): resolveFn argument must be a function');\n            this.token = arg1;\n            this.policy = policy;\n            this.resolveFn = resolveFn;\n            this.deps = deps || [];\n            this.data = data;\n            this.resolved = data !== undefined;\n            this.promise = this.resolved ? services.$q.when(this.data) : undefined;\n        }\n        else if (isObject(arg1) && arg1.token && (arg1.hasOwnProperty('resolveFn') || arg1.hasOwnProperty('data'))) {\n            var literal = arg1;\n            return new Resolvable(literal.token, literal.resolveFn, literal.deps, literal.policy, literal.data);\n        }\n    }\n    Resolvable.prototype.getPolicy = function (state) {\n        var thisPolicy = this.policy || {};\n        var statePolicy = (state && state.resolvePolicy) || {};\n        return {\n            when: thisPolicy.when || statePolicy.when || defaultResolvePolicy.when,\n            async: thisPolicy.async || statePolicy.async || defaultResolvePolicy.async,\n        };\n    };\n    /**\n     * Asynchronously resolve this Resolvable's data\n     *\n     * Given a ResolveContext that this Resolvable is found in:\n     * Wait for this Resolvable's dependencies, then invoke this Resolvable's function\n     * and update the Resolvable's state\n     */\n    Resolvable.prototype.resolve = function (resolveContext, trans) {\n        var _this = this;\n        var $q = services.$q;\n        // Gets all dependencies from ResolveContext and wait for them to be resolved\n        var getResolvableDependencies = function () {\n            return $q.all(resolveContext.getDependencies(_this).map(function (resolvable) { return resolvable.get(resolveContext, trans); }));\n        };\n        // Invokes the resolve function passing the resolved dependencies as arguments\n        var invokeResolveFn = function (resolvedDeps) { return _this.resolveFn.apply(null, resolvedDeps); };\n        /**\n         * For RXWAIT policy:\n         *\n         * Given an observable returned from a resolve function:\n         * - enables .cache() mode (this allows multicast subscribers)\n         * - then calls toPromise() (this triggers subscribe() and thus fetches)\n         * - Waits for the promise, then return the cached observable (not the first emitted value).\n         */\n        var waitForRx = function (observable$) {\n            var cached = observable$.cache(1);\n            return cached\n                .take(1)\n                .toPromise()\n                .then(function () { return cached; });\n        };\n        // If the resolve policy is RXWAIT, wait for the observable to emit something. otherwise pass through.\n        var node = resolveContext.findNode(this);\n        var state = node && node.state;\n        var maybeWaitForRx = this.getPolicy(state).async === 'RXWAIT' ? waitForRx : identity;\n        // After the final value has been resolved, update the state of the Resolvable\n        var applyResolvedValue = function (resolvedValue) {\n            _this.data = resolvedValue;\n            _this.resolved = true;\n            _this.resolveFn = null;\n            trace.traceResolvableResolved(_this, trans);\n            return _this.data;\n        };\n        // Sets the promise property first, then getsResolvableDependencies in the context of the promise chain. Always waits one tick.\n        return (this.promise = $q\n            .when()\n            .then(getResolvableDependencies)\n            .then(invokeResolveFn)\n            .then(maybeWaitForRx)\n            .then(applyResolvedValue));\n    };\n    /**\n     * Gets a promise for this Resolvable's data.\n     *\n     * Fetches the data and returns a promise.\n     * Returns the existing promise if it has already been fetched once.\n     */\n    Resolvable.prototype.get = function (resolveContext, trans) {\n        return this.promise || this.resolve(resolveContext, trans);\n    };\n    Resolvable.prototype.toString = function () {\n        return \"Resolvable(token: \" + stringify(this.token) + \", requires: [\" + this.deps.map(stringify) + \"])\";\n    };\n    Resolvable.prototype.clone = function () {\n        return new Resolvable(this);\n    };\n    Resolvable.fromData = function (token, data) { return new Resolvable(token, function () { return data; }, null, null, data); };\n    return Resolvable;\n}());\nexport { Resolvable };\n//# sourceMappingURL=resolvable.js.map","/** @publicapi @module resolve */ /** */\nimport { find, tail, uniqR, unnestR, inArray } from '../common/common';\nimport { propEq, not } from '../common/hof';\nimport { trace } from '../common/trace';\nimport { services } from '../common/coreservices';\nimport { resolvePolicies } from './interface';\nimport { Resolvable } from './resolvable';\nimport { PathUtils } from '../path/pathUtils';\nimport { stringify } from '../common/strings';\nimport { isUndefined } from '../common';\nvar whens = resolvePolicies.when;\nvar ALL_WHENS = [whens.EAGER, whens.LAZY];\nvar EAGER_WHENS = [whens.EAGER];\n// tslint:disable-next-line:no-inferrable-types\nexport var NATIVE_INJECTOR_TOKEN = 'Native Injector';\n/**\n * Encapsulates Dependency Injection for a path of nodes\n *\n * UI-Router states are organized as a tree.\n * A nested state has a path of ancestors to the root of the tree.\n * When a state is being activated, each element in the path is wrapped as a [[PathNode]].\n * A `PathNode` is a stateful object that holds things like parameters and resolvables for the state being activated.\n *\n * The ResolveContext closes over the [[PathNode]]s, and provides DI for the last node in the path.\n */\nvar ResolveContext = /** @class */ (function () {\n    function ResolveContext(_path) {\n        this._path = _path;\n    }\n    /** Gets all the tokens found in the resolve context, de-duplicated */\n    ResolveContext.prototype.getTokens = function () {\n        return this._path.reduce(function (acc, node) { return acc.concat(node.resolvables.map(function (r) { return r.token; })); }, []).reduce(uniqR, []);\n    };\n    /**\n     * Gets the Resolvable that matches the token\n     *\n     * Gets the last Resolvable that matches the token in this context, or undefined.\n     * Throws an error if it doesn't exist in the ResolveContext\n     */\n    ResolveContext.prototype.getResolvable = function (token) {\n        var matching = this._path\n            .map(function (node) { return node.resolvables; })\n            .reduce(unnestR, [])\n            .filter(function (r) { return r.token === token; });\n        return tail(matching);\n    };\n    /** Returns the [[ResolvePolicy]] for the given [[Resolvable]] */\n    ResolveContext.prototype.getPolicy = function (resolvable) {\n        var node = this.findNode(resolvable);\n        return resolvable.getPolicy(node.state);\n    };\n    /**\n     * Returns a ResolveContext that includes a portion of this one\n     *\n     * Given a state, this method creates a new ResolveContext from this one.\n     * The new context starts at the first node (root) and stops at the node for the `state` parameter.\n     *\n     * #### Why\n     *\n     * When a transition is created, the nodes in the \"To Path\" are injected from a ResolveContext.\n     * A ResolveContext closes over a path of [[PathNode]]s and processes the resolvables.\n     * The \"To State\" can inject values from its own resolvables, as well as those from all its ancestor state's (node's).\n     * This method is used to create a narrower context when injecting ancestor nodes.\n     *\n     * @example\n     * `let ABCD = new ResolveContext([A, B, C, D]);`\n     *\n     * Given a path `[A, B, C, D]`, where `A`, `B`, `C` and `D` are nodes for states `a`, `b`, `c`, `d`:\n     * When injecting `D`, `D` should have access to all resolvables from `A`, `B`, `C`, `D`.\n     * However, `B` should only be able to access resolvables from `A`, `B`.\n     *\n     * When resolving for the `B` node, first take the full \"To Path\" Context `[A,B,C,D]` and limit to the subpath `[A,B]`.\n     * `let AB = ABCD.subcontext(a)`\n     */\n    ResolveContext.prototype.subContext = function (state) {\n        return new ResolveContext(PathUtils.subPath(this._path, function (node) { return node.state === state; }));\n    };\n    /**\n     * Adds Resolvables to the node that matches the state\n     *\n     * This adds a [[Resolvable]] (generally one created on the fly; not declared on a [[StateDeclaration.resolve]] block).\n     * The resolvable is added to the node matching the `state` parameter.\n     *\n     * These new resolvables are not automatically fetched.\n     * The calling code should either fetch them, fetch something that depends on them,\n     * or rely on [[resolvePath]] being called when some state is being entered.\n     *\n     * Note: each resolvable's [[ResolvePolicy]] is merged with the state's policy, and the global default.\n     *\n     * @param newResolvables the new Resolvables\n     * @param state Used to find the node to put the resolvable on\n     */\n    ResolveContext.prototype.addResolvables = function (newResolvables, state) {\n        var node = find(this._path, propEq('state', state));\n        var keys = newResolvables.map(function (r) { return r.token; });\n        node.resolvables = node.resolvables.filter(function (r) { return keys.indexOf(r.token) === -1; }).concat(newResolvables);\n    };\n    /**\n     * Returns a promise for an array of resolved path Element promises\n     *\n     * @param when\n     * @param trans\n     * @returns {Promise<any>|any}\n     */\n    ResolveContext.prototype.resolvePath = function (when, trans) {\n        var _this = this;\n        if (when === void 0) { when = 'LAZY'; }\n        // This option determines which 'when' policy Resolvables we are about to fetch.\n        var whenOption = inArray(ALL_WHENS, when) ? when : 'LAZY';\n        // If the caller specified EAGER, only the EAGER Resolvables are fetched.\n        // if the caller specified LAZY, both EAGER and LAZY Resolvables are fetched.`\n        var matchedWhens = whenOption === resolvePolicies.when.EAGER ? EAGER_WHENS : ALL_WHENS;\n        // get the subpath to the state argument, if provided\n        trace.traceResolvePath(this._path, when, trans);\n        var matchesPolicy = function (acceptedVals, whenOrAsync) { return function (resolvable) {\n            return inArray(acceptedVals, _this.getPolicy(resolvable)[whenOrAsync]);\n        }; };\n        // Trigger all the (matching) Resolvables in the path\n        // Reduce all the \"WAIT\" Resolvables into an array\n        var promises = this._path.reduce(function (acc, node) {\n            var nodeResolvables = node.resolvables.filter(matchesPolicy(matchedWhens, 'when'));\n            var nowait = nodeResolvables.filter(matchesPolicy(['NOWAIT'], 'async'));\n            var wait = nodeResolvables.filter(not(matchesPolicy(['NOWAIT'], 'async')));\n            // For the matching Resolvables, start their async fetch process.\n            var subContext = _this.subContext(node.state);\n            var getResult = function (r) {\n                return r\n                    .get(subContext, trans)\n                    // Return a tuple that includes the Resolvable's token\n                    .then(function (value) { return ({ token: r.token, value: value }); });\n            };\n            nowait.forEach(getResult);\n            return acc.concat(wait.map(getResult));\n        }, []);\n        // Wait for all the \"WAIT\" resolvables\n        return services.$q.all(promises);\n    };\n    ResolveContext.prototype.injector = function () {\n        return this._injector || (this._injector = new UIInjectorImpl(this));\n    };\n    ResolveContext.prototype.findNode = function (resolvable) {\n        return find(this._path, function (node) { return inArray(node.resolvables, resolvable); });\n    };\n    /**\n     * Gets the async dependencies of a Resolvable\n     *\n     * Given a Resolvable, returns its dependencies as a Resolvable[]\n     */\n    ResolveContext.prototype.getDependencies = function (resolvable) {\n        var _this = this;\n        var node = this.findNode(resolvable);\n        // Find which other resolvables are \"visible\" to the `resolvable` argument\n        // subpath stopping at resolvable's node, or the whole path (if the resolvable isn't in the path)\n        var subPath = PathUtils.subPath(this._path, function (x) { return x === node; }) || this._path;\n        var availableResolvables = subPath\n            .reduce(function (acc, _node) { return acc.concat(_node.resolvables); }, []) // all of subpath's resolvables\n            .filter(function (res) { return res !== resolvable; }); // filter out the `resolvable` argument\n        var getDependency = function (token) {\n            var matching = availableResolvables.filter(function (r) { return r.token === token; });\n            if (matching.length)\n                return tail(matching);\n            var fromInjector = _this.injector().getNative(token);\n            if (isUndefined(fromInjector)) {\n                throw new Error('Could not find Dependency Injection token: ' + stringify(token));\n            }\n            return new Resolvable(token, function () { return fromInjector; }, [], fromInjector);\n        };\n        return resolvable.deps.map(getDependency);\n    };\n    return ResolveContext;\n}());\nexport { ResolveContext };\n/** @internalapi */\nvar UIInjectorImpl = /** @class */ (function () {\n    function UIInjectorImpl(context) {\n        this.context = context;\n        this.native = this.get(NATIVE_INJECTOR_TOKEN) || services.$injector;\n    }\n    UIInjectorImpl.prototype.get = function (token) {\n        var resolvable = this.context.getResolvable(token);\n        if (resolvable) {\n            if (this.context.getPolicy(resolvable).async === 'NOWAIT') {\n                return resolvable.get(this.context);\n            }\n            if (!resolvable.resolved) {\n                throw new Error('Resolvable async .get() not complete:' + stringify(resolvable.token));\n            }\n            return resolvable.data;\n        }\n        return this.getNative(token);\n    };\n    UIInjectorImpl.prototype.getAsync = function (token) {\n        var resolvable = this.context.getResolvable(token);\n        if (resolvable)\n            return resolvable.get(this.context);\n        return services.$q.when(this.native.get(token));\n    };\n    UIInjectorImpl.prototype.getNative = function (token) {\n        return this.native && this.native.get(token);\n    };\n    return UIInjectorImpl;\n}());\n//# sourceMappingURL=resolveContext.js.map","/** @publicapi @module state */ /** */\nimport { applyPairs, extend, identity, inherit, mapObj, noop, omit, tail, values, copy } from '../common/common';\nimport { isArray, isDefined, isFunction, isString } from '../common/predicates';\nimport { stringify } from '../common/strings';\nimport { is, pattern, pipe, prop, val } from '../common/hof';\nimport { Resolvable } from '../resolve/resolvable';\nimport { services } from '../common/coreservices';\nvar parseUrl = function (url) {\n    if (!isString(url))\n        return false;\n    var root = url.charAt(0) === '^';\n    return { val: root ? url.substring(1) : url, root: root };\n};\nfunction nameBuilder(state) {\n    return state.name;\n}\nfunction selfBuilder(state) {\n    state.self.$$state = function () { return state; };\n    return state.self;\n}\nfunction dataBuilder(state) {\n    if (state.parent && state.parent.data) {\n        state.data = state.self.data = inherit(state.parent.data, state.data);\n    }\n    return state.data;\n}\nvar getUrlBuilder = function ($urlMatcherFactoryProvider, root) {\n    return function urlBuilder(stateObject) {\n        var stateDec = stateObject.self;\n        // For future states, i.e., states whose name ends with `.**`,\n        // match anything that starts with the url prefix\n        if (stateDec && stateDec.url && stateDec.name && stateDec.name.match(/\\.\\*\\*$/)) {\n            var newStateDec = {};\n            copy(stateDec, newStateDec);\n            newStateDec.url += '{remainder:any}'; // match any path (.*)\n            stateDec = newStateDec;\n        }\n        var parent = stateObject.parent;\n        var parsed = parseUrl(stateDec.url);\n        var url = !parsed ? stateDec.url : $urlMatcherFactoryProvider.compile(parsed.val, { state: stateDec });\n        if (!url)\n            return null;\n        if (!$urlMatcherFactoryProvider.isMatcher(url))\n            throw new Error(\"Invalid url '\" + url + \"' in state '\" + stateObject + \"'\");\n        return parsed && parsed.root ? url : ((parent && parent.navigable) || root()).url.append(url);\n    };\n};\nvar getNavigableBuilder = function (isRoot) {\n    return function navigableBuilder(state) {\n        return !isRoot(state) && state.url ? state : state.parent ? state.parent.navigable : null;\n    };\n};\nvar getParamsBuilder = function (paramFactory) {\n    return function paramsBuilder(state) {\n        var makeConfigParam = function (config, id) { return paramFactory.fromConfig(id, null, state.self); };\n        var urlParams = (state.url && state.url.parameters({ inherit: false })) || [];\n        var nonUrlParams = values(mapObj(omit(state.params || {}, urlParams.map(prop('id'))), makeConfigParam));\n        return urlParams\n            .concat(nonUrlParams)\n            .map(function (p) { return [p.id, p]; })\n            .reduce(applyPairs, {});\n    };\n};\nfunction pathBuilder(state) {\n    return state.parent ? state.parent.path.concat(state) : /*root*/ [state];\n}\nfunction includesBuilder(state) {\n    var includes = state.parent ? extend({}, state.parent.includes) : {};\n    includes[state.name] = true;\n    return includes;\n}\n/**\n * This is a [[StateBuilder.builder]] function for the `resolve:` block on a [[StateDeclaration]].\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * validates the `resolve` property and converts it to a [[Resolvable]] array.\n *\n * resolve: input value can be:\n *\n * {\n *   // analyzed but not injected\n *   myFooResolve: function() { return \"myFooData\"; },\n *\n *   // function.toString() parsed, \"DependencyName\" dep as string (not min-safe)\n *   myBarResolve: function(DependencyName) { return DependencyName.fetchSomethingAsPromise() },\n *\n *   // Array split; \"DependencyName\" dep as string\n *   myBazResolve: [ \"DependencyName\", function(dep) { return dep.fetchSomethingAsPromise() },\n *\n *   // Array split; DependencyType dep as token (compared using ===)\n *   myQuxResolve: [ DependencyType, function(dep) { return dep.fetchSometingAsPromise() },\n *\n *   // val.$inject used as deps\n *   // where:\n *   //     corgeResolve.$inject = [\"DependencyName\"];\n *   //     function corgeResolve(dep) { dep.fetchSometingAsPromise() }\n *   // then \"DependencyName\" dep as string\n *   myCorgeResolve: corgeResolve,\n *\n *  // inject service by name\n *  // When a string is found, desugar creating a resolve that injects the named service\n *   myGraultResolve: \"SomeService\"\n * }\n *\n * or:\n *\n * [\n *   new Resolvable(\"myFooResolve\", function() { return \"myFooData\" }),\n *   new Resolvable(\"myBarResolve\", function(dep) { return dep.fetchSomethingAsPromise() }, [ \"DependencyName\" ]),\n *   { provide: \"myBazResolve\", useFactory: function(dep) { dep.fetchSomethingAsPromise() }, deps: [ \"DependencyName\" ] }\n * ]\n */\nexport function resolvablesBuilder(state) {\n    /** convert resolve: {} and resolvePolicy: {} objects to an array of tuples */\n    var objects2Tuples = function (resolveObj, resolvePolicies) {\n        return Object.keys(resolveObj || {}).map(function (token) { return ({\n            token: token,\n            val: resolveObj[token],\n            deps: undefined,\n            policy: resolvePolicies[token],\n        }); });\n    };\n    /** fetch DI annotations from a function or ng1-style array */\n    var annotate = function (fn) {\n        var $injector = services.$injector;\n        // ng1 doesn't have an $injector until runtime.\n        // If the $injector doesn't exist, use \"deferred\" literal as a\n        // marker indicating they should be annotated when runtime starts\n        return fn['$inject'] || ($injector && $injector.annotate(fn, $injector.strictDi)) || 'deferred';\n    };\n    /** true if the object has both `token` and `resolveFn`, and is probably a [[ResolveLiteral]] */\n    var isResolveLiteral = function (obj) { return !!(obj.token && obj.resolveFn); };\n    /** true if the object looks like a provide literal, or a ng2 Provider */\n    var isLikeNg2Provider = function (obj) {\n        return !!((obj.provide || obj.token) && (obj.useValue || obj.useFactory || obj.useExisting || obj.useClass));\n    };\n    /** true if the object looks like a tuple from obj2Tuples */\n    var isTupleFromObj = function (obj) {\n        return !!(obj && obj.val && (isString(obj.val) || isArray(obj.val) || isFunction(obj.val)));\n    };\n    /** extracts the token from a Provider or provide literal */\n    var getToken = function (p) { return p.provide || p.token; };\n    // prettier-ignore: Given a literal resolve or provider object, returns a Resolvable\n    var literal2Resolvable = pattern([\n        [prop('resolveFn'), function (p) { return new Resolvable(getToken(p), p.resolveFn, p.deps, p.policy); }],\n        [prop('useFactory'), function (p) { return new Resolvable(getToken(p), p.useFactory, p.deps || p.dependencies, p.policy); }],\n        [prop('useClass'), function (p) { return new Resolvable(getToken(p), function () { return new p.useClass(); }, [], p.policy); }],\n        [prop('useValue'), function (p) { return new Resolvable(getToken(p), function () { return p.useValue; }, [], p.policy, p.useValue); }],\n        [prop('useExisting'), function (p) { return new Resolvable(getToken(p), identity, [p.useExisting], p.policy); }],\n    ]);\n    // prettier-ignore\n    var tuple2Resolvable = pattern([\n        [pipe(prop('val'), isString), function (tuple) { return new Resolvable(tuple.token, identity, [tuple.val], tuple.policy); }],\n        [pipe(prop('val'), isArray), function (tuple) { return new Resolvable(tuple.token, tail(tuple.val), tuple.val.slice(0, -1), tuple.policy); }],\n        [pipe(prop('val'), isFunction), function (tuple) { return new Resolvable(tuple.token, tuple.val, annotate(tuple.val), tuple.policy); }],\n    ]);\n    // prettier-ignore\n    var item2Resolvable = pattern([\n        [is(Resolvable), function (r) { return r; }],\n        [isResolveLiteral, literal2Resolvable],\n        [isLikeNg2Provider, literal2Resolvable],\n        [isTupleFromObj, tuple2Resolvable],\n        [val(true), function (obj) { throw new Error('Invalid resolve value: ' + stringify(obj)); },],\n    ]);\n    // If resolveBlock is already an array, use it as-is.\n    // Otherwise, assume it's an object and convert to an Array of tuples\n    var decl = state.resolve;\n    var items = isArray(decl) ? decl : objects2Tuples(decl, state.resolvePolicy || {});\n    return items.map(item2Resolvable);\n}\n/**\n * @internalapi A internal global service\n *\n * StateBuilder is a factory for the internal [[StateObject]] objects.\n *\n * When you register a state with the [[StateRegistry]], you register a plain old javascript object which\n * conforms to the [[StateDeclaration]] interface.  This factory takes that object and builds the corresponding\n * [[StateObject]] object, which has an API and is used internally.\n *\n * Custom properties or API may be added to the internal [[StateObject]] object by registering a decorator function\n * using the [[builder]] method.\n */\nvar StateBuilder = /** @class */ (function () {\n    function StateBuilder(matcher, urlMatcherFactory) {\n        this.matcher = matcher;\n        var self = this;\n        var root = function () { return matcher.find(''); };\n        var isRoot = function (state) { return state.name === ''; };\n        function parentBuilder(state) {\n            if (isRoot(state))\n                return null;\n            return matcher.find(self.parentName(state)) || root();\n        }\n        this.builders = {\n            name: [nameBuilder],\n            self: [selfBuilder],\n            parent: [parentBuilder],\n            data: [dataBuilder],\n            // Build a URLMatcher if necessary, either via a relative or absolute URL\n            url: [getUrlBuilder(urlMatcherFactory, root)],\n            // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n            navigable: [getNavigableBuilder(isRoot)],\n            params: [getParamsBuilder(urlMatcherFactory.paramFactory)],\n            // Each framework-specific ui-router implementation should define its own `views` builder\n            // e.g., src/ng1/statebuilders/views.ts\n            views: [],\n            // Keep a full path from the root down to this state as this is needed for state activation.\n            path: [pathBuilder],\n            // Speed up $state.includes() as it's used a lot\n            includes: [includesBuilder],\n            resolvables: [resolvablesBuilder],\n        };\n    }\n    /**\n     * Registers a [[BuilderFunction]] for a specific [[StateObject]] property (e.g., `parent`, `url`, or `path`).\n     * More than one BuilderFunction can be registered for a given property.\n     *\n     * The BuilderFunction(s) will be used to define the property on any subsequently built [[StateObject]] objects.\n     *\n     * @param name The name of the State property being registered for.\n     * @param fn The BuilderFunction which will be used to build the State property\n     * @returns a function which deregisters the BuilderFunction\n     */\n    StateBuilder.prototype.builder = function (name, fn) {\n        var builders = this.builders;\n        var array = builders[name] || [];\n        // Backwards compat: if only one builder exists, return it, else return whole arary.\n        if (isString(name) && !isDefined(fn))\n            return array.length > 1 ? array : array[0];\n        if (!isString(name) || !isFunction(fn))\n            return;\n        builders[name] = array;\n        builders[name].push(fn);\n        return function () { return builders[name].splice(builders[name].indexOf(fn, 1)) && null; };\n    };\n    /**\n     * Builds all of the properties on an essentially blank State object, returning a State object which has all its\n     * properties and API built.\n     *\n     * @param state an uninitialized State object\n     * @returns the built State object\n     */\n    StateBuilder.prototype.build = function (state) {\n        var _a = this, matcher = _a.matcher, builders = _a.builders;\n        var parent = this.parentName(state);\n        if (parent && !matcher.find(parent, undefined, false)) {\n            return null;\n        }\n        for (var key in builders) {\n            if (!builders.hasOwnProperty(key))\n                continue;\n            var chain = builders[key].reduce(function (parentFn, step) { return function (_state) { return step(_state, parentFn); }; }, noop);\n            state[key] = chain(state);\n        }\n        return state;\n    };\n    StateBuilder.prototype.parentName = function (state) {\n        // name = 'foo.bar.baz.**'\n        var name = state.name || '';\n        // segments = ['foo', 'bar', 'baz', '.**']\n        var segments = name.split('.');\n        // segments = ['foo', 'bar', 'baz']\n        var lastSegment = segments.pop();\n        // segments = ['foo', 'bar'] (ignore .** segment for future states)\n        if (lastSegment === '**')\n            segments.pop();\n        if (segments.length) {\n            if (state.parent) {\n                throw new Error(\"States that specify the 'parent:' property should not have a '.' in their name (\" + name + \")\");\n            }\n            // 'foo.bar'\n            return segments.join('.');\n        }\n        if (!state.parent)\n            return '';\n        return isString(state.parent) ? state.parent : state.parent.name;\n    };\n    StateBuilder.prototype.name = function (state) {\n        var name = state.name;\n        if (name.indexOf('.') !== -1 || !state.parent)\n            return name;\n        var parentName = isString(state.parent) ? state.parent : state.parent.name;\n        return parentName ? parentName + '.' + name : name;\n    };\n    return StateBuilder;\n}());\nexport { StateBuilder };\n//# sourceMappingURL=stateBuilder.js.map","var TransitionHookPhase;\n(function (TransitionHookPhase) {\n    TransitionHookPhase[TransitionHookPhase[\"CREATE\"] = 0] = \"CREATE\";\n    TransitionHookPhase[TransitionHookPhase[\"BEFORE\"] = 1] = \"BEFORE\";\n    TransitionHookPhase[TransitionHookPhase[\"RUN\"] = 2] = \"RUN\";\n    TransitionHookPhase[TransitionHookPhase[\"SUCCESS\"] = 3] = \"SUCCESS\";\n    TransitionHookPhase[TransitionHookPhase[\"ERROR\"] = 4] = \"ERROR\";\n})(TransitionHookPhase || (TransitionHookPhase = {}));\nvar TransitionHookScope;\n(function (TransitionHookScope) {\n    TransitionHookScope[TransitionHookScope[\"TRANSITION\"] = 0] = \"TRANSITION\";\n    TransitionHookScope[TransitionHookScope[\"STATE\"] = 1] = \"STATE\";\n})(TransitionHookScope || (TransitionHookScope = {}));\nexport { TransitionHookPhase, TransitionHookScope };\n//# sourceMappingURL=interface.js.map","import { defaults, values, find, inherit } from '../common/common';\nimport { propEq } from '../common/hof';\nimport { Glob } from '../common/glob';\nimport { isObject, isFunction } from '../common/predicates';\n/**\n * Internal representation of a UI-Router state.\n *\n * Instances of this class are created when a [[StateDeclaration]] is registered with the [[StateRegistry]].\n *\n * A registered [[StateDeclaration]] is augmented with a getter ([[StateDeclaration.$$state]]) which returns the corresponding [[StateObject]] object.\n *\n * This class prototypally inherits from the corresponding [[StateDeclaration]].\n * Each of its own properties (i.e., `hasOwnProperty`) are built using builders from the [[StateBuilder]].\n */\nvar StateObject = /** @class */ (function () {\n    /** @deprecated use State.create() */\n    function StateObject(config) {\n        return StateObject.create(config || {});\n    }\n    /**\n     * Create a state object to put the private/internal implementation details onto.\n     * The object's prototype chain looks like:\n     * (Internal State Object) -> (Copy of State.prototype) -> (State Declaration object) -> (State Declaration's prototype...)\n     *\n     * @param stateDecl the user-supplied State Declaration\n     * @returns {StateObject} an internal State object\n     */\n    StateObject.create = function (stateDecl) {\n        stateDecl = StateObject.isStateClass(stateDecl) ? new stateDecl() : stateDecl;\n        var state = inherit(inherit(stateDecl, StateObject.prototype));\n        stateDecl.$$state = function () { return state; };\n        state.self = stateDecl;\n        state.__stateObjectCache = {\n            nameGlob: Glob.fromString(state.name),\n        };\n        return state;\n    };\n    /**\n     * Returns true if the provided parameter is the same state.\n     *\n     * Compares the identity of the state against the passed value, which is either an object\n     * reference to the actual `State` instance, the original definition object passed to\n     * `$stateProvider.state()`, or the fully-qualified name.\n     *\n     * @param ref Can be one of (a) a `State` instance, (b) an object that was passed\n     *        into `$stateProvider.state()`, (c) the fully-qualified name of a state as a string.\n     * @returns Returns `true` if `ref` matches the current `State` instance.\n     */\n    StateObject.prototype.is = function (ref) {\n        return this === ref || this.self === ref || this.fqn() === ref;\n    };\n    /**\n     * @deprecated this does not properly handle dot notation\n     * @returns Returns a dot-separated name of the state.\n     */\n    StateObject.prototype.fqn = function () {\n        if (!this.parent || !(this.parent instanceof this.constructor))\n            return this.name;\n        var name = this.parent.fqn();\n        return name ? name + '.' + this.name : this.name;\n    };\n    /**\n     * Returns the root node of this state's tree.\n     *\n     * @returns The root of this state's tree.\n     */\n    StateObject.prototype.root = function () {\n        return (this.parent && this.parent.root()) || this;\n    };\n    /**\n     * Gets the state's `Param` objects\n     *\n     * Gets the list of [[Param]] objects owned by the state.\n     * If `opts.inherit` is true, it also includes the ancestor states' [[Param]] objects.\n     * If `opts.matchingKeys` exists, returns only `Param`s whose `id` is a key on the `matchingKeys` object\n     *\n     * @param opts options\n     */\n    StateObject.prototype.parameters = function (opts) {\n        opts = defaults(opts, { inherit: true, matchingKeys: null });\n        var inherited = (opts.inherit && this.parent && this.parent.parameters()) || [];\n        return inherited\n            .concat(values(this.params))\n            .filter(function (param) { return !opts.matchingKeys || opts.matchingKeys.hasOwnProperty(param.id); });\n    };\n    /**\n     * Returns a single [[Param]] that is owned by the state\n     *\n     * If `opts.inherit` is true, it also searches the ancestor states` [[Param]]s.\n     * @param id the name of the [[Param]] to return\n     * @param opts options\n     */\n    StateObject.prototype.parameter = function (id, opts) {\n        if (opts === void 0) { opts = {}; }\n        return ((this.url && this.url.parameter(id, opts)) ||\n            find(values(this.params), propEq('id', id)) ||\n            (opts.inherit && this.parent && this.parent.parameter(id)));\n    };\n    StateObject.prototype.toString = function () {\n        return this.fqn();\n    };\n    /** Predicate which returns true if the object is an class with @State() decorator */\n    StateObject.isStateClass = function (stateDecl) {\n        return isFunction(stateDecl) && stateDecl['__uiRouterState'] === true;\n    };\n    /** Predicate which returns true if the object is an internal [[StateObject]] object */\n    StateObject.isState = function (obj) { return isObject(obj['__stateObjectCache']); };\n    return StateObject;\n}());\nexport { StateObject };\n//# sourceMappingURL=stateObject.js.map","/** @publicapi @module state */ /** */\nimport { isString } from '../common/predicates';\nimport { values } from '../common/common';\nvar StateMatcher = /** @class */ (function () {\n    function StateMatcher(_states) {\n        this._states = _states;\n    }\n    StateMatcher.prototype.isRelative = function (stateName) {\n        stateName = stateName || '';\n        return stateName.indexOf('.') === 0 || stateName.indexOf('^') === 0;\n    };\n    StateMatcher.prototype.find = function (stateOrName, base, matchGlob) {\n        if (matchGlob === void 0) { matchGlob = true; }\n        if (!stateOrName && stateOrName !== '')\n            return undefined;\n        var isStr = isString(stateOrName);\n        var name = isStr ? stateOrName : stateOrName.name;\n        if (this.isRelative(name))\n            name = this.resolvePath(name, base);\n        var state = this._states[name];\n        if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n            return state;\n        }\n        else if (isStr && matchGlob) {\n            var _states = values(this._states);\n            var matches = _states.filter(function (_state) { return _state.__stateObjectCache.nameGlob && _state.__stateObjectCache.nameGlob.matches(name); });\n            if (matches.length > 1) {\n                // tslint:disable-next-line:no-console\n                console.log(\"stateMatcher.find: Found multiple matches for \" + name + \" using glob: \", matches.map(function (match) { return match.name; }));\n            }\n            return matches[0];\n        }\n        return undefined;\n    };\n    StateMatcher.prototype.resolvePath = function (name, base) {\n        if (!base)\n            throw new Error(\"No reference point given for path '\" + name + \"'\");\n        var baseState = this.find(base);\n        var splitName = name.split('.');\n        var pathLength = splitName.length;\n        var i = 0, current = baseState;\n        for (; i < pathLength; i++) {\n            if (splitName[i] === '' && i === 0) {\n                current = baseState;\n                continue;\n            }\n            if (splitName[i] === '^') {\n                if (!current.parent)\n                    throw new Error(\"Path '\" + name + \"' not valid for state '\" + baseState.name + \"'\");\n                current = current.parent;\n                continue;\n            }\n            break;\n        }\n        var relName = splitName.slice(i).join('.');\n        return current.name + (current.name && relName ? '.' : '') + relName;\n    };\n    return StateMatcher;\n}());\nexport { StateMatcher };\n//# sourceMappingURL=stateMatcher.js.map","/** @publicapi @module state */ /** */\nimport { inArray, isString, prop } from '../common';\nimport { StateObject } from './stateObject';\n/** @internalapi */\nvar StateQueueManager = /** @class */ (function () {\n    function StateQueueManager(router, states, builder, listeners) {\n        this.router = router;\n        this.states = states;\n        this.builder = builder;\n        this.listeners = listeners;\n        this.queue = [];\n    }\n    /** @internalapi */\n    StateQueueManager.prototype.dispose = function () {\n        this.queue = [];\n    };\n    StateQueueManager.prototype.register = function (stateDecl) {\n        var queue = this.queue;\n        var state = StateObject.create(stateDecl);\n        var name = state.name;\n        if (!isString(name))\n            throw new Error('State must have a valid name');\n        if (this.states.hasOwnProperty(name) || inArray(queue.map(prop('name')), name))\n            throw new Error(\"State '\" + name + \"' is already defined\");\n        queue.push(state);\n        this.flush();\n        return state;\n    };\n    StateQueueManager.prototype.flush = function () {\n        var _this = this;\n        var _a = this, queue = _a.queue, states = _a.states, builder = _a.builder;\n        var registered = [], // states that got registered\n        orphans = [], // states that don't yet have a parent registered\n        previousQueueLength = {}; // keep track of how long the queue when an orphan was first encountered\n        var getState = function (name) { return _this.states.hasOwnProperty(name) && _this.states[name]; };\n        var notifyListeners = function () {\n            if (registered.length) {\n                _this.listeners.forEach(function (listener) { return listener('registered', registered.map(function (s) { return s.self; })); });\n            }\n        };\n        while (queue.length > 0) {\n            var state = queue.shift();\n            var name_1 = state.name;\n            var result = builder.build(state);\n            var orphanIdx = orphans.indexOf(state);\n            if (result) {\n                var existingState = getState(name_1);\n                if (existingState && existingState.name === name_1) {\n                    throw new Error(\"State '\" + name_1 + \"' is already defined\");\n                }\n                var existingFutureState = getState(name_1 + '.**');\n                if (existingFutureState) {\n                    // Remove future state of the same name\n                    this.router.stateRegistry.deregister(existingFutureState);\n                }\n                states[name_1] = state;\n                this.attachRoute(state);\n                if (orphanIdx >= 0)\n                    orphans.splice(orphanIdx, 1);\n                registered.push(state);\n                continue;\n            }\n            var prev = previousQueueLength[name_1];\n            previousQueueLength[name_1] = queue.length;\n            if (orphanIdx >= 0 && prev === queue.length) {\n                // Wait until two consecutive iterations where no additional states were dequeued successfully.\n                // throw new Error(`Cannot register orphaned state '${name}'`);\n                queue.push(state);\n                notifyListeners();\n                return states;\n            }\n            else if (orphanIdx < 0) {\n                orphans.push(state);\n            }\n            queue.push(state);\n        }\n        notifyListeners();\n        return states;\n    };\n    StateQueueManager.prototype.attachRoute = function (state) {\n        if (state.abstract || !state.url)\n            return;\n        var rulesApi = this.router.urlService.rules;\n        rulesApi.rule(rulesApi.urlRuleFactory.create(state));\n    };\n    return StateQueueManager;\n}());\nexport { StateQueueManager };\n//# sourceMappingURL=stateQueueManager.js.map","/** @publicapi @module state */ /** */\nimport { StateMatcher } from './stateMatcher';\nimport { StateBuilder } from './stateBuilder';\nimport { StateQueueManager } from './stateQueueManager';\nimport { removeFrom } from '../common/common';\nimport { propEq } from '../common/hof';\nvar StateRegistry = /** @class */ (function () {\n    /** @internalapi */\n    function StateRegistry(router) {\n        this.router = router;\n        this.states = {};\n        this.listeners = [];\n        this.matcher = new StateMatcher(this.states);\n        this.builder = new StateBuilder(this.matcher, router.urlMatcherFactory);\n        this.stateQueue = new StateQueueManager(router, this.states, this.builder, this.listeners);\n        this._registerRoot();\n    }\n    /** @internalapi */\n    StateRegistry.prototype._registerRoot = function () {\n        var rootStateDef = {\n            name: '',\n            url: '^',\n            views: null,\n            params: {\n                '#': { value: null, type: 'hash', dynamic: true },\n            },\n            abstract: true,\n        };\n        var _root = (this._root = this.stateQueue.register(rootStateDef));\n        _root.navigable = null;\n    };\n    /** @internalapi */\n    StateRegistry.prototype.dispose = function () {\n        var _this = this;\n        this.stateQueue.dispose();\n        this.listeners = [];\n        this.get().forEach(function (state) { return _this.get(state) && _this.deregister(state); });\n    };\n    /**\n     * Listen for a State Registry events\n     *\n     * Adds a callback that is invoked when states are registered or deregistered with the StateRegistry.\n     *\n     * #### Example:\n     * ```js\n     * let allStates = registry.get();\n     *\n     * // Later, invoke deregisterFn() to remove the listener\n     * let deregisterFn = registry.onStatesChanged((event, states) => {\n     *   switch(event) {\n     *     case: 'registered':\n     *       states.forEach(state => allStates.push(state));\n     *       break;\n     *     case: 'deregistered':\n     *       states.forEach(state => {\n     *         let idx = allStates.indexOf(state);\n     *         if (idx !== -1) allStates.splice(idx, 1);\n     *       });\n     *       break;\n     *   }\n     * });\n     * ```\n     *\n     * @param listener a callback function invoked when the registered states changes.\n     *        The function receives two parameters, `event` and `state`.\n     *        See [[StateRegistryListener]]\n     * @return a function that deregisters the listener\n     */\n    StateRegistry.prototype.onStatesChanged = function (listener) {\n        this.listeners.push(listener);\n        return function deregisterListener() {\n            removeFrom(this.listeners)(listener);\n        }.bind(this);\n    };\n    /**\n     * Gets the implicit root state\n     *\n     * Gets the root of the state tree.\n     * The root state is implicitly created by UI-Router.\n     * Note: this returns the internal [[StateObject]] representation, not a [[StateDeclaration]]\n     *\n     * @return the root [[StateObject]]\n     */\n    StateRegistry.prototype.root = function () {\n        return this._root;\n    };\n    /**\n     * Adds a state to the registry\n     *\n     * Registers a [[StateDeclaration]] or queues it for registration.\n     *\n     * Note: a state will be queued if the state's parent isn't yet registered.\n     *\n     * @param stateDefinition the definition of the state to register.\n     * @returns the internal [[StateObject]] object.\n     *          If the state was successfully registered, then the object is fully built (See: [[StateBuilder]]).\n     *          If the state was only queued, then the object is not fully built.\n     */\n    StateRegistry.prototype.register = function (stateDefinition) {\n        return this.stateQueue.register(stateDefinition);\n    };\n    /** @hidden */\n    StateRegistry.prototype._deregisterTree = function (state) {\n        var _this = this;\n        var all = this.get().map(function (s) { return s.$$state(); });\n        var getChildren = function (states) {\n            var _children = all.filter(function (s) { return states.indexOf(s.parent) !== -1; });\n            return _children.length === 0 ? _children : _children.concat(getChildren(_children));\n        };\n        var children = getChildren([state]);\n        var deregistered = [state].concat(children).reverse();\n        deregistered.forEach(function (_state) {\n            var rulesApi = _this.router.urlService.rules;\n            // Remove URL rule\n            rulesApi\n                .rules()\n                .filter(propEq('state', _state))\n                .forEach(function (rule) { return rulesApi.removeRule(rule); });\n            // Remove state from registry\n            delete _this.states[_state.name];\n        });\n        return deregistered;\n    };\n    /**\n     * Removes a state from the registry\n     *\n     * This removes a state from the registry.\n     * If the state has children, they are are also removed from the registry.\n     *\n     * @param stateOrName the state's name or object representation\n     * @returns {StateObject[]} a list of removed states\n     */\n    StateRegistry.prototype.deregister = function (stateOrName) {\n        var _state = this.get(stateOrName);\n        if (!_state)\n            throw new Error(\"Can't deregister state; not found: \" + stateOrName);\n        var deregisteredStates = this._deregisterTree(_state.$$state());\n        this.listeners.forEach(function (listener) { return listener('deregistered', deregisteredStates.map(function (s) { return s.self; })); });\n        return deregisteredStates;\n    };\n    StateRegistry.prototype.get = function (stateOrName, base) {\n        var _this = this;\n        if (arguments.length === 0)\n            return Object.keys(this.states).map(function (name) { return _this.states[name].self; });\n        var found = this.matcher.find(stateOrName, base);\n        return (found && found.self) || null;\n    };\n    StateRegistry.prototype.decorator = function (name, func) {\n        return this.builder.builder(name, func);\n    };\n    return StateRegistry;\n}());\nexport { StateRegistry };\n//# sourceMappingURL=stateRegistry.js.map","/** @publicapi @module transition */ /** */\nimport { TransitionHookPhase } from './interface';\nimport { defaults, noop, silentRejection } from '../common/common';\nimport { fnToString, maxLength } from '../common/strings';\nimport { isPromise } from '../common/predicates';\nimport { is, parse } from '../common/hof';\nimport { trace } from '../common/trace';\nimport { services } from '../common/coreservices';\nimport { Rejection } from './rejectFactory';\nimport { TargetState } from '../state/targetState';\nvar defaultOptions = {\n    current: noop,\n    transition: null,\n    traceData: {},\n    bind: null,\n};\n/** @hidden */\nvar TransitionHook = /** @class */ (function () {\n    function TransitionHook(transition, stateContext, registeredHook, options) {\n        var _this = this;\n        this.transition = transition;\n        this.stateContext = stateContext;\n        this.registeredHook = registeredHook;\n        this.options = options;\n        this.isSuperseded = function () { return _this.type.hookPhase === TransitionHookPhase.RUN && !_this.options.transition.isActive(); };\n        this.options = defaults(options, defaultOptions);\n        this.type = registeredHook.eventType;\n    }\n    /**\n     * Chains together an array of TransitionHooks.\n     *\n     * Given a list of [[TransitionHook]] objects, chains them together.\n     * Each hook is invoked after the previous one completes.\n     *\n     * #### Example:\n     * ```js\n     * var hooks: TransitionHook[] = getHooks();\n     * let promise: Promise<any> = TransitionHook.chain(hooks);\n     *\n     * promise.then(handleSuccess, handleError);\n     * ```\n     *\n     * @param hooks the list of hooks to chain together\n     * @param waitFor if provided, the chain is `.then()`'ed off this promise\n     * @returns a `Promise` for sequentially invoking the hooks (in order)\n     */\n    TransitionHook.chain = function (hooks, waitFor) {\n        // Chain the next hook off the previous\n        var createHookChainR = function (prev, nextHook) { return prev.then(function () { return nextHook.invokeHook(); }); };\n        return hooks.reduce(createHookChainR, waitFor || services.$q.when());\n    };\n    /**\n     * Invokes all the provided TransitionHooks, in order.\n     * Each hook's return value is checked.\n     * If any hook returns a promise, then the rest of the hooks are chained off that promise, and the promise is returned.\n     * If no hook returns a promise, then all hooks are processed synchronously.\n     *\n     * @param hooks the list of TransitionHooks to invoke\n     * @param doneCallback a callback that is invoked after all the hooks have successfully completed\n     *\n     * @returns a promise for the async result, or the result of the callback\n     */\n    TransitionHook.invokeHooks = function (hooks, doneCallback) {\n        for (var idx = 0; idx < hooks.length; idx++) {\n            var hookResult = hooks[idx].invokeHook();\n            if (isPromise(hookResult)) {\n                var remainingHooks = hooks.slice(idx + 1);\n                return TransitionHook.chain(remainingHooks, hookResult).then(doneCallback);\n            }\n        }\n        return doneCallback();\n    };\n    /**\n     * Run all TransitionHooks, ignoring their return value.\n     */\n    TransitionHook.runAllHooks = function (hooks) {\n        hooks.forEach(function (hook) { return hook.invokeHook(); });\n    };\n    TransitionHook.prototype.logError = function (err) {\n        this.transition.router.stateService.defaultErrorHandler()(err);\n    };\n    TransitionHook.prototype.invokeHook = function () {\n        var _this = this;\n        var hook = this.registeredHook;\n        if (hook._deregistered)\n            return;\n        var notCurrent = this.getNotCurrentRejection();\n        if (notCurrent)\n            return notCurrent;\n        var options = this.options;\n        trace.traceHookInvocation(this, this.transition, options);\n        var invokeCallback = function () { return hook.callback.call(options.bind, _this.transition, _this.stateContext); };\n        var normalizeErr = function (err) { return Rejection.normalize(err).toPromise(); };\n        var handleError = function (err) { return hook.eventType.getErrorHandler(_this)(err); };\n        var handleResult = function (result) { return hook.eventType.getResultHandler(_this)(result); };\n        try {\n            var result = invokeCallback();\n            if (!this.type.synchronous && isPromise(result)) {\n                return result.catch(normalizeErr).then(handleResult, handleError);\n            }\n            else {\n                return handleResult(result);\n            }\n        }\n        catch (err) {\n            // If callback throws (synchronously)\n            return handleError(Rejection.normalize(err));\n        }\n        finally {\n            if (hook.invokeLimit && ++hook.invokeCount >= hook.invokeLimit) {\n                hook.deregister();\n            }\n        }\n    };\n    /**\n     * This method handles the return value of a Transition Hook.\n     *\n     * A hook can return false (cancel), a TargetState (redirect),\n     * or a promise (which may later resolve to false or a redirect)\n     *\n     * This also handles \"transition superseded\" -- when a new transition\n     * was started while the hook was still running\n     */\n    TransitionHook.prototype.handleHookResult = function (result) {\n        var _this = this;\n        var notCurrent = this.getNotCurrentRejection();\n        if (notCurrent)\n            return notCurrent;\n        // Hook returned a promise\n        if (isPromise(result)) {\n            // Wait for the promise, then reprocess with the resulting value\n            return result.then(function (val) { return _this.handleHookResult(val); });\n        }\n        trace.traceHookResult(result, this.transition, this.options);\n        // Hook returned false\n        if (result === false) {\n            // Abort this Transition\n            return Rejection.aborted('Hook aborted transition').toPromise();\n        }\n        var isTargetState = is(TargetState);\n        // hook returned a TargetState\n        if (isTargetState(result)) {\n            // Halt the current Transition and redirect (a new Transition) to the TargetState.\n            return Rejection.redirected(result).toPromise();\n        }\n    };\n    /**\n     * Return a Rejection promise if the transition is no longer current due\n     * to a stopped router (disposed), or a new transition has started and superseded this one.\n     */\n    TransitionHook.prototype.getNotCurrentRejection = function () {\n        var router = this.transition.router;\n        // The router is stopped\n        if (router._disposed) {\n            return Rejection.aborted(\"UIRouter instance #\" + router.$id + \" has been stopped (disposed)\").toPromise();\n        }\n        if (this.transition._aborted) {\n            return Rejection.aborted().toPromise();\n        }\n        // This transition is no longer current.\n        // Another transition started while this hook was still running.\n        if (this.isSuperseded()) {\n            // Abort this transition\n            return Rejection.superseded(this.options.current()).toPromise();\n        }\n    };\n    TransitionHook.prototype.toString = function () {\n        var _a = this, options = _a.options, registeredHook = _a.registeredHook;\n        var event = parse('traceData.hookType')(options) || 'internal', context = parse('traceData.context.state.name')(options) || parse('traceData.context')(options) || 'unknown', name = fnToString(registeredHook.callback);\n        return event + \" context: \" + context + \", \" + maxLength(200, name);\n    };\n    /**\n     * These GetResultHandler(s) are used by [[invokeHook]] below\n     * Each HookType chooses a GetResultHandler (See: [[TransitionService._defineCoreEvents]])\n     */\n    TransitionHook.HANDLE_RESULT = function (hook) { return function (result) {\n        return hook.handleHookResult(result);\n    }; };\n    /**\n     * If the result is a promise rejection, log it.\n     * Otherwise, ignore the result.\n     */\n    TransitionHook.LOG_REJECTED_RESULT = function (hook) { return function (result) {\n        isPromise(result) && result.catch(function (err) { return hook.logError(Rejection.normalize(err)); });\n        return undefined;\n    }; };\n    /**\n     * These GetErrorHandler(s) are used by [[invokeHook]] below\n     * Each HookType chooses a GetErrorHandler (See: [[TransitionService._defineCoreEvents]])\n     */\n    TransitionHook.LOG_ERROR = function (hook) { return function (error) { return hook.logError(error); }; };\n    TransitionHook.REJECT_ERROR = function (hook) { return function (error) { return silentRejection(error); }; };\n    TransitionHook.THROW_ERROR = function (hook) { return function (error) {\n        throw error;\n    }; };\n    return TransitionHook;\n}());\nexport { TransitionHook };\n//# sourceMappingURL=transitionHook.js.map","/** @publicapi @module transition */ /** */\nimport { isString, isFunction, Glob, extend, removeFrom, tail, values, identity, mapObj } from '../common';\nimport { // has or is using\nTransitionHookScope, } from './interface';\n/**\n * Determines if the given state matches the matchCriteria\n *\n * @hidden\n *\n * @param state a State Object to test against\n * @param criterion\n * - If a string, matchState uses the string as a glob-matcher against the state name\n * - If an array (of strings), matchState uses each string in the array as a glob-matchers against the state name\n *   and returns a positive match if any of the globs match.\n * - If a function, matchState calls the function with the state and returns true if the function's result is truthy.\n * @returns {boolean}\n */\nexport function matchState(state, criterion, transition) {\n    var toMatch = isString(criterion) ? [criterion] : criterion;\n    function matchGlobs(_state) {\n        var globStrings = toMatch;\n        for (var i = 0; i < globStrings.length; i++) {\n            var glob = new Glob(globStrings[i]);\n            if ((glob && glob.matches(_state.name)) || (!glob && globStrings[i] === _state.name)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    var matchFn = (isFunction(toMatch) ? toMatch : matchGlobs);\n    return !!matchFn(state, transition);\n}\n/**\n * @internalapi\n * The registration data for a registered transition hook\n */\nvar RegisteredHook = /** @class */ (function () {\n    function RegisteredHook(tranSvc, eventType, callback, matchCriteria, removeHookFromRegistry, options) {\n        if (options === void 0) { options = {}; }\n        this.tranSvc = tranSvc;\n        this.eventType = eventType;\n        this.callback = callback;\n        this.matchCriteria = matchCriteria;\n        this.removeHookFromRegistry = removeHookFromRegistry;\n        this.invokeCount = 0;\n        this._deregistered = false;\n        this.priority = options.priority || 0;\n        this.bind = options.bind || null;\n        this.invokeLimit = options.invokeLimit;\n    }\n    /**\n     * Gets the matching [[PathNode]]s\n     *\n     * Given an array of [[PathNode]]s, and a [[HookMatchCriterion]], returns an array containing\n     * the [[PathNode]]s that the criteria matches, or `null` if there were no matching nodes.\n     *\n     * Returning `null` is significant to distinguish between the default\n     * \"match-all criterion value\" of `true` compared to a `() => true` function,\n     * when the nodes is an empty array.\n     *\n     * This is useful to allow a transition match criteria of `entering: true`\n     * to still match a transition, even when `entering === []`.  Contrast that\n     * with `entering: (state) => true` which only matches when a state is actually\n     * being entered.\n     */\n    RegisteredHook.prototype._matchingNodes = function (nodes, criterion, transition) {\n        if (criterion === true)\n            return nodes;\n        var matching = nodes.filter(function (node) { return matchState(node.state, criterion, transition); });\n        return matching.length ? matching : null;\n    };\n    /**\n     * Gets the default match criteria (all `true`)\n     *\n     * Returns an object which has all the criteria match paths as keys and `true` as values, i.e.:\n     *\n     * ```js\n     * {\n     *   to: true,\n     *   from: true,\n     *   entering: true,\n     *   exiting: true,\n     *   retained: true,\n     * }\n     */\n    RegisteredHook.prototype._getDefaultMatchCriteria = function () {\n        return mapObj(this.tranSvc._pluginapi._getPathTypes(), function () { return true; });\n    };\n    /**\n     * Gets matching nodes as [[IMatchingNodes]]\n     *\n     * Create a IMatchingNodes object from the TransitionHookTypes that is roughly equivalent to:\n     *\n     * ```js\n     * let matches: IMatchingNodes = {\n     *   to:       _matchingNodes([tail(treeChanges.to)],   mc.to),\n     *   from:     _matchingNodes([tail(treeChanges.from)], mc.from),\n     *   exiting:  _matchingNodes(treeChanges.exiting,      mc.exiting),\n     *   retained: _matchingNodes(treeChanges.retained,     mc.retained),\n     *   entering: _matchingNodes(treeChanges.entering,     mc.entering),\n     * };\n     * ```\n     */\n    RegisteredHook.prototype._getMatchingNodes = function (treeChanges, transition) {\n        var _this = this;\n        var criteria = extend(this._getDefaultMatchCriteria(), this.matchCriteria);\n        var paths = values(this.tranSvc._pluginapi._getPathTypes());\n        return paths.reduce(function (mn, pathtype) {\n            // STATE scope criteria matches against every node in the path.\n            // TRANSITION scope criteria matches against only the last node in the path\n            var isStateHook = pathtype.scope === TransitionHookScope.STATE;\n            var path = treeChanges[pathtype.name] || [];\n            var nodes = isStateHook ? path : [tail(path)];\n            mn[pathtype.name] = _this._matchingNodes(nodes, criteria[pathtype.name], transition);\n            return mn;\n        }, {});\n    };\n    /**\n     * Determines if this hook's [[matchCriteria]] match the given [[TreeChanges]]\n     *\n     * @returns an IMatchingNodes object, or null. If an IMatchingNodes object is returned, its values\n     * are the matching [[PathNode]]s for each [[HookMatchCriterion]] (to, from, exiting, retained, entering)\n     */\n    RegisteredHook.prototype.matches = function (treeChanges, transition) {\n        var matches = this._getMatchingNodes(treeChanges, transition);\n        // Check if all the criteria matched the TreeChanges object\n        var allMatched = values(matches).every(identity);\n        return allMatched ? matches : null;\n    };\n    RegisteredHook.prototype.deregister = function () {\n        this.removeHookFromRegistry(this);\n        this._deregistered = true;\n    };\n    return RegisteredHook;\n}());\nexport { RegisteredHook };\n/** @hidden Return a registration function of the requested type. */\nexport function makeEvent(registry, transitionService, eventType) {\n    // Create the object which holds the registered transition hooks.\n    var _registeredHooks = (registry._registeredHooks = registry._registeredHooks || {});\n    var hooks = (_registeredHooks[eventType.name] = []);\n    var removeHookFn = removeFrom(hooks);\n    // Create hook registration function on the IHookRegistry for the event\n    registry[eventType.name] = hookRegistrationFn;\n    function hookRegistrationFn(matchObject, callback, options) {\n        if (options === void 0) { options = {}; }\n        var registeredHook = new RegisteredHook(transitionService, eventType, callback, matchObject, removeHookFn, options);\n        hooks.push(registeredHook);\n        return registeredHook.deregister.bind(registeredHook);\n    }\n    return hookRegistrationFn;\n}\n//# sourceMappingURL=hookRegistry.js.map","/** @publicapi @module transition */ /** */\nimport { extend, assertPredicate, unnestR, identity } from '../common/common';\nimport { isArray } from '../common/predicates';\nimport { TransitionHookPhase, TransitionHookScope, } from './interface';\nimport { TransitionHook } from './transitionHook';\n/**\n * This class returns applicable TransitionHooks for a specific Transition instance.\n *\n * Hooks ([[RegisteredHook]]) may be registered globally, e.g., $transitions.onEnter(...), or locally, e.g.\n * myTransition.onEnter(...).  The HookBuilder finds matching RegisteredHooks (where the match criteria is\n * determined by the type of hook)\n *\n * The HookBuilder also converts RegisteredHooks objects to TransitionHook objects, which are used to run a Transition.\n *\n * The HookBuilder constructor is given the $transitions service and a Transition instance.  Thus, a HookBuilder\n * instance may only be used for one specific Transition object. (side note: the _treeChanges accessor is private\n * in the Transition class, so we must also provide the Transition's _treeChanges)\n *\n */\nvar HookBuilder = /** @class */ (function () {\n    function HookBuilder(transition) {\n        this.transition = transition;\n    }\n    HookBuilder.prototype.buildHooksForPhase = function (phase) {\n        var _this = this;\n        var $transitions = this.transition.router.transitionService;\n        return $transitions._pluginapi\n            ._getEvents(phase)\n            .map(function (type) { return _this.buildHooks(type); })\n            .reduce(unnestR, [])\n            .filter(identity);\n    };\n    /**\n     * Returns an array of newly built TransitionHook objects.\n     *\n     * - Finds all RegisteredHooks registered for the given `hookType` which matched the transition's [[TreeChanges]].\n     * - Finds [[PathNode]] (or `PathNode[]`) to use as the TransitionHook context(s)\n     * - For each of the [[PathNode]]s, creates a TransitionHook\n     *\n     * @param hookType the type of the hook registration function, e.g., 'onEnter', 'onFinish'.\n     */\n    HookBuilder.prototype.buildHooks = function (hookType) {\n        var transition = this.transition;\n        var treeChanges = transition.treeChanges();\n        // Find all the matching registered hooks for a given hook type\n        var matchingHooks = this.getMatchingHooks(hookType, treeChanges, transition);\n        if (!matchingHooks)\n            return [];\n        var baseHookOptions = {\n            transition: transition,\n            current: transition.options().current,\n        };\n        var makeTransitionHooks = function (hook) {\n            // Fetch the Nodes that caused this hook to match.\n            var matches = hook.matches(treeChanges, transition);\n            // Select the PathNode[] that will be used as TransitionHook context objects\n            var matchingNodes = matches[hookType.criteriaMatchPath.name];\n            // Return an array of HookTuples\n            return matchingNodes.map(function (node) {\n                var _options = extend({\n                    bind: hook.bind,\n                    traceData: { hookType: hookType.name, context: node },\n                }, baseHookOptions);\n                var state = hookType.criteriaMatchPath.scope === TransitionHookScope.STATE ? node.state.self : null;\n                var transitionHook = new TransitionHook(transition, state, hook, _options);\n                return { hook: hook, node: node, transitionHook: transitionHook };\n            });\n        };\n        return matchingHooks\n            .map(makeTransitionHooks)\n            .reduce(unnestR, [])\n            .sort(tupleSort(hookType.reverseSort))\n            .map(function (tuple) { return tuple.transitionHook; });\n    };\n    /**\n     * Finds all RegisteredHooks from:\n     * - The Transition object instance hook registry\n     * - The TransitionService ($transitions) global hook registry\n     *\n     * which matched:\n     * - the eventType\n     * - the matchCriteria (to, from, exiting, retained, entering)\n     *\n     * @returns an array of matched [[RegisteredHook]]s\n     */\n    HookBuilder.prototype.getMatchingHooks = function (hookType, treeChanges, transition) {\n        var isCreate = hookType.hookPhase === TransitionHookPhase.CREATE;\n        // Instance and Global hook registries\n        var $transitions = this.transition.router.transitionService;\n        var registries = isCreate ? [$transitions] : [this.transition, $transitions];\n        return registries\n            .map(function (reg) { return reg.getHooks(hookType.name); }) // Get named hooks from registries\n            .filter(assertPredicate(isArray, \"broken event named: \" + hookType.name)) // Sanity check\n            .reduce(unnestR, []) // Un-nest RegisteredHook[][] to RegisteredHook[] array\n            .filter(function (hook) { return hook.matches(treeChanges, transition); }); // Only those satisfying matchCriteria\n    };\n    return HookBuilder;\n}());\nexport { HookBuilder };\n/**\n * A factory for a sort function for HookTuples.\n *\n * The sort function first compares the PathNode depth (how deep in the state tree a node is), then compares\n * the EventHook priority.\n *\n * @param reverseDepthSort a boolean, when true, reverses the sort order for the node depth\n * @returns a tuple sort function\n */\nfunction tupleSort(reverseDepthSort) {\n    if (reverseDepthSort === void 0) { reverseDepthSort = false; }\n    return function nodeDepthThenPriority(l, r) {\n        var factor = reverseDepthSort ? -1 : 1;\n        var depthDelta = (l.node.state.path.length - r.node.state.path.length) * factor;\n        return depthDelta !== 0 ? depthDelta : r.hook.priority - l.hook.priority;\n    };\n}\n//# sourceMappingURL=hookBuilder.js.map","/** @publicapi @module transition */ /** */\nimport { trace } from '../common/trace';\nimport { services } from '../common/coreservices';\nimport { stringify } from '../common/strings';\nimport { map, find, extend, mergeR, tail, omit, arrayTuples, unnestR, identity, anyTrueR } from '../common/common';\nimport { isObject, isUndefined } from '../common/predicates';\nimport { prop, propEq, val, not, is } from '../common/hof';\nimport { TransitionHookPhase, } from './interface'; // has or is using\nimport { TransitionHook } from './transitionHook';\nimport { matchState, makeEvent } from './hookRegistry';\nimport { HookBuilder } from './hookBuilder';\nimport { PathUtils } from '../path/pathUtils';\nimport { Param } from '../params/param';\nimport { Resolvable } from '../resolve/resolvable';\nimport { ResolveContext } from '../resolve/resolveContext';\nimport { Rejection } from './rejectFactory';\nimport { flattenR, uniqR } from '../common';\n/** @hidden */\nvar stateSelf = prop('self');\n/**\n * Represents a transition between two states.\n *\n * When navigating to a state, we are transitioning **from** the current state **to** the new state.\n *\n * This object contains all contextual information about the to/from states, parameters, resolves.\n * It has information about all states being entered and exited as a result of the transition.\n */\nvar Transition = /** @class */ (function () {\n    /**\n     * Creates a new Transition object.\n     *\n     * If the target state is not valid, an error is thrown.\n     *\n     * @internalapi\n     *\n     * @param fromPath The path of [[PathNode]]s from which the transition is leaving.  The last node in the `fromPath`\n     *        encapsulates the \"from state\".\n     * @param targetState The target state and parameters being transitioned to (also, the transition options)\n     * @param router The [[UIRouter]] instance\n     */\n    function Transition(fromPath, targetState, router) {\n        var _this = this;\n        /** @hidden */\n        this._deferred = services.$q.defer();\n        /**\n         * This promise is resolved or rejected based on the outcome of the Transition.\n         *\n         * When the transition is successful, the promise is resolved\n         * When the transition is unsuccessful, the promise is rejected with the [[Rejection]] or javascript error\n         */\n        this.promise = this._deferred.promise;\n        /** @hidden Holds the hook registration functions such as those passed to Transition.onStart() */\n        this._registeredHooks = {};\n        /** @hidden */\n        this._hookBuilder = new HookBuilder(this);\n        /** Checks if this transition is currently active/running. */\n        this.isActive = function () { return _this.router.globals.transition === _this; };\n        this.router = router;\n        this._targetState = targetState;\n        if (!targetState.valid()) {\n            throw new Error(targetState.error());\n        }\n        // current() is assumed to come from targetState.options, but provide a naive implementation otherwise.\n        this._options = extend({ current: val(this) }, targetState.options());\n        this.$id = router.transitionService._transitionCount++;\n        var toPath = PathUtils.buildToPath(fromPath, targetState);\n        this._treeChanges = PathUtils.treeChanges(fromPath, toPath, this._options.reloadState);\n        this.createTransitionHookRegFns();\n        var onCreateHooks = this._hookBuilder.buildHooksForPhase(TransitionHookPhase.CREATE);\n        TransitionHook.invokeHooks(onCreateHooks, function () { return null; });\n        this.applyViewConfigs(router);\n    }\n    /** @hidden */\n    Transition.prototype.onBefore = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onStart = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onExit = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onRetain = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onEnter = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onFinish = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onSuccess = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onError = function (criteria, callback, options) {\n        return;\n    };\n    /** @hidden\n     * Creates the transition-level hook registration functions\n     * (which can then be used to register hooks)\n     */\n    Transition.prototype.createTransitionHookRegFns = function () {\n        var _this = this;\n        this.router.transitionService._pluginapi\n            ._getEvents()\n            .filter(function (type) { return type.hookPhase !== TransitionHookPhase.CREATE; })\n            .forEach(function (type) { return makeEvent(_this, _this.router.transitionService, type); });\n    };\n    /** @internalapi */\n    Transition.prototype.getHooks = function (hookName) {\n        return this._registeredHooks[hookName];\n    };\n    Transition.prototype.applyViewConfigs = function (router) {\n        var enteringStates = this._treeChanges.entering.map(function (node) { return node.state; });\n        PathUtils.applyViewConfigs(router.transitionService.$view, this._treeChanges.to, enteringStates);\n    };\n    /**\n     * @internalapi\n     *\n     * @returns the internal from [State] object\n     */\n    Transition.prototype.$from = function () {\n        return tail(this._treeChanges.from).state;\n    };\n    /**\n     * @internalapi\n     *\n     * @returns the internal to [State] object\n     */\n    Transition.prototype.$to = function () {\n        return tail(this._treeChanges.to).state;\n    };\n    /**\n     * Returns the \"from state\"\n     *\n     * Returns the state that the transition is coming *from*.\n     *\n     * @returns The state declaration object for the Transition's (\"from state\").\n     */\n    Transition.prototype.from = function () {\n        return this.$from().self;\n    };\n    /**\n     * Returns the \"to state\"\n     *\n     * Returns the state that the transition is going *to*.\n     *\n     * @returns The state declaration object for the Transition's target state (\"to state\").\n     */\n    Transition.prototype.to = function () {\n        return this.$to().self;\n    };\n    /**\n     * Gets the Target State\n     *\n     * A transition's [[TargetState]] encapsulates the [[to]] state, the [[params]], and the [[options]] as a single object.\n     *\n     * @returns the [[TargetState]] of this Transition\n     */\n    Transition.prototype.targetState = function () {\n        return this._targetState;\n    };\n    /**\n     * Determines whether two transitions are equivalent.\n     * @deprecated\n     */\n    Transition.prototype.is = function (compare) {\n        if (compare instanceof Transition) {\n            // TODO: Also compare parameters\n            return this.is({ to: compare.$to().name, from: compare.$from().name });\n        }\n        return !((compare.to && !matchState(this.$to(), compare.to, this)) ||\n            (compare.from && !matchState(this.$from(), compare.from, this)));\n    };\n    Transition.prototype.params = function (pathname) {\n        if (pathname === void 0) { pathname = 'to'; }\n        return Object.freeze(this._treeChanges[pathname].map(prop('paramValues')).reduce(mergeR, {}));\n    };\n    Transition.prototype.paramsChanged = function () {\n        var fromParams = this.params('from');\n        var toParams = this.params('to');\n        // All the parameters declared on both the \"to\" and \"from\" paths\n        var allParamDescriptors = []\n            .concat(this._treeChanges.to)\n            .concat(this._treeChanges.from)\n            .map(function (pathNode) { return pathNode.paramSchema; })\n            .reduce(flattenR, [])\n            .reduce(uniqR, []);\n        var changedParamDescriptors = Param.changed(allParamDescriptors, fromParams, toParams);\n        return changedParamDescriptors.reduce(function (changedValues, descriptor) {\n            changedValues[descriptor.id] = toParams[descriptor.id];\n            return changedValues;\n        }, {});\n    };\n    /**\n     * Creates a [[UIInjector]] Dependency Injector\n     *\n     * Returns a Dependency Injector for the Transition's target state (to state).\n     * The injector provides resolve values which the target state has access to.\n     *\n     * The `UIInjector` can also provide values from the native root/global injector (ng1/ng2).\n     *\n     * #### Example:\n     * ```js\n     * .onEnter({ entering: 'myState' }, trans => {\n     *   var myResolveValue = trans.injector().get('myResolve');\n     *   // Inject a global service from the global/native injector (if it exists)\n     *   var MyService = trans.injector().get('MyService');\n     * })\n     * ```\n     *\n     * In some cases (such as `onBefore`), you may need access to some resolve data but it has not yet been fetched.\n     * You can use [[UIInjector.getAsync]] to get a promise for the data.\n     * #### Example:\n     * ```js\n     * .onBefore({}, trans => {\n     *   return trans.injector().getAsync('myResolve').then(myResolveValue =>\n     *     return myResolveValue !== 'ABORT';\n     *   });\n     * });\n     * ```\n     *\n     * If a `state` is provided, the injector that is returned will be limited to resolve values that the provided state has access to.\n     * This can be useful if both a parent state `foo` and a child state `foo.bar` have both defined a resolve such as `data`.\n     * #### Example:\n     * ```js\n     * .onEnter({ to: 'foo.bar' }, trans => {\n     *   // returns result of `foo` state's `myResolve` resolve\n     *   // even though `foo.bar` also has a `myResolve` resolve\n     *   var fooData = trans.injector('foo').get('myResolve');\n     * });\n     * ```\n     *\n     * If you need resolve data from the exiting states, pass `'from'` as `pathName`.\n     * The resolve data from the `from` path will be returned.\n     * #### Example:\n     * ```js\n     * .onExit({ exiting: 'foo.bar' }, trans => {\n     *   // Gets the resolve value of `myResolve` from the state being exited\n     *   var fooData = trans.injector(null, 'from').get('myResolve');\n     * });\n     * ```\n     *\n     *\n     * @param state Limits the resolves provided to only the resolves the provided state has access to.\n     * @param pathName Default: `'to'`: Chooses the path for which to create the injector. Use this to access resolves for `exiting` states.\n     *\n     * @returns a [[UIInjector]]\n     */\n    Transition.prototype.injector = function (state, pathName) {\n        if (pathName === void 0) { pathName = 'to'; }\n        var path = this._treeChanges[pathName];\n        if (state)\n            path = PathUtils.subPath(path, function (node) { return node.state === state || node.state.name === state; });\n        return new ResolveContext(path).injector();\n    };\n    /**\n     * Gets all available resolve tokens (keys)\n     *\n     * This method can be used in conjunction with [[injector]] to inspect the resolve values\n     * available to the Transition.\n     *\n     * This returns all the tokens defined on [[StateDeclaration.resolve]] blocks, for the states\n     * in the Transition's [[TreeChanges.to]] path.\n     *\n     * #### Example:\n     * This example logs all resolve values\n     * ```js\n     * let tokens = trans.getResolveTokens();\n     * tokens.forEach(token => console.log(token + \" = \" + trans.injector().get(token)));\n     * ```\n     *\n     * #### Example:\n     * This example creates promises for each resolve value.\n     * This triggers fetches of resolves (if any have not yet been fetched).\n     * When all promises have all settled, it logs the resolve values.\n     * ```js\n     * let tokens = trans.getResolveTokens();\n     * let promise = tokens.map(token => trans.injector().getAsync(token));\n     * Promise.all(promises).then(values => console.log(\"Resolved values: \" + values));\n     * ```\n     *\n     * Note: Angular 1 users whould use `$q.all()`\n     *\n     * @param pathname resolve context's path name (e.g., `to` or `from`)\n     *\n     * @returns an array of resolve tokens (keys)\n     */\n    Transition.prototype.getResolveTokens = function (pathname) {\n        if (pathname === void 0) { pathname = 'to'; }\n        return new ResolveContext(this._treeChanges[pathname]).getTokens();\n    };\n    /**\n     * Dynamically adds a new [[Resolvable]] (i.e., [[StateDeclaration.resolve]]) to this transition.\n     *\n     * Allows a transition hook to dynamically add a Resolvable to this Transition.\n     *\n     * Use the [[Transition.injector]] to retrieve the resolved data in subsequent hooks ([[UIInjector.get]]).\n     *\n     * If a `state` argument is provided, the Resolvable is processed when that state is being entered.\n     * If no `state` is provided then the root state is used.\n     * If the given `state` has already been entered, the Resolvable is processed when any child state is entered.\n     * If no child states will be entered, the Resolvable is processed during the `onFinish` phase of the Transition.\n     *\n     * The `state` argument also scopes the resolved data.\n     * The resolved data is available from the injector for that `state` and any children states.\n     *\n     * #### Example:\n     * ```js\n     * transitionService.onBefore({}, transition => {\n     *   transition.addResolvable({\n     *     token: 'myResolve',\n     *     deps: ['MyService'],\n     *     resolveFn: myService => myService.getData()\n     *   });\n     * });\n     * ```\n     *\n     * @param resolvable a [[ResolvableLiteral]] object (or a [[Resolvable]])\n     * @param state the state in the \"to path\" which should receive the new resolve (otherwise, the root state)\n     */\n    Transition.prototype.addResolvable = function (resolvable, state) {\n        if (state === void 0) { state = ''; }\n        resolvable = is(Resolvable)(resolvable) ? resolvable : new Resolvable(resolvable);\n        var stateName = typeof state === 'string' ? state : state.name;\n        var topath = this._treeChanges.to;\n        var targetNode = find(topath, function (node) { return node.state.name === stateName; });\n        var resolveContext = new ResolveContext(topath);\n        resolveContext.addResolvables([resolvable], targetNode.state);\n    };\n    /**\n     * Gets the transition from which this transition was redirected.\n     *\n     * If the current transition is a redirect, this method returns the transition that was redirected.\n     *\n     * #### Example:\n     * ```js\n     * let transitionA = $state.go('A').transition\n     * transitionA.onStart({}, () => $state.target('B'));\n     * $transitions.onSuccess({ to: 'B' }, (trans) => {\n     *   trans.to().name === 'B'; // true\n     *   trans.redirectedFrom() === transitionA; // true\n     * });\n     * ```\n     *\n     * @returns The previous Transition, or null if this Transition is not the result of a redirection\n     */\n    Transition.prototype.redirectedFrom = function () {\n        return this._options.redirectedFrom || null;\n    };\n    /**\n     * Gets the original transition in a redirect chain\n     *\n     * A transition might belong to a long chain of multiple redirects.\n     * This method walks the [[redirectedFrom]] chain back to the original (first) transition in the chain.\n     *\n     * #### Example:\n     * ```js\n     * // states\n     * registry.register({ name: 'A', redirectTo: 'B' });\n     * registry.register({ name: 'B', redirectTo: 'C' });\n     * registry.register({ name: 'C', redirectTo: 'D' });\n     * registry.register({ name: 'D' });\n     *\n     * let transitionA = $state.go('A').transition\n     *\n     * $transitions.onSuccess({ to: 'D' }, (trans) => {\n     *   trans.to().name === 'D'; // true\n     *   trans.redirectedFrom().to().name === 'C'; // true\n     *   trans.originalTransition() === transitionA; // true\n     *   trans.originalTransition().to().name === 'A'; // true\n     * });\n     * ```\n     *\n     * @returns The original Transition that started a redirect chain\n     */\n    Transition.prototype.originalTransition = function () {\n        var rf = this.redirectedFrom();\n        return (rf && rf.originalTransition()) || this;\n    };\n    /**\n     * Get the transition options\n     *\n     * @returns the options for this Transition.\n     */\n    Transition.prototype.options = function () {\n        return this._options;\n    };\n    /**\n     * Gets the states being entered.\n     *\n     * @returns an array of states that will be entered during this transition.\n     */\n    Transition.prototype.entering = function () {\n        return map(this._treeChanges.entering, prop('state')).map(stateSelf);\n    };\n    /**\n     * Gets the states being exited.\n     *\n     * @returns an array of states that will be exited during this transition.\n     */\n    Transition.prototype.exiting = function () {\n        return map(this._treeChanges.exiting, prop('state'))\n            .map(stateSelf)\n            .reverse();\n    };\n    /**\n     * Gets the states being retained.\n     *\n     * @returns an array of states that are already entered from a previous Transition, that will not be\n     *    exited during this Transition\n     */\n    Transition.prototype.retained = function () {\n        return map(this._treeChanges.retained, prop('state')).map(stateSelf);\n    };\n    /**\n     * Get the [[ViewConfig]]s associated with this Transition\n     *\n     * Each state can define one or more views (template/controller), which are encapsulated as `ViewConfig` objects.\n     * This method fetches the `ViewConfigs` for a given path in the Transition (e.g., \"to\" or \"entering\").\n     *\n     * @param pathname the name of the path to fetch views for:\n     *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n     * @param state If provided, only returns the `ViewConfig`s for a single state in the path\n     *\n     * @returns a list of ViewConfig objects for the given path.\n     */\n    Transition.prototype.views = function (pathname, state) {\n        if (pathname === void 0) { pathname = 'entering'; }\n        var path = this._treeChanges[pathname];\n        path = !state ? path : path.filter(propEq('state', state));\n        return path\n            .map(prop('views'))\n            .filter(identity)\n            .reduce(unnestR, []);\n    };\n    Transition.prototype.treeChanges = function (pathname) {\n        return pathname ? this._treeChanges[pathname] : this._treeChanges;\n    };\n    /**\n     * Creates a new transition that is a redirection of the current one.\n     *\n     * This transition can be returned from a [[TransitionService]] hook to\n     * redirect a transition to a new state and/or set of parameters.\n     *\n     * @internalapi\n     *\n     * @returns Returns a new [[Transition]] instance.\n     */\n    Transition.prototype.redirect = function (targetState) {\n        var redirects = 1, trans = this;\n        // tslint:disable-next-line:no-conditional-assignment\n        while ((trans = trans.redirectedFrom()) != null) {\n            if (++redirects > 20)\n                throw new Error(\"Too many consecutive Transition redirects (20+)\");\n        }\n        var redirectOpts = { redirectedFrom: this, source: 'redirect' };\n        // If the original transition was caused by URL sync, then use { location: 'replace' }\n        // on the new transition (unless the target state explicitly specifies location: false).\n        // This causes the original url to be replaced with the url for the redirect target\n        // so the original url disappears from the browser history.\n        if (this.options().source === 'url' && targetState.options().location !== false) {\n            redirectOpts.location = 'replace';\n        }\n        var newOptions = extend({}, this.options(), targetState.options(), redirectOpts);\n        targetState = targetState.withOptions(newOptions, true);\n        var newTransition = this.router.transitionService.create(this._treeChanges.from, targetState);\n        var originalEnteringNodes = this._treeChanges.entering;\n        var redirectEnteringNodes = newTransition._treeChanges.entering;\n        // --- Re-use resolve data from original transition ---\n        // When redirecting from a parent state to a child state where the parent parameter values haven't changed\n        // (because of the redirect), the resolves fetched by the original transition are still valid in the\n        // redirected transition.\n        //\n        // This allows you to define a redirect on a parent state which depends on an async resolve value.\n        // You can wait for the resolve, then redirect to a child state based on the result.\n        // The redirected transition does not have to re-fetch the resolve.\n        // ---------------------------------------------------------\n        var nodeIsReloading = function (reloadState) { return function (node) {\n            return reloadState && node.state.includes[reloadState.name];\n        }; };\n        // Find any \"entering\" nodes in the redirect path that match the original path and aren't being reloaded\n        var matchingEnteringNodes = PathUtils.matching(redirectEnteringNodes, originalEnteringNodes, PathUtils.nonDynamicParams).filter(not(nodeIsReloading(targetState.options().reloadState)));\n        // Use the existing (possibly pre-resolved) resolvables for the matching entering nodes.\n        matchingEnteringNodes.forEach(function (node, idx) {\n            node.resolvables = originalEnteringNodes[idx].resolvables;\n        });\n        return newTransition;\n    };\n    /** @hidden If a transition doesn't exit/enter any states, returns any [[Param]] whose value changed */\n    Transition.prototype._changedParams = function () {\n        var tc = this._treeChanges;\n        /** Return undefined if it's not a \"dynamic\" transition, for the following reasons */\n        // If user explicitly wants a reload\n        if (this._options.reload)\n            return undefined;\n        // If any states are exiting or entering\n        if (tc.exiting.length || tc.entering.length)\n            return undefined;\n        // If to/from path lengths differ\n        if (tc.to.length !== tc.from.length)\n            return undefined;\n        // If the to/from paths are different\n        var pathsDiffer = arrayTuples(tc.to, tc.from)\n            .map(function (tuple) { return tuple[0].state !== tuple[1].state; })\n            .reduce(anyTrueR, false);\n        if (pathsDiffer)\n            return undefined;\n        // Find any parameter values that differ\n        var nodeSchemas = tc.to.map(function (node) { return node.paramSchema; });\n        var _a = [tc.to, tc.from].map(function (path) { return path.map(function (x) { return x.paramValues; }); }), toValues = _a[0], fromValues = _a[1];\n        var tuples = arrayTuples(nodeSchemas, toValues, fromValues);\n        return tuples.map(function (_a) {\n            var schema = _a[0], toVals = _a[1], fromVals = _a[2];\n            return Param.changed(schema, toVals, fromVals);\n        }).reduce(unnestR, []);\n    };\n    /**\n     * Returns true if the transition is dynamic.\n     *\n     * A transition is dynamic if no states are entered nor exited, but at least one dynamic parameter has changed.\n     *\n     * @returns true if the Transition is dynamic\n     */\n    Transition.prototype.dynamic = function () {\n        var changes = this._changedParams();\n        return !changes ? false : changes.map(function (x) { return x.dynamic; }).reduce(anyTrueR, false);\n    };\n    /**\n     * Returns true if the transition is ignored.\n     *\n     * A transition is ignored if no states are entered nor exited, and no parameter values have changed.\n     *\n     * @returns true if the Transition is ignored.\n     */\n    Transition.prototype.ignored = function () {\n        return !!this._ignoredReason();\n    };\n    /** @hidden */\n    Transition.prototype._ignoredReason = function () {\n        var pending = this.router.globals.transition;\n        var reloadState = this._options.reloadState;\n        var same = function (pathA, pathB) {\n            if (pathA.length !== pathB.length)\n                return false;\n            var matching = PathUtils.matching(pathA, pathB);\n            return pathA.length === matching.filter(function (node) { return !reloadState || !node.state.includes[reloadState.name]; }).length;\n        };\n        var newTC = this.treeChanges();\n        var pendTC = pending && pending.treeChanges();\n        if (pendTC && same(pendTC.to, newTC.to) && same(pendTC.exiting, newTC.exiting))\n            return 'SameAsPending';\n        if (newTC.exiting.length === 0 && newTC.entering.length === 0 && same(newTC.from, newTC.to))\n            return 'SameAsCurrent';\n    };\n    /**\n     * Runs the transition\n     *\n     * This method is generally called from the [[StateService.transitionTo]]\n     *\n     * @internalapi\n     *\n     * @returns a promise for a successful transition.\n     */\n    Transition.prototype.run = function () {\n        var _this = this;\n        var runAllHooks = TransitionHook.runAllHooks;\n        // Gets transition hooks array for the given phase\n        var getHooksFor = function (phase) { return _this._hookBuilder.buildHooksForPhase(phase); };\n        // When the chain is complete, then resolve or reject the deferred\n        var transitionSuccess = function () {\n            trace.traceSuccess(_this.$to(), _this);\n            _this.success = true;\n            _this._deferred.resolve(_this.to());\n            runAllHooks(getHooksFor(TransitionHookPhase.SUCCESS));\n        };\n        var transitionError = function (reason) {\n            trace.traceError(reason, _this);\n            _this.success = false;\n            _this._deferred.reject(reason);\n            _this._error = reason;\n            runAllHooks(getHooksFor(TransitionHookPhase.ERROR));\n        };\n        var runTransition = function () {\n            // Wait to build the RUN hook chain until the BEFORE hooks are done\n            // This allows a BEFORE hook to dynamically add additional RUN hooks via the Transition object.\n            var allRunHooks = getHooksFor(TransitionHookPhase.RUN);\n            var done = function () { return services.$q.when(undefined); };\n            return TransitionHook.invokeHooks(allRunHooks, done);\n        };\n        var startTransition = function () {\n            var globals = _this.router.globals;\n            globals.lastStartedTransitionId = _this.$id;\n            globals.transition = _this;\n            globals.transitionHistory.enqueue(_this);\n            trace.traceTransitionStart(_this);\n            return services.$q.when(undefined);\n        };\n        var allBeforeHooks = getHooksFor(TransitionHookPhase.BEFORE);\n        TransitionHook.invokeHooks(allBeforeHooks, startTransition)\n            .then(runTransition)\n            .then(transitionSuccess, transitionError);\n        return this.promise;\n    };\n    /**\n     * Checks if the Transition is valid\n     *\n     * @returns true if the Transition is valid\n     */\n    Transition.prototype.valid = function () {\n        return !this.error() || this.success !== undefined;\n    };\n    /**\n     * Aborts this transition\n     *\n     * Imperative API to abort a Transition.\n     * This only applies to Transitions that are not yet complete.\n     */\n    Transition.prototype.abort = function () {\n        // Do not set flag if the transition is already complete\n        if (isUndefined(this.success)) {\n            this._aborted = true;\n        }\n    };\n    /**\n     * The Transition error reason.\n     *\n     * If the transition is invalid (and could not be run), returns the reason the transition is invalid.\n     * If the transition was valid and ran, but was not successful, returns the reason the transition failed.\n     *\n     * @returns a transition rejection explaining why the transition is invalid, or the reason the transition failed.\n     */\n    Transition.prototype.error = function () {\n        var state = this.$to();\n        if (state.self.abstract) {\n            return Rejection.invalid(\"Cannot transition to abstract state '\" + state.name + \"'\");\n        }\n        var paramDefs = state.parameters();\n        var values = this.params();\n        var invalidParams = paramDefs.filter(function (param) { return !param.validates(values[param.id]); });\n        if (invalidParams.length) {\n            var invalidValues = invalidParams.map(function (param) { return \"[\" + param.id + \":\" + stringify(values[param.id]) + \"]\"; }).join(', ');\n            var detail = \"The following parameter values are not valid for state '\" + state.name + \"': \" + invalidValues;\n            return Rejection.invalid(detail);\n        }\n        if (this.success === false)\n            return this._error;\n    };\n    /**\n     * A string representation of the Transition\n     *\n     * @returns A string representation of the Transition\n     */\n    Transition.prototype.toString = function () {\n        var fromStateOrName = this.from();\n        var toStateOrName = this.to();\n        var avoidEmptyHash = function (params) {\n            return params['#'] !== null && params['#'] !== undefined ? params : omit(params, ['#']);\n        };\n        // (X) means the to state is invalid.\n        var id = this.$id, from = isObject(fromStateOrName) ? fromStateOrName.name : fromStateOrName, fromParams = stringify(avoidEmptyHash(this._treeChanges.from.map(prop('paramValues')).reduce(mergeR, {}))), toValid = this.valid() ? '' : '(X) ', to = isObject(toStateOrName) ? toStateOrName.name : toStateOrName, toParams = stringify(avoidEmptyHash(this.params()));\n        return \"Transition#\" + id + \"( '\" + from + \"'\" + fromParams + \" -> \" + toValid + \"'\" + to + \"'\" + toParams + \" )\";\n    };\n    /** @hidden */\n    Transition.diToken = Transition;\n    return Transition;\n}());\nexport { Transition };\n//# sourceMappingURL=transition.js.map","/** @publicapi @module url */ /** */\nimport { map, inherit, identity, unnest, tail, find, allTrueR, unnestR, arrayTuples } from '../common/common';\nimport { prop, propEq } from '../common/hof';\nimport { isArray, isString, isDefined } from '../common/predicates';\nimport { Param, DefType } from '../params/param';\nimport { joinNeighborsR, splitOnDelim } from '../common/strings';\nimport { defaults } from '../common';\n/** @hidden */\nfunction quoteRegExp(str, param) {\n    var surroundPattern = ['', ''], result = str.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, '\\\\$&');\n    if (!param)\n        return result;\n    switch (param.squash) {\n        case false:\n            surroundPattern = ['(', ')' + (param.isOptional ? '?' : '')];\n            break;\n        case true:\n            result = result.replace(/\\/$/, '');\n            surroundPattern = ['(?:/(', ')|/)?'];\n            break;\n        default:\n            surroundPattern = [\"(\" + param.squash + \"|\", ')?'];\n            break;\n    }\n    return result + surroundPattern[0] + param.type.pattern.source + surroundPattern[1];\n}\n/** @hidden */\nvar memoizeTo = function (obj, _prop, fn) { return (obj[_prop] = obj[_prop] || fn()); };\n/** @hidden */\nvar splitOnSlash = splitOnDelim('/');\n/** @hidden */\nvar defaultConfig = {\n    state: { params: {} },\n    strict: true,\n    caseInsensitive: true,\n};\n/**\n * Matches URLs against patterns.\n *\n * Matches URLs against patterns and extracts named parameters from the path or the search\n * part of the URL.\n *\n * A URL pattern consists of a path pattern, optionally followed by '?' and a list of search (query)\n * parameters. Multiple search parameter names are separated by '&'. Search parameters\n * do not influence whether or not a URL is matched, but their values are passed through into\n * the matched parameters returned by [[UrlMatcher.exec]].\n *\n * - *Path parameters* are defined using curly brace placeholders (`/somepath/{param}`)\n * or colon placeholders (`/somePath/:param`).\n *\n * - *A parameter RegExp* may be defined for a param after a colon\n * (`/somePath/{param:[a-zA-Z0-9]+}`) in a curly brace placeholder.\n * The regexp must match for the url to be matched.\n * Should the regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n *\n * Note: a RegExp parameter will encode its value using either [[ParamTypes.path]] or [[ParamTypes.query]].\n *\n * - *Custom parameter types* may also be specified after a colon (`/somePath/{param:int}`) in curly brace parameters.\n *   See [[UrlMatcherFactory.type]] for more information.\n *\n * - *Catch-all parameters* are defined using an asterisk placeholder (`/somepath/*catchallparam`).\n *   A catch-all * parameter value will contain the remainder of the URL.\n *\n * ---\n *\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n * must be unique within the pattern (across both path and search parameters).\n * A path parameter matches any number of characters other than '/'. For catch-all\n * placeholders the path parameter matches any number of characters.\n *\n * Examples:\n *\n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n *   parameter consists of 1 to 8 hex digits.\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n *   path into the parameter 'path'.\n * * `'/files/*path'` - ditto.\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n *   in the built-in  `date` ParamType matches `2014-11-12`) and provides a Date object in $stateParams.start\n *\n */\nvar UrlMatcher = /** @class */ (function () {\n    /**\n     * @param pattern The pattern to compile into a matcher.\n     * @param paramTypes The [[ParamTypes]] registry\n     * @param paramFactory A [[ParamFactory]] object\n     * @param config  A [[UrlMatcherCompileConfig]] configuration object\n     */\n    function UrlMatcher(pattern, paramTypes, paramFactory, config) {\n        var _this = this;\n        /** @hidden */\n        this._cache = { path: [this] };\n        /** @hidden */\n        this._children = [];\n        /** @hidden */\n        this._params = [];\n        /** @hidden */\n        this._segments = [];\n        /** @hidden */\n        this._compiled = [];\n        this.config = config = defaults(config, defaultConfig);\n        this.pattern = pattern;\n        // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n        //   '*' name\n        //   ':' name\n        //   '{' name '}'\n        //   '{' name ':' regexp '}'\n        // The regular expression is somewhat complicated due to the need to allow curly braces\n        // inside the regular expression. The placeholder regexp breaks down as follows:\n        //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n        //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n        //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n        //    [^{}\\\\]+                       - anything other than curly braces or backslash\n        //    \\\\.                            - a backslash escape\n        //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n        var placeholder = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g;\n        var searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g;\n        var patterns = [];\n        var last = 0;\n        var matchArray;\n        var checkParamErrors = function (id) {\n            if (!UrlMatcher.nameValidator.test(id))\n                throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n            if (find(_this._params, propEq('id', id)))\n                throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n        };\n        // Split into static segments separated by path parameter placeholders.\n        // The number of segments is always 1 more than the number of parameters.\n        var matchDetails = function (m, isSearch) {\n            // IE[78] returns '' for unmatched groups instead of null\n            var id = m[2] || m[3];\n            var regexp = isSearch ? m[4] : m[4] || (m[1] === '*' ? '[\\\\s\\\\S]*' : null);\n            var makeRegexpType = function (str) {\n                return inherit(paramTypes.type(isSearch ? 'query' : 'path'), {\n                    pattern: new RegExp(str, _this.config.caseInsensitive ? 'i' : undefined),\n                });\n            };\n            return {\n                id: id,\n                regexp: regexp,\n                segment: pattern.substring(last, m.index),\n                type: !regexp ? null : paramTypes.type(regexp) || makeRegexpType(regexp),\n            };\n        };\n        var details;\n        var segment;\n        // tslint:disable-next-line:no-conditional-assignment\n        while ((matchArray = placeholder.exec(pattern))) {\n            details = matchDetails(matchArray, false);\n            if (details.segment.indexOf('?') >= 0)\n                break; // we're into the search part\n            checkParamErrors(details.id);\n            this._params.push(paramFactory.fromPath(details.id, details.type, config.state));\n            this._segments.push(details.segment);\n            patterns.push([details.segment, tail(this._params)]);\n            last = placeholder.lastIndex;\n        }\n        segment = pattern.substring(last);\n        // Find any search parameter names and remove them from the last segment\n        var i = segment.indexOf('?');\n        if (i >= 0) {\n            var search = segment.substring(i);\n            segment = segment.substring(0, i);\n            if (search.length > 0) {\n                last = 0;\n                // tslint:disable-next-line:no-conditional-assignment\n                while ((matchArray = searchPlaceholder.exec(search))) {\n                    details = matchDetails(matchArray, true);\n                    checkParamErrors(details.id);\n                    this._params.push(paramFactory.fromSearch(details.id, details.type, config.state));\n                    last = placeholder.lastIndex;\n                    // check if ?&\n                }\n            }\n        }\n        this._segments.push(segment);\n        this._compiled = patterns.map(function (_pattern) { return quoteRegExp.apply(null, _pattern); }).concat(quoteRegExp(segment));\n    }\n    /** @hidden */\n    UrlMatcher.encodeDashes = function (str) {\n        // Replace dashes with encoded \"\\-\"\n        return encodeURIComponent(str).replace(/-/g, function (c) {\n            return \"%5C%\" + c\n                .charCodeAt(0)\n                .toString(16)\n                .toUpperCase();\n        });\n    };\n    /** @hidden Given a matcher, return an array with the matcher's path segments and path params, in order */\n    UrlMatcher.pathSegmentsAndParams = function (matcher) {\n        var staticSegments = matcher._segments;\n        var pathParams = matcher._params.filter(function (p) { return p.location === DefType.PATH; });\n        return arrayTuples(staticSegments, pathParams.concat(undefined))\n            .reduce(unnestR, [])\n            .filter(function (x) { return x !== '' && isDefined(x); });\n    };\n    /** @hidden Given a matcher, return an array with the matcher's query params */\n    UrlMatcher.queryParams = function (matcher) {\n        return matcher._params.filter(function (p) { return p.location === DefType.SEARCH; });\n    };\n    /**\n     * Compare two UrlMatchers\n     *\n     * This comparison function converts a UrlMatcher into static and dynamic path segments.\n     * Each static path segment is a static string between a path separator (slash character).\n     * Each dynamic segment is a path parameter.\n     *\n     * The comparison function sorts static segments before dynamic ones.\n     */\n    UrlMatcher.compare = function (a, b) {\n        /**\n         * Turn a UrlMatcher and all its parent matchers into an array\n         * of slash literals '/', string literals, and Param objects\n         *\n         * This example matcher matches strings like \"/foo/:param/tail\":\n         * var matcher = $umf.compile(\"/foo\").append($umf.compile(\"/:param\")).append($umf.compile(\"/\")).append($umf.compile(\"tail\"));\n         * var result = segments(matcher); // [ '/', 'foo', '/', Param, '/', 'tail' ]\n         *\n         * Caches the result as `matcher._cache.segments`\n         */\n        var segments = function (matcher) {\n            return (matcher._cache.segments =\n                matcher._cache.segments ||\n                    matcher._cache.path\n                        .map(UrlMatcher.pathSegmentsAndParams)\n                        .reduce(unnestR, [])\n                        .reduce(joinNeighborsR, [])\n                        .map(function (x) { return (isString(x) ? splitOnSlash(x) : x); })\n                        .reduce(unnestR, []));\n        };\n        /**\n         * Gets the sort weight for each segment of a UrlMatcher\n         *\n         * Caches the result as `matcher._cache.weights`\n         */\n        var weights = function (matcher) {\n            return (matcher._cache.weights =\n                matcher._cache.weights ||\n                    segments(matcher).map(function (segment) {\n                        // Sort slashes first, then static strings, the Params\n                        if (segment === '/')\n                            return 1;\n                        if (isString(segment))\n                            return 2;\n                        if (segment instanceof Param)\n                            return 3;\n                    }));\n        };\n        /**\n         * Pads shorter array in-place (mutates)\n         */\n        var padArrays = function (l, r, padVal) {\n            var len = Math.max(l.length, r.length);\n            while (l.length < len)\n                l.push(padVal);\n            while (r.length < len)\n                r.push(padVal);\n        };\n        var weightsA = weights(a), weightsB = weights(b);\n        padArrays(weightsA, weightsB, 0);\n        var _pairs = arrayTuples(weightsA, weightsB);\n        var cmp, i;\n        for (i = 0; i < _pairs.length; i++) {\n            cmp = _pairs[i][0] - _pairs[i][1];\n            if (cmp !== 0)\n                return cmp;\n        }\n        return 0;\n    };\n    /**\n     * Creates a new concatenated UrlMatcher\n     *\n     * Builds a new UrlMatcher by appending another UrlMatcher to this one.\n     *\n     * @param url A `UrlMatcher` instance to append as a child of the current `UrlMatcher`.\n     */\n    UrlMatcher.prototype.append = function (url) {\n        this._children.push(url);\n        url._cache = {\n            path: this._cache.path.concat(url),\n            parent: this,\n            pattern: null,\n        };\n        return url;\n    };\n    /** @hidden */\n    UrlMatcher.prototype.isRoot = function () {\n        return this._cache.path[0] === this;\n    };\n    /** Returns the input pattern string */\n    UrlMatcher.prototype.toString = function () {\n        return this.pattern;\n    };\n    /**\n     * Tests the specified url/path against this matcher.\n     *\n     * Tests if the given url matches this matcher's pattern, and returns an object containing the captured\n     * parameter values.  Returns null if the path does not match.\n     *\n     * The returned object contains the values\n     * of any search parameters that are mentioned in the pattern, but their value may be null if\n     * they are not present in `search`. This means that search parameters are always treated\n     * as optional.\n     *\n     * #### Example:\n     * ```js\n     * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n     *   x: '1', q: 'hello'\n     * });\n     * // returns { id: 'bob', q: 'hello', r: null }\n     * ```\n     *\n     * @param path    The URL path to match, e.g. `$location.path()`.\n     * @param search  URL search parameters, e.g. `$location.search()`.\n     * @param hash    URL hash e.g. `$location.hash()`.\n     * @param options\n     *\n     * @returns The captured parameter values.\n     */\n    UrlMatcher.prototype.exec = function (path, search, hash, options) {\n        var _this = this;\n        if (search === void 0) { search = {}; }\n        if (options === void 0) { options = {}; }\n        var match = memoizeTo(this._cache, 'pattern', function () {\n            return new RegExp([\n                '^',\n                unnest(_this._cache.path.map(prop('_compiled'))).join(''),\n                _this.config.strict === false ? '/?' : '',\n                '$',\n            ].join(''), _this.config.caseInsensitive ? 'i' : undefined);\n        }).exec(path);\n        if (!match)\n            return null;\n        // options = defaults(options, { isolate: false });\n        var allParams = this.parameters(), pathParams = allParams.filter(function (param) { return !param.isSearch(); }), searchParams = allParams.filter(function (param) { return param.isSearch(); }), nPathSegments = this._cache.path.map(function (urlm) { return urlm._segments.length - 1; }).reduce(function (a, x) { return a + x; }), values = {};\n        if (nPathSegments !== match.length - 1)\n            throw new Error(\"Unbalanced capture group in route '\" + this.pattern + \"'\");\n        function decodePathArray(paramVal) {\n            var reverseString = function (str) {\n                return str\n                    .split('')\n                    .reverse()\n                    .join('');\n            };\n            var unquoteDashes = function (str) { return str.replace(/\\\\-/g, '-'); };\n            var split = reverseString(paramVal).split(/-(?!\\\\)/);\n            var allReversed = map(split, reverseString);\n            return map(allReversed, unquoteDashes).reverse();\n        }\n        for (var i = 0; i < nPathSegments; i++) {\n            var param = pathParams[i];\n            var value = match[i + 1];\n            // if the param value matches a pre-replace pair, replace the value before decoding.\n            for (var j = 0; j < param.replace.length; j++) {\n                if (param.replace[j].from === value)\n                    value = param.replace[j].to;\n            }\n            if (value && param.array === true)\n                value = decodePathArray(value);\n            if (isDefined(value))\n                value = param.type.decode(value);\n            values[param.id] = param.value(value);\n        }\n        searchParams.forEach(function (param) {\n            var value = search[param.id];\n            for (var j = 0; j < param.replace.length; j++) {\n                if (param.replace[j].from === value)\n                    value = param.replace[j].to;\n            }\n            if (isDefined(value))\n                value = param.type.decode(value);\n            values[param.id] = param.value(value);\n        });\n        if (hash)\n            values['#'] = hash;\n        return values;\n    };\n    /**\n     * @hidden\n     * Returns all the [[Param]] objects of all path and search parameters of this pattern in order of appearance.\n     *\n     * @returns {Array.<Param>}  An array of [[Param]] objects. Must be treated as read-only. If the\n     *    pattern has no parameters, an empty array is returned.\n     */\n    UrlMatcher.prototype.parameters = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        if (opts.inherit === false)\n            return this._params;\n        return unnest(this._cache.path.map(function (matcher) { return matcher._params; }));\n    };\n    /**\n     * @hidden\n     * Returns a single parameter from this UrlMatcher by id\n     *\n     * @param id\n     * @param opts\n     * @returns {T|Param|any|boolean|UrlMatcher|null}\n     */\n    UrlMatcher.prototype.parameter = function (id, opts) {\n        var _this = this;\n        if (opts === void 0) { opts = {}; }\n        var findParam = function () {\n            for (var _i = 0, _a = _this._params; _i < _a.length; _i++) {\n                var param = _a[_i];\n                if (param.id === id)\n                    return param;\n            }\n        };\n        var parent = this._cache.parent;\n        return findParam() || (opts.inherit !== false && parent && parent.parameter(id, opts)) || null;\n    };\n    /**\n     * Validates the input parameter values against this UrlMatcher\n     *\n     * Checks an object hash of parameters to validate their correctness according to the parameter\n     * types of this `UrlMatcher`.\n     *\n     * @param params The object hash of parameters to validate.\n     * @returns Returns `true` if `params` validates, otherwise `false`.\n     */\n    UrlMatcher.prototype.validates = function (params) {\n        var validParamVal = function (param, val) { return !param || param.validates(val); };\n        params = params || {};\n        // I'm not sure why this checks only the param keys passed in, and not all the params known to the matcher\n        var paramSchema = this.parameters().filter(function (paramDef) { return params.hasOwnProperty(paramDef.id); });\n        return paramSchema.map(function (paramDef) { return validParamVal(paramDef, params[paramDef.id]); }).reduce(allTrueR, true);\n    };\n    /**\n     * Given a set of parameter values, creates a URL from this UrlMatcher.\n     *\n     * Creates a URL that matches this pattern by substituting the specified values\n     * for the path and search parameters.\n     *\n     * #### Example:\n     * ```js\n     * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n     * // returns '/user/bob?q=yes'\n     * ```\n     *\n     * @param values  the values to substitute for the parameters in this pattern.\n     * @returns the formatted URL (path and optionally search part).\n     */\n    UrlMatcher.prototype.format = function (values) {\n        if (values === void 0) { values = {}; }\n        // Build the full path of UrlMatchers (including all parent UrlMatchers)\n        var urlMatchers = this._cache.path;\n        // Extract all the static segments and Params (processed as ParamDetails)\n        // into an ordered array\n        var pathSegmentsAndParams = urlMatchers\n            .map(UrlMatcher.pathSegmentsAndParams)\n            .reduce(unnestR, [])\n            .map(function (x) { return (isString(x) ? x : getDetails(x)); });\n        // Extract the query params into a separate array\n        var queryParams = urlMatchers\n            .map(UrlMatcher.queryParams)\n            .reduce(unnestR, [])\n            .map(getDetails);\n        var isInvalid = function (param) { return param.isValid === false; };\n        if (pathSegmentsAndParams.concat(queryParams).filter(isInvalid).length) {\n            return null;\n        }\n        /**\n         * Given a Param, applies the parameter value, then returns detailed information about it\n         */\n        function getDetails(param) {\n            // Normalize to typed value\n            var value = param.value(values[param.id]);\n            var isValid = param.validates(value);\n            var isDefaultValue = param.isDefaultValue(value);\n            // Check if we're in squash mode for the parameter\n            var squash = isDefaultValue ? param.squash : false;\n            // Allow the Parameter's Type to encode the value\n            var encoded = param.type.encode(value);\n            return { param: param, value: value, isValid: isValid, isDefaultValue: isDefaultValue, squash: squash, encoded: encoded };\n        }\n        // Build up the path-portion from the list of static segments and parameters\n        var pathString = pathSegmentsAndParams.reduce(function (acc, x) {\n            // The element is a static segment (a raw string); just append it\n            if (isString(x))\n                return acc + x;\n            // Otherwise, it's a ParamDetails.\n            var squash = x.squash, encoded = x.encoded, param = x.param;\n            // If squash is === true, try to remove a slash from the path\n            if (squash === true)\n                return acc.match(/\\/$/) ? acc.slice(0, -1) : acc;\n            // If squash is a string, use the string for the param value\n            if (isString(squash))\n                return acc + squash;\n            if (squash !== false)\n                return acc; // ?\n            if (encoded == null)\n                return acc;\n            // If this parameter value is an array, encode the value using encodeDashes\n            if (isArray(encoded))\n                return acc + map(encoded, UrlMatcher.encodeDashes).join('-');\n            // If the parameter type is \"raw\", then do not encodeURIComponent\n            if (param.raw)\n                return acc + encoded;\n            // Encode the value\n            return acc + encodeURIComponent(encoded);\n        }, '');\n        // Build the query string by applying parameter values (array or regular)\n        // then mapping to key=value, then flattening and joining using \"&\"\n        var queryString = queryParams\n            .map(function (paramDetails) {\n            var param = paramDetails.param, squash = paramDetails.squash, encoded = paramDetails.encoded, isDefaultValue = paramDetails.isDefaultValue;\n            if (encoded == null || (isDefaultValue && squash !== false))\n                return;\n            if (!isArray(encoded))\n                encoded = [encoded];\n            if (encoded.length === 0)\n                return;\n            if (!param.raw)\n                encoded = map(encoded, encodeURIComponent);\n            return encoded.map(function (val) { return param.id + \"=\" + val; });\n        })\n            .filter(identity)\n            .reduce(unnestR, [])\n            .join('&');\n        // Concat the pathstring with the queryString (if exists) and the hashString (if exists)\n        return pathString + (queryString ? \"?\" + queryString : '') + (values['#'] ? '#' + values['#'] : '');\n    };\n    /** @hidden */\n    UrlMatcher.nameValidator = /^\\w+([-.]+\\w+)*(?:\\[\\])?$/;\n    return UrlMatcher;\n}());\nexport { UrlMatcher };\n//# sourceMappingURL=urlMatcher.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/** @publicapi @module url */ /** */\nimport { extend, forEach, isDefined, isFunction, isObject } from '../common';\nimport { UrlMatcher } from './urlMatcher';\nimport { DefType, Param } from '../params';\n/** @internalapi */\nvar ParamFactory = /** @class */ (function () {\n    function ParamFactory(router) {\n        this.router = router;\n    }\n    ParamFactory.prototype.fromConfig = function (id, type, state) {\n        return new Param(id, type, DefType.CONFIG, this.router.urlService.config, state);\n    };\n    ParamFactory.prototype.fromPath = function (id, type, state) {\n        return new Param(id, type, DefType.PATH, this.router.urlService.config, state);\n    };\n    ParamFactory.prototype.fromSearch = function (id, type, state) {\n        return new Param(id, type, DefType.SEARCH, this.router.urlService.config, state);\n    };\n    return ParamFactory;\n}());\nexport { ParamFactory };\n/**\n * Factory for [[UrlMatcher]] instances.\n *\n * The factory is available to ng1 services as\n * `$urlMatcherFactory` or ng1 providers as `$urlMatcherFactoryProvider`.\n *\n * @internalapi\n */\nvar UrlMatcherFactory = /** @class */ (function () {\n    // TODO: move implementations to UrlConfig (urlService.config)\n    function UrlMatcherFactory(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        /** @internalapi Creates a new [[Param]] for a given location (DefType) */\n        this.paramFactory = new ParamFactory(this.router);\n        /** @deprecated use [[UrlConfig.caseInsensitive]] */\n        this.caseInsensitive = function (value) { return _this.router.urlService.config.caseInsensitive(value); };\n        /** @deprecated use [[UrlConfig.defaultSquashPolicy]] */\n        this.defaultSquashPolicy = function (value) { return _this.router.urlService.config.defaultSquashPolicy(value); };\n        /** @deprecated use [[UrlConfig.strictMode]] */\n        this.strictMode = function (value) { return _this.router.urlService.config.strictMode(value); };\n        /** @deprecated use [[UrlConfig.type]] */\n        this.type = function (name, definition, definitionFn) {\n            return _this.router.urlService.config.type(name, definition, definitionFn) || _this;\n        };\n        extend(this, { UrlMatcher: UrlMatcher, Param: Param });\n    }\n    /**\n     * Creates a [[UrlMatcher]] for the specified pattern.\n     *\n     * @param pattern  The URL pattern.\n     * @param config  The config object hash.\n     * @returns The UrlMatcher.\n     */\n    UrlMatcherFactory.prototype.compile = function (pattern, config) {\n        var urlConfig = this.router.urlService.config;\n        // backward-compatible support for config.params -> config.state.params\n        var params = config && !config.state && config.params;\n        config = params ? __assign({ state: { params: params } }, config) : config;\n        var globalConfig = { strict: urlConfig._isStrictMode, caseInsensitive: urlConfig._isCaseInsensitive };\n        return new UrlMatcher(pattern, urlConfig.paramTypes, this.paramFactory, extend(globalConfig, config));\n    };\n    /**\n     * Returns true if the specified object is a [[UrlMatcher]], or false otherwise.\n     *\n     * @param object  The object to perform the type check against.\n     * @returns `true` if the object matches the `UrlMatcher` interface, by\n     *          implementing all the same methods.\n     */\n    UrlMatcherFactory.prototype.isMatcher = function (object) {\n        // TODO: typeof?\n        if (!isObject(object))\n            return false;\n        var result = true;\n        forEach(UrlMatcher.prototype, function (val, name) {\n            if (isFunction(val))\n                result = result && (isDefined(object[name]) && isFunction(object[name]));\n        });\n        return result;\n    };\n    /** @hidden */\n    UrlMatcherFactory.prototype.$get = function () {\n        var urlConfig = this.router.urlService.config;\n        urlConfig.paramTypes.enqueue = false;\n        urlConfig.paramTypes._flushTypeQueue();\n        return this;\n    };\n    return UrlMatcherFactory;\n}());\nexport { UrlMatcherFactory };\n//# sourceMappingURL=urlMatcherFactory.js.map","/** @publicapi @module url */ /** */\nimport { UrlMatcher } from './urlMatcher';\nimport { isString, isDefined, isFunction } from '../common/predicates';\nimport { identity, extend } from '../common/common';\nimport { is, pattern } from '../common/hof';\nimport { StateObject } from '../state/stateObject';\n/**\n * Creates a [[UrlRule]]\n *\n * Creates a [[UrlRule]] from a:\n *\n * - `string`\n * - [[UrlMatcher]]\n * - `RegExp`\n * - [[StateObject]]\n * @internalapi\n */\nvar UrlRuleFactory = /** @class */ (function () {\n    function UrlRuleFactory(router) {\n        this.router = router;\n    }\n    UrlRuleFactory.prototype.compile = function (str) {\n        return this.router.urlMatcherFactory.compile(str);\n    };\n    UrlRuleFactory.prototype.create = function (what, handler) {\n        var _this = this;\n        var isState = StateObject.isState;\n        var makeRule = pattern([\n            [isString, function (_what) { return makeRule(_this.compile(_what)); }],\n            [is(UrlMatcher), function (_what) { return _this.fromUrlMatcher(_what, handler); }],\n            [isState, function (_what) { return _this.fromState(_what, _this.router); }],\n            [is(RegExp), function (_what) { return _this.fromRegExp(_what, handler); }],\n            [isFunction, function (_what) { return new BaseUrlRule(_what, handler); }],\n        ]);\n        var rule = makeRule(what);\n        if (!rule)\n            throw new Error(\"invalid 'what' in when()\");\n        return rule;\n    };\n    /**\n     * A UrlRule which matches based on a UrlMatcher\n     *\n     * The `handler` may be either a `string`, a [[UrlRuleHandlerFn]] or another [[UrlMatcher]]\n     *\n     * ## Handler as a function\n     *\n     * If `handler` is a function, the function is invoked with:\n     *\n     * - matched parameter values ([[RawParams]] from [[UrlMatcher.exec]])\n     * - url: the current Url ([[UrlParts]])\n     * - router: the router object ([[UIRouter]])\n     *\n     * #### Example:\n     * ```js\n     * var urlMatcher = $umf.compile(\"/foo/:fooId/:barId\");\n     * var rule = factory.fromUrlMatcher(urlMatcher, match => \"/home/\" + match.fooId + \"/\" + match.barId);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match); // '/home/123/456'\n     * ```\n     *\n     * ## Handler as UrlMatcher\n     *\n     * If `handler` is a UrlMatcher, the handler matcher is used to create the new url.\n     * The `handler` UrlMatcher is formatted using the matched param from the first matcher.\n     * The url is replaced with the result.\n     *\n     * #### Example:\n     * ```js\n     * var urlMatcher = $umf.compile(\"/foo/:fooId/:barId\");\n     * var handler = $umf.compile(\"/home/:fooId/:barId\");\n     * var rule = factory.fromUrlMatcher(urlMatcher, handler);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match); // '/home/123/456'\n     * ```\n     */\n    UrlRuleFactory.prototype.fromUrlMatcher = function (urlMatcher, handler) {\n        var _handler = handler;\n        if (isString(handler))\n            handler = this.router.urlMatcherFactory.compile(handler);\n        if (is(UrlMatcher)(handler))\n            _handler = function (match) { return handler.format(match); };\n        function matchUrlParamters(url) {\n            var params = urlMatcher.exec(url.path, url.search, url.hash);\n            return urlMatcher.validates(params) && params;\n        }\n        // Prioritize URLs, lowest to highest:\n        // - Some optional URL parameters, but none matched\n        // - No optional parameters in URL\n        // - Some optional parameters, some matched\n        // - Some optional parameters, all matched\n        function matchPriority(params) {\n            var optional = urlMatcher.parameters().filter(function (param) { return param.isOptional; });\n            if (!optional.length)\n                return 0.000001;\n            var matched = optional.filter(function (param) { return params[param.id]; });\n            return matched.length / optional.length;\n        }\n        var details = { urlMatcher: urlMatcher, matchPriority: matchPriority, type: 'URLMATCHER' };\n        return extend(new BaseUrlRule(matchUrlParamters, _handler), details);\n    };\n    /**\n     * A UrlRule which matches a state by its url\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromState($state.get('foo'), router);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match);\n     * // Starts a transition to 'foo' with params: { fooId: '123', barId: '456' }\n     * ```\n     */\n    UrlRuleFactory.prototype.fromState = function (state, router) {\n        /**\n         * Handles match by transitioning to matched state\n         *\n         * First checks if the router should start a new transition.\n         * A new transition is not required if the current state's URL\n         * and the new URL are already identical\n         */\n        var handler = function (match) {\n            var $state = router.stateService;\n            var globals = router.globals;\n            if ($state.href(state, match) !== $state.href(globals.current, globals.params)) {\n                $state.transitionTo(state, match, { inherit: true, source: 'url' });\n            }\n        };\n        var details = { state: state, type: 'STATE' };\n        return extend(this.fromUrlMatcher(state.url, handler), details);\n    };\n    /**\n     * A UrlRule which matches based on a regular expression\n     *\n     * The `handler` may be either a [[UrlRuleHandlerFn]] or a string.\n     *\n     * ## Handler as a function\n     *\n     * If `handler` is a function, the function is invoked with:\n     *\n     * - regexp match array (from `regexp`)\n     * - url: the current Url ([[UrlParts]])\n     * - router: the router object ([[UIRouter]])\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromRegExp(/^\\/foo\\/(bar|baz)$/, match => \"/home/\" + match[1])\n     * var match = rule.match('/foo/bar'); // results in [ '/foo/bar', 'bar' ]\n     * var result = rule.handler(match); // '/home/bar'\n     * ```\n     *\n     * ## Handler as string\n     *\n     * If `handler` is a string, the url is *replaced by the string* when the Rule is invoked.\n     * The string is first interpolated using `string.replace()` style pattern.\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromRegExp(/^\\/foo\\/(bar|baz)$/, \"/home/$1\")\n     * var match = rule.match('/foo/bar'); // results in [ '/foo/bar', 'bar' ]\n     * var result = rule.handler(match); // '/home/bar'\n     * ```\n     */\n    UrlRuleFactory.prototype.fromRegExp = function (regexp, handler) {\n        if (regexp.global || regexp.sticky)\n            throw new Error('Rule RegExp must not be global or sticky');\n        /**\n         * If handler is a string, the url will be replaced by the string.\n         * If the string has any String.replace() style variables in it (like `$2`),\n         * they will be replaced by the captures from [[match]]\n         */\n        var redirectUrlTo = function (match) {\n            // Interpolates matched values into $1 $2, etc using a String.replace()-style pattern\n            return handler.replace(/\\$(\\$|\\d{1,2})/, function (m, what) { return match[what === '$' ? 0 : Number(what)]; });\n        };\n        var _handler = isString(handler) ? redirectUrlTo : handler;\n        var matchParamsFromRegexp = function (url) { return regexp.exec(url.path); };\n        var details = { regexp: regexp, type: 'REGEXP' };\n        return extend(new BaseUrlRule(matchParamsFromRegexp, _handler), details);\n    };\n    UrlRuleFactory.isUrlRule = function (obj) { return obj && ['type', 'match', 'handler'].every(function (key) { return isDefined(obj[key]); }); };\n    return UrlRuleFactory;\n}());\nexport { UrlRuleFactory };\n/**\n * A base rule which calls `match`\n *\n * The value from the `match` function is passed through to the `handler`.\n * @internalapi\n */\nvar BaseUrlRule = /** @class */ (function () {\n    function BaseUrlRule(match, handler) {\n        var _this = this;\n        this.match = match;\n        this.type = 'RAW';\n        this.matchPriority = function (match) { return 0 - _this.$id; };\n        this.handler = handler || identity;\n    }\n    return BaseUrlRule;\n}());\nexport { BaseUrlRule };\n//# sourceMappingURL=urlRule.js.map","/** @publicapi @module url */ /** */\nimport { stripLastPathElement } from '../common';\nimport { UrlRuleFactory } from './urlRule';\n/** @hidden */\nfunction appendBasePath(url, isHtml5, absolute, baseHref) {\n    if (baseHref === '/')\n        return url;\n    if (isHtml5)\n        return stripLastPathElement(baseHref) + url;\n    if (absolute)\n        return baseHref.slice(1) + url;\n    return url;\n}\n/**\n * Updates URL and responds to URL changes\n *\n * ### Deprecation warning:\n * This class is now considered to be an internal API\n * Use the [[UrlService]] instead.\n * For configuring URL rules, use the [[UrlRules]] which can be found as [[UrlService.rules]].\n *\n * @internalapi\n */\nvar UrlRouter = /** @class */ (function () {\n    /** @hidden */\n    function UrlRouter(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        // Delegate these calls to [[UrlService]]\n        /** @deprecated use [[UrlService.sync]]*/\n        this.sync = function (evt) { return _this.router.urlService.sync(evt); };\n        /** @deprecated use [[UrlService.listen]]*/\n        this.listen = function (enabled) { return _this.router.urlService.listen(enabled); };\n        /** @deprecated use [[UrlService.deferIntercept]]*/\n        this.deferIntercept = function (defer) { return _this.router.urlService.deferIntercept(defer); };\n        /** @deprecated use [[UrlService.match]]*/\n        this.match = function (urlParts) { return _this.router.urlService.match(urlParts); };\n        // Delegate these calls to [[UrlRules]]\n        /** @deprecated use [[UrlRules.initial]]*/\n        this.initial = function (handler) {\n            return _this.router.urlService.rules.initial(handler);\n        };\n        /** @deprecated use [[UrlRules.otherwise]]*/\n        this.otherwise = function (handler) {\n            return _this.router.urlService.rules.otherwise(handler);\n        };\n        /** @deprecated use [[UrlRules.removeRule]]*/\n        this.removeRule = function (rule) { return _this.router.urlService.rules.removeRule(rule); };\n        /** @deprecated use [[UrlRules.rule]]*/\n        this.rule = function (rule) { return _this.router.urlService.rules.rule(rule); };\n        /** @deprecated use [[UrlRules.rules]]*/\n        this.rules = function () { return _this.router.urlService.rules.rules(); };\n        /** @deprecated use [[UrlRules.sort]]*/\n        this.sort = function (compareFn) { return _this.router.urlService.rules.sort(compareFn); };\n        /** @deprecated use [[UrlRules.when]]*/\n        this.when = function (matcher, handler, options) { return _this.router.urlService.rules.when(matcher, handler, options); };\n        this.urlRuleFactory = new UrlRuleFactory(router);\n    }\n    /**\n     * Internal API.\n     * @internalapi\n     */\n    UrlRouter.prototype.update = function (read) {\n        var $url = this.router.locationService;\n        if (read) {\n            this.location = $url.url();\n            return;\n        }\n        if ($url.url() === this.location)\n            return;\n        $url.url(this.location, true);\n    };\n    /**\n     * Internal API.\n     *\n     * Pushes a new location to the browser history.\n     *\n     * @internalapi\n     * @param urlMatcher\n     * @param params\n     * @param options\n     */\n    UrlRouter.prototype.push = function (urlMatcher, params, options) {\n        var replace = options && !!options.replace;\n        this.router.urlService.url(urlMatcher.format(params || {}), replace);\n    };\n    /**\n     * Builds and returns a URL with interpolated parameters\n     *\n     * #### Example:\n     * ```js\n     * matcher = $umf.compile(\"/about/:person\");\n     * params = { person: \"bob\" };\n     * $bob = $urlRouter.href(matcher, params);\n     * // $bob == \"/about/bob\";\n     * ```\n     *\n     * @param urlMatcher The [[UrlMatcher]] object which is used as the template of the URL to generate.\n     * @param params An object of parameter values to fill the matcher's required parameters.\n     * @param options Options object. The options are:\n     *\n     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n     *\n     * @returns Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n     */\n    UrlRouter.prototype.href = function (urlMatcher, params, options) {\n        var url = urlMatcher.format(params);\n        if (url == null)\n            return null;\n        options = options || { absolute: false };\n        var cfg = this.router.urlService.config;\n        var isHtml5 = cfg.html5Mode();\n        if (!isHtml5 && url !== null) {\n            url = '#' + cfg.hashPrefix() + url;\n        }\n        url = appendBasePath(url, isHtml5, options.absolute, cfg.baseHref());\n        if (!options.absolute || !url) {\n            return url;\n        }\n        var slash = !isHtml5 && url ? '/' : '';\n        var cfgPort = cfg.port();\n        var port = (cfgPort === 80 || cfgPort === 443 ? '' : ':' + cfgPort);\n        return [cfg.protocol(), '://', cfg.host(), port, slash, url].join('');\n    };\n    Object.defineProperty(UrlRouter.prototype, \"interceptDeferred\", {\n        /** @deprecated use [[UrlService.interceptDeferred]]*/\n        get: function () {\n            return this.router.urlService.interceptDeferred;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return UrlRouter;\n}());\nexport { UrlRouter };\n//# sourceMappingURL=urlRouter.js.map","import { TargetState } from '../state';\nimport { UrlMatcher } from './urlMatcher';\nimport { is, isDefined, isFunction, isString, removeFrom, val } from '../common';\nimport { UrlRuleFactory } from './urlRule';\n/** @hidden */\nvar prioritySort = function (a, b) { return (b.priority || 0) - (a.priority || 0); };\n/** @hidden */\nvar typeSort = function (a, b) {\n    var weights = { STATE: 4, URLMATCHER: 4, REGEXP: 3, RAW: 2, OTHER: 1 };\n    return (weights[a.type] || 0) - (weights[b.type] || 0);\n};\n/** @hidden */\nvar urlMatcherSort = function (a, b) {\n    return !a.urlMatcher || !b.urlMatcher ? 0 : UrlMatcher.compare(a.urlMatcher, b.urlMatcher);\n};\n/** @hidden */\nvar idSort = function (a, b) {\n    // Identically sorted STATE and URLMATCHER best rule will be chosen by `matchPriority` after each rule matches the URL\n    var useMatchPriority = { STATE: true, URLMATCHER: true };\n    var equal = useMatchPriority[a.type] && useMatchPriority[b.type];\n    return equal ? 0 : (a.$id || 0) - (b.$id || 0);\n};\n/**\n * Default rule priority sorting function.\n *\n * Sorts rules by:\n *\n * - Explicit priority (set rule priority using [[UrlRules.when]])\n * - Rule type (STATE: 4, URLMATCHER: 4, REGEXP: 3, RAW: 2, OTHER: 1)\n * - `UrlMatcher` specificity ([[UrlMatcher.compare]]): works for STATE and URLMATCHER types to pick the most specific rule.\n * - Rule registration order (for rule types other than STATE and URLMATCHER)\n *   - Equally sorted State and UrlMatcher rules will each match the URL.\n *     Then, the *best* match is chosen based on how many parameter values were matched.\n *\n * @publicapi\n */\nvar defaultRuleSortFn;\ndefaultRuleSortFn = function (a, b) {\n    var cmp = prioritySort(a, b);\n    if (cmp !== 0)\n        return cmp;\n    cmp = typeSort(a, b);\n    if (cmp !== 0)\n        return cmp;\n    cmp = urlMatcherSort(a, b);\n    if (cmp !== 0)\n        return cmp;\n    return idSort(a, b);\n};\n/** @hidden */\nfunction getHandlerFn(handler) {\n    if (!isFunction(handler) && !isString(handler) && !is(TargetState)(handler) && !TargetState.isDef(handler)) {\n        throw new Error(\"'handler' must be a string, function, TargetState, or have a state: 'newtarget' property\");\n    }\n    return isFunction(handler) ? handler : val(handler);\n}\n/**\n * API for managing URL rules\n *\n * This API is used to create and manage URL rules.\n * URL rules are a mechanism to respond to specific URL patterns.\n *\n * The most commonly used methods are [[otherwise]] and [[when]].\n *\n * This API is a property of [[UrlService]] as [[UrlService.rules]]\n *\n * @publicapi\n */\nvar UrlRules = /** @class */ (function () {\n    /** @hidden */\n    function UrlRules(/** @hidden */ router) {\n        this.router = router;\n        /** @hidden */ this._sortFn = defaultRuleSortFn;\n        /** @hidden */ this._rules = [];\n        /** @hidden */ this._id = 0;\n        this.urlRuleFactory = new UrlRuleFactory(router);\n    }\n    /** @hidden */\n    UrlRules.prototype.dispose = function (router) {\n        this._rules = [];\n        delete this._otherwiseFn;\n    };\n    /**\n     * Defines the initial state, path, or behavior to use when the app starts.\n     *\n     * This rule defines the initial/starting state for the application.\n     *\n     * This rule is triggered the first time the URL is checked (when the app initially loads).\n     * The rule is triggered only when the url matches either `\"\"` or `\"/\"`.\n     *\n     * Note: The rule is intended to be used when the root of the application is directly linked to.\n     * When the URL is *not* `\"\"` or `\"/\"` and doesn't match other rules, the [[otherwise]] rule is triggered.\n     * This allows 404-like behavior when an unknown URL is deep-linked.\n     *\n     * #### Example:\n     * Start app at `home` state.\n     * ```js\n     * .initial({ state: 'home' });\n     * ```\n     *\n     * #### Example:\n     * Start app at `/home` (by url)\n     * ```js\n     * .initial('/home');\n     * ```\n     *\n     * #### Example:\n     * When no other url rule matches, go to `home` state\n     * ```js\n     * .initial((matchValue, url, router) => {\n     *   console.log('initial state');\n     *   return { state: 'home' };\n     * })\n     * ```\n     *\n     * @param handler The initial state or url path, or a function which returns the state or url path (or performs custom logic).\n     */\n    UrlRules.prototype.initial = function (handler) {\n        var handlerFn = getHandlerFn(handler);\n        var matchFn = function (urlParts, router) {\n            return router.globals.transitionHistory.size() === 0 && !!/^\\/?$/.exec(urlParts.path);\n        };\n        this.rule(this.urlRuleFactory.create(matchFn, handlerFn));\n    };\n    /**\n     * Defines the state, url, or behavior to use when no other rule matches the URL.\n     *\n     * This rule is matched when *no other rule* matches.\n     * It is generally used to handle unknown URLs (similar to \"404\" behavior, but on the client side).\n     *\n     * - If `handler` a string, it is treated as a url redirect\n     *\n     * #### Example:\n     * When no other url rule matches, redirect to `/index`\n     * ```js\n     * .otherwise('/index');\n     * ```\n     *\n     * - If `handler` is an object with a `state` property, the state is activated.\n     *\n     * #### Example:\n     * When no other url rule matches, redirect to `home` and provide a `dashboard` parameter value.\n     * ```js\n     * .otherwise({ state: 'home', params: { dashboard: 'default' } });\n     * ```\n     *\n     * - If `handler` is a function, the function receives the current url ([[UrlParts]]) and the [[UIRouter]] object.\n     *   The function can perform actions, and/or return a value.\n     *\n     * #### Example:\n     * When no other url rule matches, manually trigger a transition to the `home` state\n     * ```js\n     * .otherwise((matchValue, urlParts, router) => {\n     *   router.stateService.go('home');\n     * });\n     * ```\n     *\n     * #### Example:\n     * When no other url rule matches, go to `home` state\n     * ```js\n     * .otherwise((matchValue, urlParts, router) => {\n     *   return { state: 'home' };\n     * });\n     * ```\n     *\n     * @param handler The url path to redirect to, or a function which returns the url path (or performs custom logic).\n     */\n    UrlRules.prototype.otherwise = function (handler) {\n        var handlerFn = getHandlerFn(handler);\n        this._otherwiseFn = this.urlRuleFactory.create(val(true), handlerFn);\n        this._sorted = false;\n    };\n    /**\n     * Remove a rule previously registered\n     *\n     * @param rule the matcher rule that was previously registered using [[rule]]\n     */\n    UrlRules.prototype.removeRule = function (rule) {\n        removeFrom(this._rules, rule);\n    };\n    /**\n     * Manually adds a URL Rule.\n     *\n     * Usually, a url rule is added using [[StateDeclaration.url]] or [[when]].\n     * This api can be used directly for more control (to register a [[BaseUrlRule]], for example).\n     * Rules can be created using [[urlRuleFactory]], or created manually as simple objects.\n     *\n     * A rule should have a `match` function which returns truthy if the rule matched.\n     * It should also have a `handler` function which is invoked if the rule is the best match.\n     *\n     * @return a function that deregisters the rule\n     */\n    UrlRules.prototype.rule = function (rule) {\n        var _this = this;\n        if (!UrlRuleFactory.isUrlRule(rule))\n            throw new Error('invalid rule');\n        rule.$id = this._id++;\n        rule.priority = rule.priority || 0;\n        this._rules.push(rule);\n        this._sorted = false;\n        return function () { return _this.removeRule(rule); };\n    };\n    /**\n     * Gets all registered rules\n     *\n     * @returns an array of all the registered rules\n     */\n    UrlRules.prototype.rules = function () {\n        this.ensureSorted();\n        return this._rules.concat(this._otherwiseFn ? [this._otherwiseFn] : []);\n    };\n    /**\n     * Defines URL Rule priorities\n     *\n     * More than one rule ([[UrlRule]]) might match a given URL.\n     * This `compareFn` is used to sort the rules by priority.\n     * Higher priority rules should sort earlier.\n     *\n     * The [[defaultRuleSortFn]] is used by default.\n     *\n     * You only need to call this function once.\n     * The `compareFn` will be used to sort the rules as each is registered.\n     *\n     * If called without any parameter, it will re-sort the rules.\n     *\n     * ---\n     *\n     * Url rules may come from multiple sources: states's urls ([[StateDeclaration.url]]), [[when]], and [[rule]].\n     * Each rule has a (user-provided) [[UrlRule.priority]], a [[UrlRule.type]], and a [[UrlRule.$id]]\n     * The `$id` is is the order in which the rule was registered.\n     *\n     * The sort function should use these data, or data found on a specific type\n     * of [[UrlRule]] (such as [[StateRule.state]]), to order the rules as desired.\n     *\n     * #### Example:\n     * This compare function prioritizes rules by the order in which the rules were registered.\n     * A rule registered earlier has higher priority.\n     *\n     * ```js\n     * function compareFn(a, b) {\n     *   return a.$id - b.$id;\n     * }\n     * ```\n     *\n     * @param compareFn a function that compares to [[UrlRule]] objects.\n     *    The `compareFn` should abide by the `Array.sort` compare function rules.\n     *    Given two rules, `a` and `b`, return a negative number if `a` should be higher priority.\n     *    Return a positive number if `b` should be higher priority.\n     *    Return `0` if the rules are identical.\n     *\n     *    See the [mozilla reference](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Description)\n     *    for details.\n     */\n    UrlRules.prototype.sort = function (compareFn) {\n        var sorted = this.stableSort(this._rules, (this._sortFn = compareFn || this._sortFn));\n        // precompute _sortGroup values and apply to each rule\n        var group = 0;\n        for (var i = 0; i < sorted.length; i++) {\n            sorted[i]._group = group;\n            if (i < sorted.length - 1 && this._sortFn(sorted[i], sorted[i + 1]) !== 0) {\n                group++;\n            }\n        }\n        this._rules = sorted;\n        this._sorted = true;\n    };\n    /** @hidden */\n    UrlRules.prototype.ensureSorted = function () {\n        this._sorted || this.sort();\n    };\n    /** @hidden */\n    UrlRules.prototype.stableSort = function (arr, compareFn) {\n        var arrOfWrapper = arr.map(function (elem, idx) { return ({ elem: elem, idx: idx }); });\n        arrOfWrapper.sort(function (wrapperA, wrapperB) {\n            var cmpDiff = compareFn(wrapperA.elem, wrapperB.elem);\n            return cmpDiff === 0 ? wrapperA.idx - wrapperB.idx : cmpDiff;\n        });\n        return arrOfWrapper.map(function (wrapper) { return wrapper.elem; });\n    };\n    /**\n     * Registers a `matcher` and `handler` for custom URLs handling.\n     *\n     * The `matcher` can be:\n     *\n     * - a [[UrlMatcher]]: See: [[UrlMatcherFactory.compile]]\n     * - a `string`: The string is compiled to a [[UrlMatcher]]\n     * - a `RegExp`: The regexp is used to match the url.\n     *\n     * The `handler` can be:\n     *\n     * - a string: The url is redirected to the value of the string.\n     * - a function: The url is redirected to the return value of the function.\n     *\n     * ---\n     *\n     * When the `handler` is a `string` and the `matcher` is a `UrlMatcher` (or string), the redirect\n     * string is interpolated with parameter values.\n     *\n     * #### Example:\n     * When the URL is `/foo/123` the rule will redirect to `/bar/123`.\n     * ```js\n     * .when(\"/foo/:param1\", \"/bar/:param1\")\n     * ```\n     *\n     * ---\n     *\n     * When the `handler` is a string and the `matcher` is a `RegExp`, the redirect string is\n     * interpolated with capture groups from the RegExp.\n     *\n     * #### Example:\n     * When the URL is `/foo/123` the rule will redirect to `/bar/123`.\n     * ```js\n     * .when(new RegExp(\"^/foo/(.*)$\"), \"/bar/$1\");\n     * ```\n     *\n     * ---\n     *\n     * When the handler is a function, it receives the matched value, the current URL, and the `UIRouter` object (See [[UrlRuleHandlerFn]]).\n     * The \"matched value\" differs based on the `matcher`.\n     * For [[UrlMatcher]]s, it will be the matched state params.\n     * For `RegExp`, it will be the match array from `regexp.exec()`.\n     *\n     * If the handler returns a string, the URL is redirected to the string.\n     *\n     * #### Example:\n     * When the URL is `/foo/123` the rule will redirect to `/bar/123`.\n     * ```js\n     * .when(new RegExp(\"^/foo/(.*)$\"), match => \"/bar/\" + match[1]);\n     * ```\n     *\n     * Note: the `handler` may also invoke arbitrary code, such as `$state.go()`\n     *\n     * @param matcher A pattern `string` to match, compiled as a [[UrlMatcher]], or a `RegExp`.\n     * @param handler The path to redirect to, or a function that returns the path.\n     * @param options `{ priority: number }`\n     *\n     * @return the registered [[UrlRule]]\n     */\n    UrlRules.prototype.when = function (matcher, handler, options) {\n        var rule = this.urlRuleFactory.create(matcher, handler);\n        if (isDefined(options && options.priority))\n            rule.priority = options.priority;\n        this.rule(rule);\n        return rule;\n    };\n    return UrlRules;\n}());\nexport { UrlRules };\n//# sourceMappingURL=urlRules.js.map","/** @publicapi @module view */ /** */\nimport { equals, applyPairs, removeFrom, inArray, find } from '../common/common';\nimport { curry, prop } from '../common/hof';\nimport { isString, isArray } from '../common/predicates';\nimport { trace } from '../common/trace';\n/**\n * The View service\n *\n * This service pairs existing `ui-view` components (which live in the DOM)\n * with view configs (from the state declaration objects: [[StateDeclaration.views]]).\n *\n * - After a successful Transition, the views from the newly entered states are activated via [[activateViewConfig]].\n *   The views from exited states are deactivated via [[deactivateViewConfig]].\n *   (See: the [[registerActivateViews]] Transition Hook)\n *\n * - As `ui-view` components pop in and out of existence, they register themselves using [[registerUIView]].\n *\n * - When the [[sync]] function is called, the registered `ui-view`(s) ([[ActiveUIView]])\n * are configured with the matching [[ViewConfig]](s)\n *\n */\nvar ViewService = /** @class */ (function () {\n    /** @hidden */\n    function ViewService(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        /** @hidden */ this._uiViews = [];\n        /** @hidden */ this._viewConfigs = [];\n        /** @hidden */ this._viewConfigFactories = {};\n        /** @hidden */ this._listeners = [];\n        /** @internalapi */\n        this._pluginapi = {\n            _rootViewContext: this._rootViewContext.bind(this),\n            _viewConfigFactory: this._viewConfigFactory.bind(this),\n            _registeredUIView: function (id) { return find(_this._uiViews, function (view) { return _this.router.$id + \".\" + view.id === id; }); },\n            _registeredUIViews: function () { return _this._uiViews; },\n            _activeViewConfigs: function () { return _this._viewConfigs; },\n            _onSync: function (listener) {\n                _this._listeners.push(listener);\n                return function () { return removeFrom(_this._listeners, listener); };\n            },\n        };\n    }\n    /**\n     * Normalizes a view's name from a state.views configuration block.\n     *\n     * This should be used by a framework implementation to calculate the values for\n     * [[_ViewDeclaration.$uiViewName]] and [[_ViewDeclaration.$uiViewContextAnchor]].\n     *\n     * @param context the context object (state declaration) that the view belongs to\n     * @param rawViewName the name of the view, as declared in the [[StateDeclaration.views]]\n     *\n     * @returns the normalized uiViewName and uiViewContextAnchor that the view targets\n     */\n    ViewService.normalizeUIViewTarget = function (context, rawViewName) {\n        if (rawViewName === void 0) { rawViewName = ''; }\n        // TODO: Validate incoming view name with a regexp to allow:\n        // ex: \"view.name@foo.bar\" , \"^.^.view.name\" , \"view.name@^.^\" , \"\" ,\n        // \"@\" , \"$default@^\" , \"!$default.$default\" , \"!foo.bar\"\n        var viewAtContext = rawViewName.split('@');\n        var uiViewName = viewAtContext[0] || '$default'; // default to unnamed view\n        var uiViewContextAnchor = isString(viewAtContext[1]) ? viewAtContext[1] : '^'; // default to parent context\n        // Handle relative view-name sugar syntax.\n        // Matches rawViewName \"^.^.^.foo.bar\" into array: [\"^.^.^.foo.bar\", \"^.^.^\", \"foo.bar\"],\n        var relativeViewNameSugar = /^(\\^(?:\\.\\^)*)\\.(.*$)/.exec(uiViewName);\n        if (relativeViewNameSugar) {\n            // Clobbers existing contextAnchor (rawViewName validation will fix this)\n            uiViewContextAnchor = relativeViewNameSugar[1]; // set anchor to \"^.^.^\"\n            uiViewName = relativeViewNameSugar[2]; // set view-name to \"foo.bar\"\n        }\n        if (uiViewName.charAt(0) === '!') {\n            uiViewName = uiViewName.substr(1);\n            uiViewContextAnchor = ''; // target absolutely from root\n        }\n        // handle parent relative targeting \"^.^.^\"\n        var relativeMatch = /^(\\^(?:\\.\\^)*)$/;\n        if (relativeMatch.exec(uiViewContextAnchor)) {\n            var anchorState = uiViewContextAnchor.split('.').reduce(function (anchor, x) { return anchor.parent; }, context);\n            uiViewContextAnchor = anchorState.name;\n        }\n        else if (uiViewContextAnchor === '.') {\n            uiViewContextAnchor = context.name;\n        }\n        return { uiViewName: uiViewName, uiViewContextAnchor: uiViewContextAnchor };\n    };\n    /** @hidden */\n    ViewService.prototype._rootViewContext = function (context) {\n        return (this._rootContext = context || this._rootContext);\n    };\n    /** @hidden */\n    ViewService.prototype._viewConfigFactory = function (viewType, factory) {\n        this._viewConfigFactories[viewType] = factory;\n    };\n    ViewService.prototype.createViewConfig = function (path, decl) {\n        var cfgFactory = this._viewConfigFactories[decl.$type];\n        if (!cfgFactory)\n            throw new Error('ViewService: No view config factory registered for type ' + decl.$type);\n        var cfgs = cfgFactory(path, decl);\n        return isArray(cfgs) ? cfgs : [cfgs];\n    };\n    /**\n     * Deactivates a ViewConfig.\n     *\n     * This function deactivates a `ViewConfig`.\n     * After calling [[sync]], it will un-pair from any `ui-view` with which it is currently paired.\n     *\n     * @param viewConfig The ViewConfig view to deregister.\n     */\n    ViewService.prototype.deactivateViewConfig = function (viewConfig) {\n        trace.traceViewServiceEvent('<- Removing', viewConfig);\n        removeFrom(this._viewConfigs, viewConfig);\n    };\n    ViewService.prototype.activateViewConfig = function (viewConfig) {\n        trace.traceViewServiceEvent('-> Registering', viewConfig);\n        this._viewConfigs.push(viewConfig);\n    };\n    ViewService.prototype.sync = function () {\n        var _this = this;\n        var uiViewsByFqn = this._uiViews.map(function (uiv) { return [uiv.fqn, uiv]; }).reduce(applyPairs, {});\n        // Return a weighted depth value for a uiView.\n        // The depth is the nesting depth of ui-views (based on FQN; times 10,000)\n        // plus the depth of the state that is populating the uiView\n        function uiViewDepth(uiView) {\n            var stateDepth = function (context) { return (context && context.parent ? stateDepth(context.parent) + 1 : 1); };\n            return uiView.fqn.split('.').length * 10000 + stateDepth(uiView.creationContext);\n        }\n        // Return the ViewConfig's context's depth in the context tree.\n        function viewConfigDepth(config) {\n            var context = config.viewDecl.$context, count = 0;\n            while (++count && context.parent)\n                context = context.parent;\n            return count;\n        }\n        // Given a depth function, returns a compare function which can return either ascending or descending order\n        var depthCompare = curry(function (depthFn, posNeg, left, right) { return posNeg * (depthFn(left) - depthFn(right)); });\n        var matchingConfigPair = function (uiView) {\n            var matchingConfigs = _this._viewConfigs.filter(ViewService.matches(uiViewsByFqn, uiView));\n            if (matchingConfigs.length > 1) {\n                // This is OK.  Child states can target a ui-view that the parent state also targets (the child wins)\n                // Sort by depth and return the match from the deepest child\n                // console.log(`Multiple matching view configs for ${uiView.fqn}`, matchingConfigs);\n                matchingConfigs.sort(depthCompare(viewConfigDepth, -1)); // descending\n            }\n            return { uiView: uiView, viewConfig: matchingConfigs[0] };\n        };\n        var configureUIView = function (tuple) {\n            // If a parent ui-view is reconfigured, it could destroy child ui-views.\n            // Before configuring a child ui-view, make sure it's still in the active uiViews array.\n            if (_this._uiViews.indexOf(tuple.uiView) !== -1)\n                tuple.uiView.configUpdated(tuple.viewConfig);\n        };\n        // Sort views by FQN and state depth. Process uiviews nearest the root first.\n        var uiViewTuples = this._uiViews.sort(depthCompare(uiViewDepth, 1)).map(matchingConfigPair);\n        var matchedViewConfigs = uiViewTuples.map(function (tuple) { return tuple.viewConfig; });\n        var unmatchedConfigTuples = this._viewConfigs\n            .filter(function (config) { return !inArray(matchedViewConfigs, config); })\n            .map(function (viewConfig) { return ({ uiView: undefined, viewConfig: viewConfig }); });\n        uiViewTuples.forEach(configureUIView);\n        var allTuples = uiViewTuples.concat(unmatchedConfigTuples);\n        this._listeners.forEach(function (cb) { return cb(allTuples); });\n        trace.traceViewSync(allTuples);\n    };\n    /**\n     * Registers a `ui-view` component\n     *\n     * When a `ui-view` component is created, it uses this method to register itself.\n     * After registration the [[sync]] method is used to ensure all `ui-view` are configured with the proper [[ViewConfig]].\n     *\n     * Note: the `ui-view` component uses the `ViewConfig` to determine what view should be loaded inside the `ui-view`,\n     * and what the view's state context is.\n     *\n     * Note: There is no corresponding `deregisterUIView`.\n     *       A `ui-view` should hang on to the return value of `registerUIView` and invoke it to deregister itself.\n     *\n     * @param uiView The metadata for a UIView\n     * @return a de-registration function used when the view is destroyed.\n     */\n    ViewService.prototype.registerUIView = function (uiView) {\n        trace.traceViewServiceUIViewEvent('-> Registering', uiView);\n        var uiViews = this._uiViews;\n        var fqnAndTypeMatches = function (uiv) { return uiv.fqn === uiView.fqn && uiv.$type === uiView.$type; };\n        if (uiViews.filter(fqnAndTypeMatches).length)\n            trace.traceViewServiceUIViewEvent('!!!! duplicate uiView named:', uiView);\n        uiViews.push(uiView);\n        this.sync();\n        return function () {\n            var idx = uiViews.indexOf(uiView);\n            if (idx === -1) {\n                trace.traceViewServiceUIViewEvent('Tried removing non-registered uiView', uiView);\n                return;\n            }\n            trace.traceViewServiceUIViewEvent('<- Deregistering', uiView);\n            removeFrom(uiViews)(uiView);\n        };\n    };\n    /**\n     * Returns the list of views currently available on the page, by fully-qualified name.\n     *\n     * @return {Array} Returns an array of fully-qualified view names.\n     */\n    ViewService.prototype.available = function () {\n        return this._uiViews.map(prop('fqn'));\n    };\n    /**\n     * Returns the list of views on the page containing loaded content.\n     *\n     * @return {Array} Returns an array of fully-qualified view names.\n     */\n    ViewService.prototype.active = function () {\n        return this._uiViews.filter(prop('$config')).map(prop('name'));\n    };\n    /**\n     * Given a ui-view and a ViewConfig, determines if they \"match\".\n     *\n     * A ui-view has a fully qualified name (fqn) and a context object.  The fqn is built from its overall location in\n     * the DOM, describing its nesting relationship to any parent ui-view tags it is nested inside of.\n     *\n     * A ViewConfig has a target ui-view name and a context anchor.  The ui-view name can be a simple name, or\n     * can be a segmented ui-view path, describing a portion of a ui-view fqn.\n     *\n     * In order for a ui-view to match ViewConfig, ui-view's $type must match the ViewConfig's $type\n     *\n     * If the ViewConfig's target ui-view name is a simple name (no dots), then a ui-view matches if:\n     * - the ui-view's name matches the ViewConfig's target name\n     * - the ui-view's context matches the ViewConfig's anchor\n     *\n     * If the ViewConfig's target ui-view name is a segmented name (with dots), then a ui-view matches if:\n     * - There exists a parent ui-view where:\n     *    - the parent ui-view's name matches the first segment (index 0) of the ViewConfig's target name\n     *    - the parent ui-view's context matches the ViewConfig's anchor\n     * - And the remaining segments (index 1..n) of the ViewConfig's target name match the tail of the ui-view's fqn\n     *\n     * Example:\n     *\n     * DOM:\n     * <ui-view>                        <!-- created in the root context (name: \"\") -->\n     *   <ui-view name=\"foo\">                <!-- created in the context named: \"A\"      -->\n     *     <ui-view>                    <!-- created in the context named: \"A.B\"    -->\n     *       <ui-view name=\"bar\">            <!-- created in the context named: \"A.B.C\"  -->\n     *       </ui-view>\n     *     </ui-view>\n     *   </ui-view>\n     * </ui-view>\n     *\n     * uiViews: [\n     *  { fqn: \"$default\",                  creationContext: { name: \"\" } },\n     *  { fqn: \"$default.foo\",              creationContext: { name: \"A\" } },\n     *  { fqn: \"$default.foo.$default\",     creationContext: { name: \"A.B\" } }\n     *  { fqn: \"$default.foo.$default.bar\", creationContext: { name: \"A.B.C\" } }\n     * ]\n     *\n     * These four view configs all match the ui-view with the fqn: \"$default.foo.$default.bar\":\n     *\n     * - ViewConfig1: { uiViewName: \"bar\",                       uiViewContextAnchor: \"A.B.C\" }\n     * - ViewConfig2: { uiViewName: \"$default.bar\",              uiViewContextAnchor: \"A.B\" }\n     * - ViewConfig3: { uiViewName: \"foo.$default.bar\",          uiViewContextAnchor: \"A\" }\n     * - ViewConfig4: { uiViewName: \"$default.foo.$default.bar\", uiViewContextAnchor: \"\" }\n     *\n     * Using ViewConfig3 as an example, it matches the ui-view with fqn \"$default.foo.$default.bar\" because:\n     * - The ViewConfig's segmented target name is: [ \"foo\", \"$default\", \"bar\" ]\n     * - There exists a parent ui-view (which has fqn: \"$default.foo\") where:\n     *    - the parent ui-view's name \"foo\" matches the first segment \"foo\" of the ViewConfig's target name\n     *    - the parent ui-view's context \"A\" matches the ViewConfig's anchor context \"A\"\n     * - And the remaining segments [ \"$default\", \"bar\" ].join(\".\"_ of the ViewConfig's target name match\n     *   the tail of the ui-view's fqn \"default.bar\"\n     *\n     * @internalapi\n     */\n    ViewService.matches = function (uiViewsByFqn, uiView) { return function (viewConfig) {\n        // Don't supply an ng1 ui-view with an ng2 ViewConfig, etc\n        if (uiView.$type !== viewConfig.viewDecl.$type)\n            return false;\n        // Split names apart from both viewConfig and uiView into segments\n        var vc = viewConfig.viewDecl;\n        var vcSegments = vc.$uiViewName.split('.');\n        var uivSegments = uiView.fqn.split('.');\n        // Check if the tails of the segment arrays match. ex, these arrays' tails match:\n        // vc: [\"foo\", \"bar\"], uiv fqn: [\"$default\", \"foo\", \"bar\"]\n        if (!equals(vcSegments, uivSegments.slice(0 - vcSegments.length)))\n            return false;\n        // Now check if the fqn ending at the first segment of the viewConfig matches the context:\n        // [\"$default\", \"foo\"].join(\".\") == \"$default.foo\", does the ui-view $default.foo context match?\n        var negOffset = 1 - vcSegments.length || undefined;\n        var fqnToFirstSegment = uivSegments.slice(0, negOffset).join('.');\n        var uiViewContext = uiViewsByFqn[fqnToFirstSegment].creationContext;\n        return vc.$uiViewContextAnchor === (uiViewContext && uiViewContext.name);\n    }; };\n    return ViewService;\n}());\nexport { ViewService };\n//# sourceMappingURL=view.js.map","/** @publicapi @module core */ /** */\nimport { StateParams } from './params/stateParams';\nimport { Queue } from './common/queue';\n/**\n * Global router state\n *\n * This is where we hold the global mutable state such as current state, current\n * params, current transition, etc.\n */\nvar UIRouterGlobals = /** @class */ (function () {\n    function UIRouterGlobals() {\n        /**\n         * Current parameter values\n         *\n         * The parameter values from the latest successful transition\n         */\n        this.params = new StateParams();\n        /** @internalapi */\n        this.lastStartedTransitionId = -1;\n        /** @internalapi */\n        this.transitionHistory = new Queue([], 1);\n        /** @internalapi */\n        this.successfulTransitions = new Queue([], 1);\n    }\n    UIRouterGlobals.prototype.dispose = function () {\n        this.transitionHistory.clear();\n        this.successfulTransitions.clear();\n        this.transition = null;\n    };\n    return UIRouterGlobals;\n}());\nexport { UIRouterGlobals };\n//# sourceMappingURL=globals.js.map","import { ParamTypes } from '../params';\nimport { isDefined, isString } from '../common';\n/**\n * An API to customize the URL behavior and retrieve URL configuration\n *\n * This API is used to customize the behavior of the URL.\n * This includes optional trailing slashes ([[strictMode]]), case sensitivity ([[caseInsensitive]]),\n * and custom parameter encoding (custom [[type]]).\n *\n * It also has information about the location (url) configuration such as [[port]] and [[baseHref]].\n * This information can be used to build absolute URLs, such as\n * `https://example.com:443/basepath/state/substate?param1=a#hashvalue`;\n *\n * This API is a property of [[UrlService]] as [[UrlService.config]].\n */\nvar UrlConfig = /** @class */ (function () {\n    /** @hidden */ function UrlConfig(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        /** @hidden */ this.paramTypes = new ParamTypes();\n        /** @hidden */ this._isCaseInsensitive = false;\n        /** @hidden */ this._isStrictMode = true;\n        /** @hidden */ this._defaultSquashPolicy = false;\n        /** @internalapi */ this.dispose = function () { return _this.paramTypes.dispose(); };\n        // Delegate these calls to the current LocationConfig implementation\n        /**\n         * Gets the base Href, e.g., `http://localhost/approot/`\n         *\n         * @return the application's base href\n         */\n        this.baseHref = function () { return _this.router.locationConfig.baseHref(); };\n        /**\n         * Gets or sets the hashPrefix\n         *\n         * This only applies when not running in [[html5Mode]] (pushstate mode)\n         *\n         * If the current url is `http://localhost/app#!/uirouter/path/#anchor`, it returns `!` which is the prefix for the \"hashbang\" portion.\n         *\n         * @return the hash prefix\n         */\n        this.hashPrefix = function (newprefix) { return _this.router.locationConfig.hashPrefix(newprefix); };\n        /**\n         * Gets the host, e.g., `localhost`\n         *\n         * @return the protocol\n         */\n        this.host = function () { return _this.router.locationConfig.host(); };\n        /**\n         * Returns true when running in pushstate mode\n         *\n         * @return true when running in html5 mode (pushstate mode).\n         */\n        this.html5Mode = function () { return _this.router.locationConfig.html5Mode(); };\n        /**\n         * Gets the port, e.g., `80`\n         *\n         * @return the port number\n         */\n        this.port = function () { return _this.router.locationConfig.port(); };\n        /**\n         * Gets the protocol, e.g., `http`\n         *\n         * @return the protocol\n         */\n        this.protocol = function () { return _this.router.locationConfig.protocol(); };\n    }\n    /**\n     * Defines whether URL matching should be case sensitive (the default behavior), or not.\n     *\n     * #### Example:\n     * ```js\n     * // Allow case insensitive url matches\n     * urlService.config.caseInsensitive(true);\n     * ```\n     *\n     * @param value `false` to match URL in a case sensitive manner; otherwise `true`;\n     * @returns the current value of caseInsensitive\n     */\n    UrlConfig.prototype.caseInsensitive = function (value) {\n        return (this._isCaseInsensitive = isDefined(value) ? value : this._isCaseInsensitive);\n    };\n    /**\n     * Sets the default behavior when generating or matching URLs with default parameter values.\n     *\n     * #### Example:\n     * ```js\n     * // Remove default parameter values from the url\n     * urlService.config.defaultSquashPolicy(true);\n     * ```\n     *\n     * @param value A string that defines the default parameter URL squashing behavior.\n     *    - `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n     *    - `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n     *      parameter is surrounded by slashes, squash (remove) one slash from the URL\n     *    - any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n     *      the parameter value from the URL and replace it with this string.\n     * @returns the current value of defaultSquashPolicy\n     */\n    UrlConfig.prototype.defaultSquashPolicy = function (value) {\n        if (isDefined(value) && value !== true && value !== false && !isString(value))\n            throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n        return (this._defaultSquashPolicy = isDefined(value) ? value : this._defaultSquashPolicy);\n    };\n    /**\n     * Defines whether URLs should match trailing slashes, or not (the default behavior).\n     *\n     * #### Example:\n     * ```js\n     * // Allow optional trailing slashes\n     * urlService.config.strictMode(false);\n     * ```\n     *\n     * @param value `false` to match trailing slashes in URLs, otherwise `true`.\n     * @returns the current value of strictMode\n     */\n    UrlConfig.prototype.strictMode = function (value) {\n        return (this._isStrictMode = isDefined(value) ? value : this._isStrictMode);\n    };\n    /**\n     * Creates and registers a custom [[ParamType]] object\n     *\n     * A custom parameter type can be used to generate URLs with typed parameters or custom encoding/decoding.\n     *\n     * #### Note: Register custom types *before using them* in a state definition.\n     *\n     * #### Example:\n     * ```js\n     * // Encode object parameter as JSON string\n     * urlService.config.type('myjson', {\n     *   encode: (obj) => JSON.stringify(obj),\n     *   decode: (str) => JSON.parse(str),\n     *   is: (val) => typeof(val) === 'object',\n     *   pattern: /[^/]+/,\n     *   equals: (a, b) => _.isEqual(a, b),\n     * });\n     * ```\n     *\n     * See [[ParamTypeDefinition]] for more examples\n     *\n     * @param name The type name.\n     * @param definition The type definition. See [[ParamTypeDefinition]] for information on the values accepted.\n     * @param definitionFn A function that is injected before the app runtime starts.\n     *        The result of this function should be a [[ParamTypeDefinition]].\n     *        The result is merged into the existing `definition`.\n     *        See [[ParamType]] for information on the values accepted.\n     *\n     * @returns if only the `name` parameter was specified: the currently registered [[ParamType]] object, or undefined\n     */\n    UrlConfig.prototype.type = function (name, definition, definitionFn) {\n        var type = this.paramTypes.type(name, definition, definitionFn);\n        return !isDefined(definition) ? type : this;\n    };\n    return UrlConfig;\n}());\nexport { UrlConfig };\n//# sourceMappingURL=urlConfig.js.map","import { extend, is, isString, pattern } from '../common';\nimport { UrlRules } from './urlRules';\nimport { UrlConfig } from './urlConfig';\nimport { TargetState } from '../state';\n/** API for URL management */\nvar UrlService = /** @class */ (function () {\n    /** @hidden */\n    function UrlService(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        /** @hidden */ this.interceptDeferred = false;\n        /**\n         * The nested [[UrlRules]] API for managing URL rules and rewrites\n         *\n         * See: [[UrlRules]] for details\n         */\n        this.rules = new UrlRules(this.router);\n        /**\n         * The nested [[UrlConfig]] API to configure the URL and retrieve URL information\n         *\n         * See: [[UrlConfig]] for details\n         */\n        this.config = new UrlConfig(this.router);\n        // Delegate these calls to the current LocationServices implementation\n        /**\n         * Gets the current url, or updates the url\n         *\n         * ### Getting the current URL\n         *\n         * When no arguments are passed, returns the current URL.\n         * The URL is normalized using the internal [[path]]/[[search]]/[[hash]] values.\n         *\n         * For example, the URL may be stored in the hash ([[HashLocationServices]]) or\n         * have a base HREF prepended ([[PushStateLocationServices]]).\n         *\n         * The raw URL in the browser might be:\n         *\n         * ```\n         * http://mysite.com/somepath/index.html#/internal/path/123?param1=foo#anchor\n         * ```\n         *\n         * or\n         *\n         * ```\n         * http://mysite.com/basepath/internal/path/123?param1=foo#anchor\n         * ```\n         *\n         * then this method returns:\n         *\n         * ```\n         * /internal/path/123?param1=foo#anchor\n         * ```\n         *\n         *\n         * #### Example:\n         * ```js\n         * locationServices.url(); // \"/some/path?query=value#anchor\"\n         * ```\n         *\n         * ### Updating the URL\n         *\n         * When `newurl` arguments is provided, changes the URL to reflect `newurl`\n         *\n         * #### Example:\n         * ```js\n         * locationServices.url(\"/some/path?query=value#anchor\", true);\n         * ```\n         *\n         * @param newurl The new value for the URL.\n         *               This url should reflect only the new internal [[path]], [[search]], and [[hash]] values.\n         *               It should not include the protocol, site, port, or base path of an absolute HREF.\n         * @param replace When true, replaces the current history entry (instead of appending it) with this new url\n         * @param state The history's state object, i.e., pushState (if the LocationServices implementation supports it)\n         *\n         * @return the url (after potentially being processed)\n         */\n        this.url = function (newurl, replace, state) {\n            return _this.router.locationService.url(newurl, replace, state);\n        };\n        /**\n         * Gets the path part of the current url\n         *\n         * If the current URL is `/some/path?query=value#anchor`, this returns `/some/path`\n         *\n         * @return the path portion of the url\n         */\n        this.path = function () { return _this.router.locationService.path(); };\n        /**\n         * Gets the search part of the current url as an object\n         *\n         * If the current URL is `/some/path?query=value#anchor`, this returns `{ query: 'value' }`\n         *\n         * @return the search (query) portion of the url, as an object\n         */\n        this.search = function () { return _this.router.locationService.search(); };\n        /**\n         * Gets the hash part of the current url\n         *\n         * If the current URL is `/some/path?query=value#anchor`, this returns `anchor`\n         *\n         * @return the hash (anchor) portion of the url\n         */\n        this.hash = function () { return _this.router.locationService.hash(); };\n        /**\n         * @internalapi\n         *\n         * Registers a low level url change handler\n         *\n         * Note: Because this is a low level handler, it's not recommended for general use.\n         *\n         * #### Example:\n         * ```js\n         * let deregisterFn = locationServices.onChange((evt) => console.log(\"url change\", evt));\n         * ```\n         *\n         * @param callback a function that will be called when the url is changing\n         * @return a function that de-registers the callback\n         */\n        this.onChange = function (callback) { return _this.router.locationService.onChange(callback); };\n    }\n    /** @hidden */\n    UrlService.prototype.dispose = function () {\n        this.listen(false);\n        this.rules.dispose();\n    };\n    /**\n     * Gets the current URL parts\n     *\n     * This method returns the different parts of the current URL (the [[path]], [[search]], and [[hash]]) as a [[UrlParts]] object.\n     */\n    UrlService.prototype.parts = function () {\n        return { path: this.path(), search: this.search(), hash: this.hash() };\n    };\n    /**\n     * Activates the best rule for the current URL\n     *\n     * Checks the current URL for a matching [[UrlRule]], then invokes that rule's handler.\n     * This method is called internally any time the URL has changed.\n     *\n     * This effectively activates the state (or redirect, etc) which matches the current URL.\n     *\n     * #### Example:\n     * ```js\n     * urlService.deferIntercept();\n     *\n     * fetch('/states.json').then(resp => resp.json()).then(data => {\n     *   data.forEach(state => $stateRegistry.register(state));\n     *   urlService.listen();\n     *   // Find the matching URL and invoke the handler.\n     *   urlService.sync();\n     * });\n     * ```\n     */\n    UrlService.prototype.sync = function (evt) {\n        if (evt && evt.defaultPrevented)\n            return;\n        var _a = this.router, urlService = _a.urlService, stateService = _a.stateService;\n        var url = { path: urlService.path(), search: urlService.search(), hash: urlService.hash() };\n        var best = this.match(url);\n        var applyResult = pattern([\n            [isString, function (newurl) { return urlService.url(newurl, true); }],\n            [TargetState.isDef, function (def) { return stateService.go(def.state, def.params, def.options); }],\n            [is(TargetState), function (target) { return stateService.go(target.state(), target.params(), target.options()); }],\n        ]);\n        applyResult(best && best.rule.handler(best.match, url, this.router));\n    };\n    /**\n     * Starts or stops listening for URL changes\n     *\n     * Call this sometime after calling [[deferIntercept]] to start monitoring the url.\n     * This causes UI-Router to start listening for changes to the URL, if it wasn't already listening.\n     *\n     * If called with `false`, UI-Router will stop listening (call listen(true) to start listening again).\n     *\n     * #### Example:\n     * ```js\n     * urlService.deferIntercept();\n     *\n     * fetch('/states.json').then(resp => resp.json()).then(data => {\n     *   data.forEach(state => $stateRegistry.register(state));\n     *   // Start responding to URL changes\n     *   urlService.listen();\n     *   urlService.sync();\n     * });\n     * ```\n     *\n     * @param enabled `true` or `false` to start or stop listening to URL changes\n     */\n    UrlService.prototype.listen = function (enabled) {\n        var _this = this;\n        if (enabled === false) {\n            this._stopListeningFn && this._stopListeningFn();\n            delete this._stopListeningFn;\n        }\n        else {\n            return (this._stopListeningFn = this._stopListeningFn || this.router.urlService.onChange(function (evt) { return _this.sync(evt); }));\n        }\n    };\n    /**\n     * Disables monitoring of the URL.\n     *\n     * Call this method before UI-Router has bootstrapped.\n     * It will stop UI-Router from performing the initial url sync.\n     *\n     * This can be useful to perform some asynchronous initialization before the router starts.\n     * Once the initialization is complete, call [[listen]] to tell UI-Router to start watching and synchronizing the URL.\n     *\n     * #### Example:\n     * ```js\n     * // Prevent UI-Router from automatically intercepting URL changes when it starts;\n     * urlService.deferIntercept();\n     *\n     * fetch('/states.json').then(resp => resp.json()).then(data => {\n     *   data.forEach(state => $stateRegistry.register(state));\n     *   urlService.listen();\n     *   urlService.sync();\n     * });\n     * ```\n     *\n     * @param defer Indicates whether to defer location change interception.\n     *        Passing no parameter is equivalent to `true`.\n     */\n    UrlService.prototype.deferIntercept = function (defer) {\n        if (defer === undefined)\n            defer = true;\n        this.interceptDeferred = defer;\n    };\n    /**\n     * Matches a URL\n     *\n     * Given a URL (as a [[UrlParts]] object), check all rules and determine the best matching rule.\n     * Return the result as a [[MatchResult]].\n     */\n    UrlService.prototype.match = function (url) {\n        var _this = this;\n        url = extend({ path: '', search: {}, hash: '' }, url);\n        var rules = this.rules.rules();\n        // Checks a single rule. Returns { rule: rule, match: match, weight: weight } if it matched, or undefined\n        var checkRule = function (rule) {\n            var match = rule.match(url, _this.router);\n            return match && { match: match, rule: rule, weight: rule.matchPriority(match) };\n        };\n        // The rules are pre-sorted.\n        // - Find the first matching rule.\n        // - Find any other matching rule that sorted *exactly the same*, according to `.sort()`.\n        // - Choose the rule with the highest match weight.\n        var best;\n        for (var i = 0; i < rules.length; i++) {\n            // Stop when there is a 'best' rule and the next rule sorts differently than it.\n            if (best && best.rule._group !== rules[i]._group)\n                break;\n            var current = checkRule(rules[i]);\n            // Pick the best MatchResult\n            best = !best || (current && current.weight > best.weight) ? current : best;\n        }\n        return best;\n    };\n    return UrlService;\n}());\nexport { UrlService };\n//# sourceMappingURL=urlService.js.map","/** @publicapi @module core */ /** */\nimport { UrlMatcherFactory } from './url/urlMatcherFactory';\nimport { UrlRouter } from './url/urlRouter';\nimport { TransitionService } from './transition/transitionService';\nimport { ViewService } from './view/view';\nimport { StateRegistry } from './state/stateRegistry';\nimport { StateService } from './state/stateService';\nimport { UIRouterGlobals } from './globals';\nimport { values, removeFrom } from './common/common';\nimport { isFunction } from './common/predicates';\nimport { UrlService } from './url/urlService';\nimport { trace } from './common/trace';\nimport { makeStub } from './common';\n/** @hidden */\nvar _routerInstance = 0;\n/** @hidden */\nvar locSvcFns = ['url', 'path', 'search', 'hash', 'onChange'];\n/** @hidden */\nvar locCfgFns = ['port', 'protocol', 'host', 'baseHref', 'html5Mode', 'hashPrefix'];\n/** @hidden */\nvar locationServiceStub = makeStub('LocationServices', locSvcFns);\n/** @hidden */\nvar locationConfigStub = makeStub('LocationConfig', locCfgFns);\n/**\n * The master class used to instantiate an instance of UI-Router.\n *\n * UI-Router (for each specific framework) will create an instance of this class during bootstrap.\n * This class instantiates and wires the UI-Router services together.\n *\n * After a new instance of the UIRouter class is created, it should be configured for your app.\n * For instance, app states should be registered with the [[UIRouter.stateRegistry]].\n *\n * ---\n *\n * Normally the framework code will bootstrap UI-Router.\n * If you are bootstrapping UIRouter manually, tell it to monitor the URL by calling\n * [[UrlService.listen]] then [[UrlService.sync]].\n */\nvar UIRouter = /** @class */ (function () {\n    /**\n     * Creates a new `UIRouter` object\n     *\n     * @param locationService a [[LocationServices]] implementation\n     * @param locationConfig a [[LocationConfig]] implementation\n     * @internalapi\n     */\n    function UIRouter(locationService, locationConfig) {\n        if (locationService === void 0) { locationService = locationServiceStub; }\n        if (locationConfig === void 0) { locationConfig = locationConfigStub; }\n        this.locationService = locationService;\n        this.locationConfig = locationConfig;\n        /** @hidden */ this.$id = _routerInstance++;\n        /** @hidden */ this._disposed = false;\n        /** @hidden */ this._disposables = [];\n        /** Provides trace information to the console */\n        this.trace = trace;\n        /** Provides services related to ui-view synchronization */\n        this.viewService = new ViewService(this);\n        /** Global router state */\n        this.globals = new UIRouterGlobals();\n        /** Provides services related to Transitions */\n        this.transitionService = new TransitionService(this);\n        /**\n         * Deprecated for public use. Use [[urlService]] instead.\n         * @deprecated Use [[urlService]] instead\n         */\n        this.urlMatcherFactory = new UrlMatcherFactory(this);\n        /**\n         * Deprecated for public use. Use [[urlService]] instead.\n         * @deprecated Use [[urlService]] instead\n         */\n        this.urlRouter = new UrlRouter(this);\n        /** Provides services related to the URL */\n        this.urlService = new UrlService(this);\n        /** Provides a registry for states, and related registration services */\n        this.stateRegistry = new StateRegistry(this);\n        /** Provides services related to states */\n        this.stateService = new StateService(this);\n        /** @hidden plugin instances are registered here */\n        this._plugins = {};\n        this.viewService._pluginapi._rootViewContext(this.stateRegistry.root());\n        this.globals.$current = this.stateRegistry.root();\n        this.globals.current = this.globals.$current.self;\n        this.disposable(this.globals);\n        this.disposable(this.stateService);\n        this.disposable(this.stateRegistry);\n        this.disposable(this.transitionService);\n        this.disposable(this.urlService);\n        this.disposable(locationService);\n        this.disposable(locationConfig);\n    }\n    /** Registers an object to be notified when the router is disposed */\n    UIRouter.prototype.disposable = function (disposable) {\n        this._disposables.push(disposable);\n    };\n    /**\n     * Disposes this router instance\n     *\n     * When called, clears resources retained by the router by calling `dispose(this)` on all\n     * registered [[disposable]] objects.\n     *\n     * Or, if a `disposable` object is provided, calls `dispose(this)` on that object only.\n     *\n     * @param disposable (optional) the disposable to dispose\n     */\n    UIRouter.prototype.dispose = function (disposable) {\n        var _this = this;\n        if (disposable && isFunction(disposable.dispose)) {\n            disposable.dispose(this);\n            return undefined;\n        }\n        this._disposed = true;\n        this._disposables.slice().forEach(function (d) {\n            try {\n                typeof d.dispose === 'function' && d.dispose(_this);\n                removeFrom(_this._disposables, d);\n            }\n            catch (ignored) { }\n        });\n    };\n    /**\n     * Adds a plugin to UI-Router\n     *\n     * This method adds a UI-Router Plugin.\n     * A plugin can enhance or change UI-Router behavior using any public API.\n     *\n     * #### Example:\n     * ```js\n     * import { MyCoolPlugin } from \"ui-router-cool-plugin\";\n     *\n     * var plugin = router.addPlugin(MyCoolPlugin);\n     * ```\n     *\n     * ### Plugin authoring\n     *\n     * A plugin is simply a class (or constructor function) which accepts a [[UIRouter]] instance and (optionally) an options object.\n     *\n     * The plugin can implement its functionality using any of the public APIs of [[UIRouter]].\n     * For example, it may configure router options or add a Transition Hook.\n     *\n     * The plugin can then be published as a separate module.\n     *\n     * #### Example:\n     * ```js\n     * export class MyAuthPlugin implements UIRouterPlugin {\n     *   constructor(router: UIRouter, options: any) {\n     *     this.name = \"MyAuthPlugin\";\n     *     let $transitions = router.transitionService;\n     *     let $state = router.stateService;\n     *\n     *     let authCriteria = {\n     *       to: (state) => state.data && state.data.requiresAuth\n     *     };\n     *\n     *     function authHook(transition: Transition) {\n     *       let authService = transition.injector().get('AuthService');\n     *       if (!authService.isAuthenticated()) {\n     *         return $state.target('login');\n     *       }\n     *     }\n     *\n     *     $transitions.onStart(authCriteria, authHook);\n     *   }\n     * }\n     * ```\n     *\n     * @param plugin one of:\n     *        - a plugin class which implements [[UIRouterPlugin]]\n     *        - a constructor function for a [[UIRouterPlugin]] which accepts a [[UIRouter]] instance\n     *        - a factory function which accepts a [[UIRouter]] instance and returns a [[UIRouterPlugin]] instance\n     * @param options options to pass to the plugin class/factory\n     * @returns the registered plugin instance\n     */\n    UIRouter.prototype.plugin = function (plugin, options) {\n        if (options === void 0) { options = {}; }\n        var pluginInstance = new plugin(this, options);\n        if (!pluginInstance.name)\n            throw new Error('Required property `name` missing on plugin: ' + pluginInstance);\n        this._disposables.push(pluginInstance);\n        return (this._plugins[pluginInstance.name] = pluginInstance);\n    };\n    UIRouter.prototype.getPlugin = function (pluginName) {\n        return pluginName ? this._plugins[pluginName] : values(this._plugins);\n    };\n    return UIRouter;\n}());\nexport { UIRouter };\n//# sourceMappingURL=router.js.map","/** @internalapi @module hooks */ /** */\nimport { Transition } from '../transition/transition';\nimport { UIRouter } from '../router';\nimport { Resolvable } from '../resolve';\nimport { inArray, uniqR, unnestR, values } from '../common';\nfunction addCoreResolvables(trans) {\n    trans.addResolvable(Resolvable.fromData(UIRouter, trans.router), '');\n    trans.addResolvable(Resolvable.fromData(Transition, trans), '');\n    trans.addResolvable(Resolvable.fromData('$transition$', trans), '');\n    trans.addResolvable(Resolvable.fromData('$stateParams', trans.params()), '');\n    trans.entering().forEach(function (state) {\n        trans.addResolvable(Resolvable.fromData('$state$', state), state);\n    });\n}\nexport var registerAddCoreResolvables = function (transitionService) {\n    return transitionService.onCreate({}, addCoreResolvables);\n};\nvar TRANSITION_TOKENS = ['$transition$', Transition];\nvar isTransition = inArray(TRANSITION_TOKENS);\n// References to Transition in the treeChanges pathnodes makes all\n// previous Transitions reachable in memory, causing a memory leak\n// This function removes resolves for '$transition$' and `Transition` from the treeChanges.\n// Do not use this on current transitions, only on old ones.\nexport var treeChangesCleanup = function (trans) {\n    var nodes = values(trans.treeChanges())\n        .reduce(unnestR, [])\n        .reduce(uniqR, []);\n    // If the resolvable is a Transition, return a new resolvable with null data\n    var replaceTransitionWithNull = function (r) {\n        return isTransition(r.token) ? Resolvable.fromData(r.token, null) : r;\n    };\n    nodes.forEach(function (node) {\n        node.resolvables = node.resolvables.map(replaceTransitionWithNull);\n    });\n};\n//# sourceMappingURL=coreResolvables.js.map","/** @internalapi @module hooks */ /** */\nimport { isString, isFunction } from '../common/predicates';\nimport { services } from '../common/coreservices';\nimport { TargetState } from '../state/targetState';\n/**\n * A [[TransitionHookFn]] that redirects to a different state or params\n *\n * Registered using `transitionService.onStart({ to: (state) => !!state.redirectTo }, redirectHook);`\n *\n * See [[StateDeclaration.redirectTo]]\n */\nvar redirectToHook = function (trans) {\n    var redirect = trans.to().redirectTo;\n    if (!redirect)\n        return;\n    var $state = trans.router.stateService;\n    function handleResult(result) {\n        if (!result)\n            return;\n        if (result instanceof TargetState)\n            return result;\n        if (isString(result))\n            return $state.target(result, trans.params(), trans.options());\n        if (result['state'] || result['params'])\n            return $state.target(result['state'] || trans.to(), result['params'] || trans.params(), trans.options());\n    }\n    if (isFunction(redirect)) {\n        return services.$q.when(redirect(trans)).then(handleResult);\n    }\n    return handleResult(redirect);\n};\nexport var registerRedirectToHook = function (transitionService) {\n    return transitionService.onStart({ to: function (state) { return !!state.redirectTo; } }, redirectToHook);\n};\n//# sourceMappingURL=redirectTo.js.map","/**\n * A factory which creates an onEnter, onExit or onRetain transition hook function\n *\n * The returned function invokes the (for instance) state.onEnter hook when the\n * state is being entered.\n *\n * @hidden\n */\nfunction makeEnterExitRetainHook(hookName) {\n    return function (transition, state) {\n        var _state = state.$$state();\n        var hookFn = _state[hookName];\n        return hookFn(transition, state);\n    };\n}\n/**\n * The [[TransitionStateHookFn]] for onExit\n *\n * When the state is being exited, the state's .onExit function is invoked.\n *\n * Registered using `transitionService.onExit({ exiting: (state) => !!state.onExit }, onExitHook);`\n *\n * See: [[IHookRegistry.onExit]]\n */\nvar onExitHook = makeEnterExitRetainHook('onExit');\nexport var registerOnExitHook = function (transitionService) {\n    return transitionService.onExit({ exiting: function (state) { return !!state.onExit; } }, onExitHook);\n};\n/**\n * The [[TransitionStateHookFn]] for onRetain\n *\n * When the state was already entered, and is not being exited or re-entered, the state's .onRetain function is invoked.\n *\n * Registered using `transitionService.onRetain({ retained: (state) => !!state.onRetain }, onRetainHook);`\n *\n * See: [[IHookRegistry.onRetain]]\n */\nvar onRetainHook = makeEnterExitRetainHook('onRetain');\nexport var registerOnRetainHook = function (transitionService) {\n    return transitionService.onRetain({ retained: function (state) { return !!state.onRetain; } }, onRetainHook);\n};\n/**\n * The [[TransitionStateHookFn]] for onEnter\n *\n * When the state is being entered, the state's .onEnter function is invoked.\n *\n * Registered using `transitionService.onEnter({ entering: (state) => !!state.onEnter }, onEnterHook);`\n *\n * See: [[IHookRegistry.onEnter]]\n */\nvar onEnterHook = makeEnterExitRetainHook('onEnter');\nexport var registerOnEnterHook = function (transitionService) {\n    return transitionService.onEnter({ entering: function (state) { return !!state.onEnter; } }, onEnterHook);\n};\n//# sourceMappingURL=onEnterExitRetain.js.map","/** @internalapi @module hooks */ /** */\nimport { noop } from '../common/common';\nimport { ResolveContext } from '../resolve/resolveContext';\nimport { val } from '../common/hof';\nexport var RESOLVE_HOOK_PRIORITY = 1000;\n/**\n * A [[TransitionHookFn]] which resolves all EAGER Resolvables in the To Path\n *\n * Registered using `transitionService.onStart({}, eagerResolvePath, { priority: 1000 });`\n *\n * When a Transition starts, this hook resolves all the EAGER Resolvables, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nvar eagerResolvePath = function (trans) {\n    return new ResolveContext(trans.treeChanges().to).resolvePath('EAGER', trans).then(noop);\n};\nexport var registerEagerResolvePath = function (transitionService) {\n    return transitionService.onStart({}, eagerResolvePath, { priority: RESOLVE_HOOK_PRIORITY });\n};\n/**\n * A [[TransitionHookFn]] which resolves all LAZY Resolvables for the state (and all its ancestors) in the To Path\n *\n * Registered using `transitionService.onEnter({ entering: () => true }, lazyResolveState, { priority: 1000 });`\n *\n * When a State is being entered, this hook resolves all the Resolvables for this state, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nvar lazyResolveState = function (trans, state) {\n    return new ResolveContext(trans.treeChanges().to)\n        .subContext(state.$$state())\n        .resolvePath('LAZY', trans)\n        .then(noop);\n};\nexport var registerLazyResolveState = function (transitionService) {\n    return transitionService.onEnter({ entering: val(true) }, lazyResolveState, { priority: RESOLVE_HOOK_PRIORITY });\n};\n/**\n * A [[TransitionHookFn]] which resolves any dynamically added (LAZY or EAGER) Resolvables.\n *\n * Registered using `transitionService.onFinish({}, eagerResolvePath, { priority: 1000 });`\n *\n * After all entering states have been entered, this hook resolves any remaining Resolvables.\n * These are typically dynamic resolves which were added by some Transition Hook using [[Transition.addResolvable]].\n *\n * See [[StateDeclaration.resolve]]\n */\nvar resolveRemaining = function (trans) {\n    return new ResolveContext(trans.treeChanges().to).resolvePath('LAZY', trans).then(noop);\n};\nexport var registerResolveRemaining = function (transitionService) {\n    return transitionService.onFinish({}, resolveRemaining, { priority: RESOLVE_HOOK_PRIORITY });\n};\n//# sourceMappingURL=resolve.js.map","/** @internalapi @module hooks */ /** */\nimport { noop } from '../common/common';\nimport { services } from '../common/coreservices';\n/**\n * A [[TransitionHookFn]] which waits for the views to load\n *\n * Registered using `transitionService.onStart({}, loadEnteringViews);`\n *\n * Allows the views to do async work in [[ViewConfig.load]] before the transition continues.\n * In angular 1, this includes loading the templates.\n */\nvar loadEnteringViews = function (transition) {\n    var $q = services.$q;\n    var enteringViews = transition.views('entering');\n    if (!enteringViews.length)\n        return;\n    return $q.all(enteringViews.map(function (view) { return $q.when(view.load()); })).then(noop);\n};\nexport var registerLoadEnteringViews = function (transitionService) {\n    return transitionService.onFinish({}, loadEnteringViews);\n};\n/**\n * A [[TransitionHookFn]] which activates the new views when a transition is successful.\n *\n * Registered using `transitionService.onSuccess({}, activateViews);`\n *\n * After a transition is complete, this hook deactivates the old views from the previous state,\n * and activates the new views from the destination state.\n *\n * See [[ViewService]]\n */\nvar activateViews = function (transition) {\n    var enteringViews = transition.views('entering');\n    var exitingViews = transition.views('exiting');\n    if (!enteringViews.length && !exitingViews.length)\n        return;\n    var $view = transition.router.viewService;\n    exitingViews.forEach(function (vc) { return $view.deactivateViewConfig(vc); });\n    enteringViews.forEach(function (vc) { return $view.activateViewConfig(vc); });\n    $view.sync();\n};\nexport var registerActivateViews = function (transitionService) {\n    return transitionService.onSuccess({}, activateViews);\n};\n//# sourceMappingURL=views.js.map","import { copy } from '../common/common';\n/**\n * A [[TransitionHookFn]] which updates global UI-Router state\n *\n * Registered using `transitionService.onBefore({}, updateGlobalState);`\n *\n * Before a [[Transition]] starts, updates the global value of \"the current transition\" ([[Globals.transition]]).\n * After a successful [[Transition]], updates the global values of \"the current state\"\n * ([[Globals.current]] and [[Globals.$current]]) and \"the current param values\" ([[Globals.params]]).\n *\n * See also the deprecated properties:\n * [[StateService.transition]], [[StateService.current]], [[StateService.params]]\n */\nvar updateGlobalState = function (trans) {\n    var globals = trans.router.globals;\n    var transitionSuccessful = function () {\n        globals.successfulTransitions.enqueue(trans);\n        globals.$current = trans.$to();\n        globals.current = globals.$current.self;\n        copy(trans.params(), globals.params);\n    };\n    var clearCurrentTransition = function () {\n        // Do not clear globals.transition if a different transition has started in the meantime\n        if (globals.transition === trans)\n            globals.transition = null;\n    };\n    trans.onSuccess({}, transitionSuccessful, { priority: 10000 });\n    trans.promise.then(clearCurrentTransition, clearCurrentTransition);\n};\nexport var registerUpdateGlobalState = function (transitionService) {\n    return transitionService.onCreate({}, updateGlobalState);\n};\n//# sourceMappingURL=updateGlobals.js.map","/**\n * A [[TransitionHookFn]] which updates the URL after a successful transition\n *\n * Registered using `transitionService.onSuccess({}, updateUrl);`\n */\nvar updateUrl = function (transition) {\n    var options = transition.options();\n    var $state = transition.router.stateService;\n    var $urlRouter = transition.router.urlRouter;\n    // Dont update the url in these situations:\n    // The transition was triggered by a URL sync (options.source === 'url')\n    // The user doesn't want the url to update (options.location === false)\n    // The destination state, and all parents have no navigable url\n    if (options.source !== 'url' && options.location && $state.$current.navigable) {\n        var urlOptions = { replace: options.location === 'replace' };\n        $urlRouter.push($state.$current.navigable.url, $state.params, urlOptions);\n    }\n    $urlRouter.update(true);\n};\nexport var registerUpdateUrl = function (transitionService) {\n    return transitionService.onSuccess({}, updateUrl, { priority: 9999 });\n};\n//# sourceMappingURL=url.js.map","import { services } from '../common/coreservices';\n/**\n * A [[TransitionHookFn]] that performs lazy loading\n *\n * When entering a state \"abc\" which has a `lazyLoad` function defined:\n * - Invoke the `lazyLoad` function (unless it is already in process)\n *   - Flag the hook function as \"in process\"\n *   - The function should return a promise (that resolves when lazy loading is complete)\n * - Wait for the promise to settle\n *   - If the promise resolves to a [[LazyLoadResult]], then register those states\n *   - Flag the hook function as \"not in process\"\n * - If the hook was successful\n *   - Remove the `lazyLoad` function from the state declaration\n * - If all the hooks were successful\n *   - Retry the transition (by returning a TargetState)\n *\n * ```\n * .state('abc', {\n *   component: 'fooComponent',\n *   lazyLoad: () => System.import('./fooComponent')\n *   });\n * ```\n *\n * See [[StateDeclaration.lazyLoad]]\n */\nvar lazyLoadHook = function (transition) {\n    var router = transition.router;\n    function retryTransition() {\n        if (transition.originalTransition().options().source !== 'url') {\n            // The original transition was not triggered via url sync\n            // The lazy state should be loaded now, so re-try the original transition\n            var orig = transition.targetState();\n            return router.stateService.target(orig.identifier(), orig.params(), orig.options());\n        }\n        // The original transition was triggered via url sync\n        // Run the URL rules and find the best match\n        var $url = router.urlService;\n        var result = $url.match($url.parts());\n        var rule = result && result.rule;\n        // If the best match is a state, redirect the transition (instead\n        // of calling sync() which supersedes the current transition)\n        if (rule && rule.type === 'STATE') {\n            var state = rule.state;\n            var params = result.match;\n            return router.stateService.target(state, params, transition.options());\n        }\n        // No matching state found, so let .sync() choose the best non-state match/otherwise\n        router.urlService.sync();\n    }\n    var promises = transition\n        .entering()\n        .filter(function (state) { return !!state.$$state().lazyLoad; })\n        .map(function (state) { return lazyLoadState(transition, state); });\n    return services.$q.all(promises).then(retryTransition);\n};\nexport var registerLazyLoadHook = function (transitionService) {\n    return transitionService.onBefore({ entering: function (state) { return !!state.lazyLoad; } }, lazyLoadHook);\n};\n/**\n * Invokes a state's lazy load function\n *\n * @param transition a Transition context\n * @param state the state to lazy load\n * @returns A promise for the lazy load result\n */\nexport function lazyLoadState(transition, state) {\n    var lazyLoadFn = state.$$state().lazyLoad;\n    // Store/get the lazy load promise on/from the hookfn so it doesn't get re-invoked\n    var promise = lazyLoadFn['_promise'];\n    if (!promise) {\n        var success = function (result) {\n            delete state.lazyLoad;\n            delete state.$$state().lazyLoad;\n            delete lazyLoadFn['_promise'];\n            return result;\n        };\n        var error = function (err) {\n            delete lazyLoadFn['_promise'];\n            return services.$q.reject(err);\n        };\n        promise = lazyLoadFn['_promise'] = services.$q\n            .when(lazyLoadFn(transition, state))\n            .then(updateStateRegistry)\n            .then(success, error);\n    }\n    /** Register any lazy loaded state definitions */\n    function updateStateRegistry(result) {\n        if (result && Array.isArray(result.states)) {\n            result.states.forEach(function (_state) { return transition.router.stateRegistry.register(_state); });\n        }\n        return result;\n    }\n    return promise;\n}\n//# sourceMappingURL=lazyLoad.js.map","import { TransitionHook } from './transitionHook';\n/**\n * This class defines a type of hook, such as `onBefore` or `onEnter`.\n * Plugins can define custom hook types, such as sticky states does for `onInactive`.\n *\n * @interalapi\n */\nvar TransitionEventType = /** @class */ (function () {\n    /* tslint:disable:no-inferrable-types */\n    function TransitionEventType(name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous) {\n        if (reverseSort === void 0) { reverseSort = false; }\n        if (getResultHandler === void 0) { getResultHandler = TransitionHook.HANDLE_RESULT; }\n        if (getErrorHandler === void 0) { getErrorHandler = TransitionHook.REJECT_ERROR; }\n        if (synchronous === void 0) { synchronous = false; }\n        this.name = name;\n        this.hookPhase = hookPhase;\n        this.hookOrder = hookOrder;\n        this.criteriaMatchPath = criteriaMatchPath;\n        this.reverseSort = reverseSort;\n        this.getResultHandler = getResultHandler;\n        this.getErrorHandler = getErrorHandler;\n        this.synchronous = synchronous;\n    }\n    return TransitionEventType;\n}());\nexport { TransitionEventType };\n//# sourceMappingURL=transitionEventType.js.map","/** @internalapi @module hooks */ /** */\nimport { trace } from '../common/trace';\nimport { Rejection } from '../transition/rejectFactory';\n/**\n * A [[TransitionHookFn]] that skips a transition if it should be ignored\n *\n * This hook is invoked at the end of the onBefore phase.\n *\n * If the transition should be ignored (because no parameter or states changed)\n * then the transition is ignored and not processed.\n */\nfunction ignoredHook(trans) {\n    var ignoredReason = trans._ignoredReason();\n    if (!ignoredReason)\n        return;\n    trace.traceTransitionIgnored(trans);\n    var pending = trans.router.globals.transition;\n    // The user clicked a link going back to the *current state* ('A')\n    // However, there is also a pending transition in flight (to 'B')\n    // Abort the transition to 'B' because the user now wants to be back at 'A'.\n    if (ignoredReason === 'SameAsCurrent' && pending) {\n        pending.abort();\n    }\n    return Rejection.ignored().toPromise();\n}\nexport var registerIgnoredTransitionHook = function (transitionService) {\n    return transitionService.onBefore({}, ignoredHook, { priority: -9999 });\n};\n//# sourceMappingURL=ignoredTransition.js.map","/** @internalapi @module hooks */ /** */\n/**\n * A [[TransitionHookFn]] that rejects the Transition if it is invalid\n *\n * This hook is invoked at the end of the onBefore phase.\n * If the transition is invalid (for example, param values do not validate)\n * then the transition is rejected.\n */\nfunction invalidTransitionHook(trans) {\n    if (!trans.valid()) {\n        throw new Error(trans.error().toString());\n    }\n}\nexport var registerInvalidTransitionHook = function (transitionService) {\n    return transitionService.onBefore({}, invalidTransitionHook, { priority: -10000 });\n};\n//# sourceMappingURL=invalidTransition.js.map","/** @publicapi @module transition */ /** */\nimport { TransitionHookScope, TransitionHookPhase, } from './interface';\nimport { Transition } from './transition';\nimport { makeEvent } from './hookRegistry';\nimport { registerAddCoreResolvables, treeChangesCleanup } from '../hooks/coreResolvables';\nimport { registerRedirectToHook } from '../hooks/redirectTo';\nimport { registerOnExitHook, registerOnRetainHook, registerOnEnterHook } from '../hooks/onEnterExitRetain';\nimport { registerEagerResolvePath, registerLazyResolveState, registerResolveRemaining } from '../hooks/resolve';\nimport { registerLoadEnteringViews, registerActivateViews } from '../hooks/views';\nimport { registerUpdateGlobalState } from '../hooks/updateGlobals';\nimport { registerUpdateUrl } from '../hooks/url';\nimport { registerLazyLoadHook } from '../hooks/lazyLoad';\nimport { TransitionEventType } from './transitionEventType';\nimport { TransitionHook } from './transitionHook';\nimport { isDefined } from '../common/predicates';\nimport { removeFrom, values, createProxyFunctions } from '../common/common';\nimport { val } from '../common/hof';\nimport { registerIgnoredTransitionHook } from '../hooks/ignoredTransition';\nimport { registerInvalidTransitionHook } from '../hooks/invalidTransition';\n/**\n * The default [[Transition]] options.\n *\n * Include this object when applying custom defaults:\n * let reloadOpts = { reload: true, notify: true }\n * let options = defaults(theirOpts, customDefaults, defaultOptions);\n */\nexport var defaultTransOpts = {\n    location: true,\n    relative: null,\n    inherit: false,\n    notify: true,\n    reload: false,\n    custom: {},\n    current: function () { return null; },\n    source: 'unknown',\n};\n/**\n * This class provides services related to Transitions.\n *\n * - Most importantly, it allows global Transition Hooks to be registered.\n * - It allows the default transition error handler to be set.\n * - It also has a factory function for creating new [[Transition]] objects, (used internally by the [[StateService]]).\n *\n * At bootstrap, [[UIRouter]] creates a single instance (singleton) of this class.\n */\nvar TransitionService = /** @class */ (function () {\n    /** @hidden */\n    function TransitionService(_router) {\n        /** @hidden */\n        this._transitionCount = 0;\n        /** @hidden The transition hook types, such as `onEnter`, `onStart`, etc */\n        this._eventTypes = [];\n        /** @hidden The registered transition hooks */\n        this._registeredHooks = {};\n        /** @hidden The  paths on a criteria object */\n        this._criteriaPaths = {};\n        this._router = _router;\n        this.$view = _router.viewService;\n        this._deregisterHookFns = {};\n        this._pluginapi = (createProxyFunctions(val(this), {}, val(this), [\n            '_definePathType',\n            '_defineEvent',\n            '_getPathTypes',\n            '_getEvents',\n            'getHooks',\n        ]));\n        this._defineCorePaths();\n        this._defineCoreEvents();\n        this._registerCoreTransitionHooks();\n        _router.globals.successfulTransitions.onEvict(treeChangesCleanup);\n    }\n    /**\n     * Registers a [[TransitionHookFn]], called *while a transition is being constructed*.\n     *\n     * Registers a transition lifecycle hook, which is invoked during transition construction.\n     *\n     * This low level hook should only be used by plugins.\n     * This can be a useful time for plugins to add resolves or mutate the transition as needed.\n     * The Sticky States plugin uses this hook to modify the treechanges.\n     *\n     * ### Lifecycle\n     *\n     * `onCreate` hooks are invoked *while a transition is being constructed*.\n     *\n     * ### Return value\n     *\n     * The hook's return value is ignored\n     *\n     * @internalapi\n     * @param criteria defines which Transitions the Hook should be invoked for.\n     * @param callback the hook function which will be invoked.\n     * @param options the registration options\n     * @returns a function which deregisters the hook.\n     */\n    TransitionService.prototype.onCreate = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onBefore = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onStart = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onExit = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onRetain = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onEnter = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onFinish = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onSuccess = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onError = function (criteria, callback, options) {\n        return;\n    };\n    /**\n     * dispose\n     * @internalapi\n     */\n    TransitionService.prototype.dispose = function (router) {\n        values(this._registeredHooks).forEach(function (hooksArray) {\n            return hooksArray.forEach(function (hook) {\n                hook._deregistered = true;\n                removeFrom(hooksArray, hook);\n            });\n        });\n    };\n    /**\n     * Creates a new [[Transition]] object\n     *\n     * This is a factory function for creating new Transition objects.\n     * It is used internally by the [[StateService]] and should generally not be called by application code.\n     *\n     * @param fromPath the path to the current state (the from state)\n     * @param targetState the target state (destination)\n     * @returns a Transition\n     */\n    TransitionService.prototype.create = function (fromPath, targetState) {\n        return new Transition(fromPath, targetState, this._router);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineCoreEvents = function () {\n        var Phase = TransitionHookPhase;\n        var TH = TransitionHook;\n        var paths = this._criteriaPaths;\n        var NORMAL_SORT = false, REVERSE_SORT = true;\n        var SYNCHRONOUS = true;\n        this._defineEvent('onCreate', Phase.CREATE, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.THROW_ERROR, SYNCHRONOUS);\n        this._defineEvent('onBefore', Phase.BEFORE, 0, paths.to);\n        this._defineEvent('onStart', Phase.RUN, 0, paths.to);\n        this._defineEvent('onExit', Phase.RUN, 100, paths.exiting, REVERSE_SORT);\n        this._defineEvent('onRetain', Phase.RUN, 200, paths.retained);\n        this._defineEvent('onEnter', Phase.RUN, 300, paths.entering);\n        this._defineEvent('onFinish', Phase.RUN, 400, paths.to);\n        this._defineEvent('onSuccess', Phase.SUCCESS, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.LOG_ERROR, SYNCHRONOUS);\n        this._defineEvent('onError', Phase.ERROR, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.LOG_ERROR, SYNCHRONOUS);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineCorePaths = function () {\n        var STATE = TransitionHookScope.STATE, TRANSITION = TransitionHookScope.TRANSITION;\n        this._definePathType('to', TRANSITION);\n        this._definePathType('from', TRANSITION);\n        this._definePathType('exiting', STATE);\n        this._definePathType('retained', STATE);\n        this._definePathType('entering', STATE);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineEvent = function (name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous) {\n        if (reverseSort === void 0) { reverseSort = false; }\n        if (getResultHandler === void 0) { getResultHandler = TransitionHook.HANDLE_RESULT; }\n        if (getErrorHandler === void 0) { getErrorHandler = TransitionHook.REJECT_ERROR; }\n        if (synchronous === void 0) { synchronous = false; }\n        var eventType = new TransitionEventType(name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous);\n        this._eventTypes.push(eventType);\n        makeEvent(this, this, eventType);\n    };\n    /** @hidden */\n    // tslint:disable-next-line\n    TransitionService.prototype._getEvents = function (phase) {\n        var transitionHookTypes = isDefined(phase)\n            ? this._eventTypes.filter(function (type) { return type.hookPhase === phase; })\n            : this._eventTypes.slice();\n        return transitionHookTypes.sort(function (l, r) {\n            var cmpByPhase = l.hookPhase - r.hookPhase;\n            return cmpByPhase === 0 ? l.hookOrder - r.hookOrder : cmpByPhase;\n        });\n    };\n    /**\n     * Adds a Path to be used as a criterion against a TreeChanges path\n     *\n     * For example: the `exiting` path in [[HookMatchCriteria]] is a STATE scoped path.\n     * It was defined by calling `defineTreeChangesCriterion('exiting', TransitionHookScope.STATE)`\n     * Each state in the exiting path is checked against the criteria and returned as part of the match.\n     *\n     * Another example: the `to` path in [[HookMatchCriteria]] is a TRANSITION scoped path.\n     * It was defined by calling `defineTreeChangesCriterion('to', TransitionHookScope.TRANSITION)`\n     * Only the tail of the `to` path is checked against the criteria and returned as part of the match.\n     *\n     * @hidden\n     */\n    TransitionService.prototype._definePathType = function (name, hookScope) {\n        this._criteriaPaths[name] = { name: name, scope: hookScope };\n    };\n    /** * @hidden */\n    // tslint:disable-next-line\n    TransitionService.prototype._getPathTypes = function () {\n        return this._criteriaPaths;\n    };\n    /** @hidden */\n    TransitionService.prototype.getHooks = function (hookName) {\n        return this._registeredHooks[hookName];\n    };\n    /** @hidden */\n    TransitionService.prototype._registerCoreTransitionHooks = function () {\n        var fns = this._deregisterHookFns;\n        fns.addCoreResolves = registerAddCoreResolvables(this);\n        fns.ignored = registerIgnoredTransitionHook(this);\n        fns.invalid = registerInvalidTransitionHook(this);\n        // Wire up redirectTo hook\n        fns.redirectTo = registerRedirectToHook(this);\n        // Wire up onExit/Retain/Enter state hooks\n        fns.onExit = registerOnExitHook(this);\n        fns.onRetain = registerOnRetainHook(this);\n        fns.onEnter = registerOnEnterHook(this);\n        // Wire up Resolve hooks\n        fns.eagerResolve = registerEagerResolvePath(this);\n        fns.lazyResolve = registerLazyResolveState(this);\n        fns.resolveAll = registerResolveRemaining(this);\n        // Wire up the View management hooks\n        fns.loadViews = registerLoadEnteringViews(this);\n        fns.activateViews = registerActivateViews(this);\n        // Updates global state after a transition\n        fns.updateGlobals = registerUpdateGlobalState(this);\n        // After globals.current is updated at priority: 10000\n        fns.updateUrl = registerUpdateUrl(this);\n        // Lazy load state trees\n        fns.lazyLoad = registerLazyLoadHook(this);\n    };\n    return TransitionService;\n}());\nexport { TransitionService };\n//# sourceMappingURL=transitionService.js.map","/** @publicapi @module state */ /** */\nimport { createProxyFunctions, defaults, extend, inArray, noop, removeFrom, silenceUncaughtInPromise, silentRejection, } from '../common/common';\nimport { isDefined, isObject, isString } from '../common/predicates';\nimport { Queue } from '../common/queue';\nimport { services } from '../common/coreservices';\nimport { PathUtils } from '../path/pathUtils';\nimport { PathNode } from '../path/pathNode';\nimport { defaultTransOpts } from '../transition/transitionService';\nimport { Rejection, RejectType } from '../transition/rejectFactory';\nimport { TargetState } from './targetState';\nimport { Param } from '../params/param';\nimport { Glob } from '../common/glob';\nimport { ResolveContext } from '../resolve/resolveContext';\nimport { lazyLoadState } from '../hooks/lazyLoad';\nimport { not, val } from '../common/hof';\n/**\n * Provides state related service functions\n *\n * This class provides services related to ui-router states.\n * An instance of this class is located on the global [[UIRouter]] object.\n */\nvar StateService = /** @class */ (function () {\n    /** @internalapi */\n    function StateService(/** @hidden */ router) {\n        this.router = router;\n        /** @internalapi */\n        this.invalidCallbacks = [];\n        /** @hidden */\n        this._defaultErrorHandler = function $defaultErrorHandler($error$) {\n            if ($error$ instanceof Error && $error$.stack) {\n                console.error($error$);\n                console.error($error$.stack);\n            }\n            else if ($error$ instanceof Rejection) {\n                console.error($error$.toString());\n                if ($error$.detail && $error$.detail.stack)\n                    console.error($error$.detail.stack);\n            }\n            else {\n                console.error($error$);\n            }\n        };\n        var getters = ['current', '$current', 'params', 'transition'];\n        var boundFns = Object.keys(StateService.prototype).filter(not(inArray(getters)));\n        createProxyFunctions(val(StateService.prototype), this, val(this), boundFns);\n    }\n    Object.defineProperty(StateService.prototype, \"transition\", {\n        /**\n         * The [[Transition]] currently in progress (or null)\n         *\n         * This is a passthrough through to [[UIRouterGlobals.transition]]\n         */\n        get: function () {\n            return this.router.globals.transition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"params\", {\n        /**\n         * The latest successful state parameters\n         *\n         * This is a passthrough through to [[UIRouterGlobals.params]]\n         */\n        get: function () {\n            return this.router.globals.params;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"current\", {\n        /**\n         * The current [[StateDeclaration]]\n         *\n         * This is a passthrough through to [[UIRouterGlobals.current]]\n         */\n        get: function () {\n            return this.router.globals.current;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"$current\", {\n        /**\n         * The current [[StateObject]]\n         *\n         * This is a passthrough through to [[UIRouterGlobals.$current]]\n         */\n        get: function () {\n            return this.router.globals.$current;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internalapi */\n    StateService.prototype.dispose = function () {\n        this.defaultErrorHandler(noop);\n        this.invalidCallbacks = [];\n    };\n    /**\n     * Handler for when [[transitionTo]] is called with an invalid state.\n     *\n     * Invokes the [[onInvalid]] callbacks, in natural order.\n     * Each callback's return value is checked in sequence until one of them returns an instance of TargetState.\n     * The results of the callbacks are wrapped in $q.when(), so the callbacks may return promises.\n     *\n     * If a callback returns an TargetState, then it is used as arguments to $state.transitionTo() and the result returned.\n     *\n     * @internalapi\n     */\n    StateService.prototype._handleInvalidTargetState = function (fromPath, toState) {\n        var _this = this;\n        var fromState = PathUtils.makeTargetState(this.router.stateRegistry, fromPath);\n        var globals = this.router.globals;\n        var latestThing = function () { return globals.transitionHistory.peekTail(); };\n        var latest = latestThing();\n        var callbackQueue = new Queue(this.invalidCallbacks.slice());\n        var injector = new ResolveContext(fromPath).injector();\n        var checkForRedirect = function (result) {\n            if (!(result instanceof TargetState)) {\n                return;\n            }\n            var target = result;\n            // Recreate the TargetState, in case the state is now defined.\n            target = _this.target(target.identifier(), target.params(), target.options());\n            if (!target.valid()) {\n                return Rejection.invalid(target.error()).toPromise();\n            }\n            if (latestThing() !== latest) {\n                return Rejection.superseded().toPromise();\n            }\n            return _this.transitionTo(target.identifier(), target.params(), target.options());\n        };\n        function invokeNextCallback() {\n            var nextCallback = callbackQueue.dequeue();\n            if (nextCallback === undefined)\n                return Rejection.invalid(toState.error()).toPromise();\n            var callbackResult = services.$q.when(nextCallback(toState, fromState, injector));\n            return callbackResult.then(checkForRedirect).then(function (result) { return result || invokeNextCallback(); });\n        }\n        return invokeNextCallback();\n    };\n    /**\n     * Registers an Invalid State handler\n     *\n     * Registers a [[OnInvalidCallback]] function to be invoked when [[StateService.transitionTo]]\n     * has been called with an invalid state reference parameter\n     *\n     * Example:\n     * ```js\n     * stateService.onInvalid(function(to, from, injector) {\n     *   if (to.name() === 'foo') {\n     *     let lazyLoader = injector.get('LazyLoadService');\n     *     return lazyLoader.load('foo')\n     *         .then(() => stateService.target('foo'));\n     *   }\n     * });\n     * ```\n     *\n     * @param {function} callback invoked when the toState is invalid\n     *   This function receives the (invalid) toState, the fromState, and an injector.\n     *   The function may optionally return a [[TargetState]] or a Promise for a TargetState.\n     *   If one is returned, it is treated as a redirect.\n     *\n     * @returns a function which deregisters the callback\n     */\n    StateService.prototype.onInvalid = function (callback) {\n        this.invalidCallbacks.push(callback);\n        return function deregisterListener() {\n            removeFrom(this.invalidCallbacks)(callback);\n        }.bind(this);\n    };\n    /**\n     * Reloads the current state\n     *\n     * A method that force reloads the current state, or a partial state hierarchy.\n     * All resolves are re-resolved, and components reinstantiated.\n     *\n     * #### Example:\n     * ```js\n     * let app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     $state.reload();\n     *   }\n     * });\n     * ```\n     *\n     * Note: `reload()` is just an alias for:\n     *\n     * ```js\n     * $state.transitionTo($state.current, $state.params, {\n     *   reload: true, inherit: false\n     * });\n     * ```\n     *\n     * @param reloadState A state name or a state object.\n     *    If present, this state and all its children will be reloaded, but ancestors will not reload.\n     *\n     * #### Example:\n     * ```js\n     * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item'\n     * //and current state is 'contacts.detail.item'\n     * let app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     //will reload 'contact.detail' and nested 'contact.detail.item' states\n     *     $state.reload('contact.detail');\n     *   }\n     * });\n     * ```\n     *\n     * @returns A promise representing the state of the new transition. See [[StateService.go]]\n     */\n    StateService.prototype.reload = function (reloadState) {\n        return this.transitionTo(this.current, this.params, {\n            reload: isDefined(reloadState) ? reloadState : true,\n            inherit: false,\n            notify: false,\n        });\n    };\n    /**\n     * Transition to a different state and/or parameters\n     *\n     * Convenience method for transitioning to a new state.\n     *\n     * `$state.go` calls `$state.transitionTo` internally but automatically sets options to\n     * `{ location: true, inherit: true, relative: router.globals.$current, notify: true }`.\n     * This allows you to use either an absolute or relative `to` argument (because of `relative: router.globals.$current`).\n     * It also allows you to specify * only the parameters you'd like to update, while letting unspecified parameters\n     * inherit from the current parameter values (because of `inherit: true`).\n     *\n     * #### Example:\n     * ```js\n     * let app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.go('contact.detail');\n     *   };\n     * });\n     * ```\n     *\n     * @param to Absolute state name, state object, or relative state path (relative to current state).\n     *\n     * Some examples:\n     *\n     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n     * - `$state.go('^')` - will go to the parent state\n     * - `$state.go('^.sibling')` - if current state is `home.child`, will go to the `home.sibling` state\n     * - `$state.go('.child.grandchild')` - if current state is home, will go to the `home.child.grandchild` state\n     *\n     * @param params A map of the parameters that will be sent to the state, will populate $stateParams.\n     *\n     *    Any parameters that are not specified will be inherited from current parameter values (because of `inherit: true`).\n     *    This allows, for example, going to a sibling state that shares parameters defined by a parent state.\n     *\n     * @param options Transition options\n     *\n     * @returns {promise} A promise representing the state of the new transition.\n     */\n    StateService.prototype.go = function (to, params, options) {\n        var defautGoOpts = { relative: this.$current, inherit: true };\n        var transOpts = defaults(options, defautGoOpts, defaultTransOpts);\n        return this.transitionTo(to, params, transOpts);\n    };\n    /**\n     * Creates a [[TargetState]]\n     *\n     * This is a factory method for creating a TargetState\n     *\n     * This may be returned from a Transition Hook to redirect a transition, for example.\n     */\n    StateService.prototype.target = function (identifier, params, options) {\n        if (options === void 0) { options = {}; }\n        // If we're reloading, find the state object to reload from\n        if (isObject(options.reload) && !options.reload.name)\n            throw new Error('Invalid reload state object');\n        var reg = this.router.stateRegistry;\n        options.reloadState =\n            options.reload === true ? reg.root() : reg.matcher.find(options.reload, options.relative);\n        if (options.reload && !options.reloadState)\n            throw new Error(\"No such reload state '\" + (isString(options.reload) ? options.reload : options.reload.name) + \"'\");\n        return new TargetState(this.router.stateRegistry, identifier, params, options);\n    };\n    StateService.prototype.getCurrentPath = function () {\n        var _this = this;\n        var globals = this.router.globals;\n        var latestSuccess = globals.successfulTransitions.peekTail();\n        var rootPath = function () { return [new PathNode(_this.router.stateRegistry.root())]; };\n        return latestSuccess ? latestSuccess.treeChanges().to : rootPath();\n    };\n    /**\n     * Low-level method for transitioning to a new state.\n     *\n     * The [[go]] method (which uses `transitionTo` internally) is recommended in most situations.\n     *\n     * #### Example:\n     * ```js\n     * let app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.transitionTo('contact.detail');\n     *   };\n     * });\n     * ```\n     *\n     * @param to State name or state object.\n     * @param toParams A map of the parameters that will be sent to the state,\n     *      will populate $stateParams.\n     * @param options Transition options\n     *\n     * @returns A promise representing the state of the new transition. See [[go]]\n     */\n    StateService.prototype.transitionTo = function (to, toParams, options) {\n        var _this = this;\n        if (toParams === void 0) { toParams = {}; }\n        if (options === void 0) { options = {}; }\n        var router = this.router;\n        var globals = router.globals;\n        options = defaults(options, defaultTransOpts);\n        var getCurrent = function () { return globals.transition; };\n        options = extend(options, { current: getCurrent });\n        var ref = this.target(to, toParams, options);\n        var currentPath = this.getCurrentPath();\n        if (!ref.exists())\n            return this._handleInvalidTargetState(currentPath, ref);\n        if (!ref.valid())\n            return silentRejection(ref.error());\n        /**\n         * Special handling for Ignored, Aborted, and Redirected transitions\n         *\n         * The semantics for the transition.run() promise and the StateService.transitionTo()\n         * promise differ. For instance, the run() promise may be rejected because it was\n         * IGNORED, but the transitionTo() promise is resolved because from the user perspective\n         * no error occurred.  Likewise, the transition.run() promise may be rejected because of\n         * a Redirect, but the transitionTo() promise is chained to the new Transition's promise.\n         */\n        var rejectedTransitionHandler = function (trans) { return function (error) {\n            if (error instanceof Rejection) {\n                var isLatest = router.globals.lastStartedTransitionId <= trans.$id;\n                if (error.type === RejectType.IGNORED) {\n                    isLatest && router.urlRouter.update();\n                    // Consider ignored `Transition.run()` as a successful `transitionTo`\n                    return services.$q.when(globals.current);\n                }\n                var detail = error.detail;\n                if (error.type === RejectType.SUPERSEDED && error.redirected && detail instanceof TargetState) {\n                    // If `Transition.run()` was redirected, allow the `transitionTo()` promise to resolve successfully\n                    // by returning the promise for the new (redirect) `Transition.run()`.\n                    var redirect = trans.redirect(detail);\n                    return redirect.run().catch(rejectedTransitionHandler(redirect));\n                }\n                if (error.type === RejectType.ABORTED) {\n                    isLatest && router.urlRouter.update();\n                    return services.$q.reject(error);\n                }\n            }\n            var errorHandler = _this.defaultErrorHandler();\n            errorHandler(error);\n            return services.$q.reject(error);\n        }; };\n        var transition = this.router.transitionService.create(currentPath, ref);\n        var transitionToPromise = transition.run().catch(rejectedTransitionHandler(transition));\n        silenceUncaughtInPromise(transitionToPromise); // issue #2676\n        // Return a promise for the transition, which also has the transition object on it.\n        return extend(transitionToPromise, { transition: transition });\n    };\n    /**\n     * Checks if the current state *is* the provided state\n     *\n     * Similar to [[includes]] but only checks for the full state name.\n     * If params is supplied then it will be tested for strict equality against the current\n     * active params object, so all params must match with none missing and no extras.\n     *\n     * #### Example:\n     * ```js\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // absolute name\n     * $state.is('contact.details.item'); // returns true\n     * $state.is(contactDetailItemStateObject); // returns true\n     * ```\n     *\n     * // relative name (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * ```html\n     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n     * ```\n     *\n     * @param stateOrName The state name (absolute or relative) or state object you'd like to check.\n     * @param params A param object, e.g. `{sectionId: section.id}`, that you'd like\n     * to test against the current active state.\n     * @param options An options object. The options are:\n     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     *     test relative to `options.relative` state (or name).\n     *\n     * @returns Returns true if it is the state.\n     */\n    StateService.prototype.is = function (stateOrName, params, options) {\n        options = defaults(options, { relative: this.$current });\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n        if (!isDefined(state))\n            return undefined;\n        if (this.$current !== state)\n            return false;\n        if (!params)\n            return true;\n        var schema = state.parameters({ inherit: true, matchingKeys: params });\n        return Param.equals(schema, Param.values(schema, params), this.params);\n    };\n    /**\n     * Checks if the current state *includes* the provided state\n     *\n     * A method to determine if the current active state is equal to or is the child of the\n     * state stateName. If any params are passed then they will be tested for a match as well.\n     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n     *\n     * #### Example when `$state.$current.name === 'contacts.details.item'`\n     * ```js\n     * // Using partial names\n     * $state.includes(\"contacts\"); // returns true\n     * $state.includes(\"contacts.details\"); // returns true\n     * $state.includes(\"contacts.details.item\"); // returns true\n     * $state.includes(\"contacts.list\"); // returns false\n     * $state.includes(\"about\"); // returns false\n     * ```\n     *\n     * #### Glob Examples when `* $state.$current.name === 'contacts.details.item.url'`:\n     * ```js\n     * $state.includes(\"*.details.*.*\"); // returns true\n     * $state.includes(\"*.details.**\"); // returns true\n     * $state.includes(\"**.item.**\"); // returns true\n     * $state.includes(\"*.details.item.url\"); // returns true\n     * $state.includes(\"*.details.*.url\"); // returns true\n     * $state.includes(\"*.details.*\"); // returns false\n     * $state.includes(\"item.**\"); // returns false\n     * ```\n     *\n     * @param stateOrName A partial name, relative name, glob pattern,\n     *   or state object to be searched for within the current state name.\n     * @param params A param object, e.g. `{sectionId: section.id}`,\n     *   that you'd like to test against the current active state.\n     * @param options An options object. The options are:\n     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     *     test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it does include the state\n     */\n    StateService.prototype.includes = function (stateOrName, params, options) {\n        options = defaults(options, { relative: this.$current });\n        var glob = isString(stateOrName) && Glob.fromString(stateOrName);\n        if (glob) {\n            if (!glob.matches(this.$current.name))\n                return false;\n            stateOrName = this.$current.name;\n        }\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative), include = this.$current.includes;\n        if (!isDefined(state))\n            return undefined;\n        if (!isDefined(include[state.name]))\n            return false;\n        if (!params)\n            return true;\n        var schema = state.parameters({ inherit: true, matchingKeys: params });\n        return Param.equals(schema, Param.values(schema, params), this.params);\n    };\n    /**\n     * Generates a URL for a state and parameters\n     *\n     * Returns the url for the given state populated with the given params.\n     *\n     * #### Example:\n     * ```js\n     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n     * ```\n     *\n     * @param stateOrName The state name or state object you'd like to generate a url from.\n     * @param params An object of parameter values to fill the state's required parameters.\n     * @param options Options object. The options are:\n     *\n     * @returns {string} compiled state url\n     */\n    StateService.prototype.href = function (stateOrName, params, options) {\n        var defaultHrefOpts = {\n            lossy: true,\n            inherit: true,\n            absolute: false,\n            relative: this.$current,\n        };\n        options = defaults(options, defaultHrefOpts);\n        params = params || {};\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n        if (!isDefined(state))\n            return null;\n        if (options.inherit)\n            params = this.params.$inherit(params, this.$current, state);\n        var nav = state && options.lossy ? state.navigable : state;\n        if (!nav || nav.url === undefined || nav.url === null) {\n            return null;\n        }\n        return this.router.urlRouter.href(nav.url, params, { absolute: options.absolute });\n    };\n    /**\n     * Sets or gets the default [[transitionTo]] error handler.\n     *\n     * The error handler is called when a [[Transition]] is rejected or when any error occurred during the Transition.\n     * This includes errors caused by resolves and transition hooks.\n     *\n     * Note:\n     * This handler does not receive certain Transition rejections.\n     * Redirected and Ignored Transitions are not considered to be errors by [[StateService.transitionTo]].\n     *\n     * The built-in default error handler logs the error to the console.\n     *\n     * You can provide your own custom handler.\n     *\n     * #### Example:\n     * ```js\n     * stateService.defaultErrorHandler(function() {\n     *   // Do not log transitionTo errors\n     * });\n     * ```\n     *\n     * @param handler a global error handler function\n     * @returns the current global error handler\n     */\n    StateService.prototype.defaultErrorHandler = function (handler) {\n        return (this._defaultErrorHandler = handler || this._defaultErrorHandler);\n    };\n    StateService.prototype.get = function (stateOrName, base) {\n        var reg = this.router.stateRegistry;\n        if (arguments.length === 0)\n            return reg.get();\n        return reg.get(stateOrName, base || this.$current);\n    };\n    /**\n     * Lazy loads a state\n     *\n     * Explicitly runs a state's [[StateDeclaration.lazyLoad]] function.\n     *\n     * @param stateOrName the state that should be lazy loaded\n     * @param transition the optional Transition context to use (if the lazyLoad function requires an injector, etc)\n     * Note: If no transition is provided, a noop transition is created using the from the current state to the current state.\n     * This noop transition is not actually run.\n     *\n     * @returns a promise to lazy load\n     */\n    StateService.prototype.lazyLoad = function (stateOrName, transition) {\n        var state = this.get(stateOrName);\n        if (!state || !state.lazyLoad)\n            throw new Error('Can not lazy load ' + stateOrName);\n        var currentPath = this.getCurrentPath();\n        var target = PathUtils.makeTargetState(this.router.stateRegistry, currentPath);\n        transition = transition || this.router.transitionService.create(currentPath, target);\n        return lazyLoadState(transition, state);\n    };\n    return StateService;\n}());\nexport { StateService };\n//# sourceMappingURL=stateService.js.map","/** @internalapi @module vanilla */ /** */\nimport { isArray, isObject } from '../common/index';\n/**\n * An angular1-like promise api\n *\n * This object implements four methods similar to the\n * [angular 1 promise api](https://docs.angularjs.org/api/ng/service/$q)\n *\n * UI-Router evolved from an angular 1 library to a framework agnostic library.\n * However, some of the `@uirouter/core` code uses these ng1 style APIs to support ng1 style dependency injection.\n *\n * This API provides native ES6 promise support wrapped as a $q-like API.\n * Internally, UI-Router uses this $q object to perform promise operations.\n * The `angular-ui-router` (ui-router for angular 1) uses the $q API provided by angular.\n *\n * $q-like promise api\n */\nexport var $q = {\n    /** Normalizes a value as a promise */\n    when: function (val) { return new Promise(function (resolve, reject) { return resolve(val); }); },\n    /** Normalizes a value as a promise rejection */\n    reject: function (val) {\n        return new Promise(function (resolve, reject) {\n            reject(val);\n        });\n    },\n    /** @returns a deferred object, which has `resolve` and `reject` functions */\n    defer: function () {\n        var deferred = {};\n        deferred.promise = new Promise(function (resolve, reject) {\n            deferred.resolve = resolve;\n            deferred.reject = reject;\n        });\n        return deferred;\n    },\n    /** Like Promise.all(), but also supports object key/promise notation like $q */\n    all: function (promises) {\n        if (isArray(promises)) {\n            return Promise.all(promises);\n        }\n        if (isObject(promises)) {\n            // Convert promises map to promises array.\n            // When each promise resolves, map it to a tuple { key: key, val: val }\n            var chain = Object.keys(promises).map(function (key) { return promises[key].then(function (val) { return ({ key: key, val: val }); }); });\n            // Then wait for all promises to resolve, and convert them back to an object\n            return $q.all(chain).then(function (values) {\n                return values.reduce(function (acc, tuple) {\n                    acc[tuple.key] = tuple.val;\n                    return acc;\n                }, {});\n            });\n        }\n    },\n};\n//# sourceMappingURL=q.js.map","/** @internalapi @module vanilla */ /** */\nimport { extend, assertPredicate, isFunction, isArray, isInjectable, } from '../common/index';\n// globally available injectables\nvar globals = {};\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\nvar ARGUMENT_NAMES = /([^\\s,]+)/g;\n/**\n * A basic angular1-like injector api\n *\n * This object implements four methods similar to the\n * [angular 1 dependency injector](https://docs.angularjs.org/api/auto/service/$injector)\n *\n * UI-Router evolved from an angular 1 library to a framework agnostic library.\n * However, some of the `@uirouter/core` code uses these ng1 style APIs to support ng1 style dependency injection.\n *\n * This object provides a naive implementation of a globally scoped dependency injection system.\n * It supports the following DI approaches:\n *\n * ### Function parameter names\n *\n * A function's `.toString()` is called, and the parameter names are parsed.\n * This only works when the parameter names aren't \"mangled\" by a minifier such as UglifyJS.\n *\n * ```js\n * function injectedFunction(FooService, BarService) {\n *   // FooService and BarService are injected\n * }\n * ```\n *\n * ### Function annotation\n *\n * A function may be annotated with an array of dependency names as the `$inject` property.\n *\n * ```js\n * injectedFunction.$inject = [ 'FooService', 'BarService' ];\n * function injectedFunction(fs, bs) {\n *   // FooService and BarService are injected as fs and bs parameters\n * }\n * ```\n *\n * ### Array notation\n *\n * An array provides the names of the dependencies to inject (as strings).\n * The function is the last element of the array.\n *\n * ```js\n * [ 'FooService', 'BarService', function (fs, bs) {\n *   // FooService and BarService are injected as fs and bs parameters\n * }]\n * ```\n *\n * @type {$InjectorLike}\n */\nexport var $injector = {\n    /** Gets an object from DI based on a string token */\n    get: function (name) { return globals[name]; },\n    /** Returns true if an object named `name` exists in global DI */\n    has: function (name) { return $injector.get(name) != null; },\n    /**\n     * Injects a function\n     *\n     * @param fn the function to inject\n     * @param context the function's `this` binding\n     * @param locals An object with additional DI tokens and values, such as `{ someToken: { foo: 1 } }`\n     */\n    invoke: function (fn, context, locals) {\n        var all = extend({}, globals, locals || {});\n        var params = $injector.annotate(fn);\n        var ensureExist = assertPredicate(function (key) { return all.hasOwnProperty(key); }, function (key) { return \"DI can't find injectable: '\" + key + \"'\"; });\n        var args = params.filter(ensureExist).map(function (x) { return all[x]; });\n        if (isFunction(fn))\n            return fn.apply(context, args);\n        else\n            return fn.slice(-1)[0].apply(context, args);\n    },\n    /**\n     * Returns a function's dependencies\n     *\n     * Analyzes a function (or array) and returns an array of DI tokens that the function requires.\n     * @return an array of `string`s\n     */\n    annotate: function (fn) {\n        if (!isInjectable(fn))\n            throw new Error(\"Not an injectable function: \" + fn);\n        if (fn && fn.$inject)\n            return fn.$inject;\n        if (isArray(fn))\n            return fn.slice(0, -1);\n        var fnStr = fn.toString().replace(STRIP_COMMENTS, '');\n        var result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n        return result || [];\n    },\n};\n//# sourceMappingURL=injector.js.map","/** @internalapi @module vanilla */ /** */\nimport { identity, unnestR, isArray, splitEqual, splitHash, splitQuery, } from '../common';\nexport var keyValsToObjectR = function (accum, _a) {\n    var key = _a[0], val = _a[1];\n    if (!accum.hasOwnProperty(key)) {\n        accum[key] = val;\n    }\n    else if (isArray(accum[key])) {\n        accum[key].push(val);\n    }\n    else {\n        accum[key] = [accum[key], val];\n    }\n    return accum;\n};\nexport var getParams = function (queryString) {\n    return queryString\n        .split('&')\n        .filter(identity)\n        .map(splitEqual)\n        .reduce(keyValsToObjectR, {});\n};\nexport function parseUrl(url) {\n    var orEmptyString = function (x) { return x || ''; };\n    var _a = splitHash(url).map(orEmptyString), beforehash = _a[0], hash = _a[1];\n    var _b = splitQuery(beforehash).map(orEmptyString), path = _b[0], search = _b[1];\n    return { path: path, search: search, hash: hash, url: url };\n}\nexport var buildUrl = function (loc) {\n    var path = loc.path();\n    var searchObject = loc.search();\n    var hash = loc.hash();\n    var search = Object.keys(searchObject)\n        .map(function (key) {\n        var param = searchObject[key];\n        var vals = isArray(param) ? param : [param];\n        return vals.map(function (val) { return key + '=' + val; });\n    })\n        .reduce(unnestR, [])\n        .join('&');\n    return path + (search ? '?' + search : '') + (hash ? '#' + hash : '');\n};\nexport function locationPluginFactory(name, isHtml5, serviceClass, configurationClass) {\n    return function (uiRouter) {\n        var service = (uiRouter.locationService = new serviceClass(uiRouter));\n        var configuration = (uiRouter.locationConfig = new configurationClass(uiRouter, isHtml5));\n        function dispose(router) {\n            router.dispose(service);\n            router.dispose(configuration);\n        }\n        return { name: name, service: service, configuration: configuration, dispose: dispose };\n    };\n}\n//# sourceMappingURL=utils.js.map","/** @internalapi @module vanilla */ /** */\nimport { deregAll, isDefined, removeFrom, root } from '../common';\nimport { buildUrl, getParams, parseUrl } from './utils';\n/** A base `LocationServices` */\nvar BaseLocationServices = /** @class */ (function () {\n    function BaseLocationServices(router, fireAfterUpdate) {\n        var _this = this;\n        this.fireAfterUpdate = fireAfterUpdate;\n        this._listeners = [];\n        this._listener = function (evt) { return _this._listeners.forEach(function (cb) { return cb(evt); }); };\n        this.hash = function () { return parseUrl(_this._get()).hash; };\n        this.path = function () { return parseUrl(_this._get()).path; };\n        this.search = function () { return getParams(parseUrl(_this._get()).search); };\n        this._location = root.location;\n        this._history = root.history;\n    }\n    BaseLocationServices.prototype.url = function (url, replace) {\n        if (replace === void 0) { replace = true; }\n        if (isDefined(url) && url !== this._get()) {\n            this._set(null, null, url, replace);\n            if (this.fireAfterUpdate) {\n                this._listeners.forEach(function (cb) { return cb({ url: url }); });\n            }\n        }\n        return buildUrl(this);\n    };\n    BaseLocationServices.prototype.onChange = function (cb) {\n        var _this = this;\n        this._listeners.push(cb);\n        return function () { return removeFrom(_this._listeners, cb); };\n    };\n    BaseLocationServices.prototype.dispose = function (router) {\n        deregAll(this._listeners);\n    };\n    return BaseLocationServices;\n}());\nexport { BaseLocationServices };\n//# sourceMappingURL=baseLocationService.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/** @internalapi @module vanilla */ /** */\nimport { root, trimHashVal } from '../common';\nimport { BaseLocationServices } from './baseLocationService';\n/** A `LocationServices` that uses the browser hash \"#\" to get/set the current location */\nvar HashLocationService = /** @class */ (function (_super) {\n    __extends(HashLocationService, _super);\n    function HashLocationService(router) {\n        var _this = _super.call(this, router, false) || this;\n        root.addEventListener('hashchange', _this._listener, false);\n        return _this;\n    }\n    HashLocationService.prototype._get = function () {\n        return trimHashVal(this._location.hash);\n    };\n    HashLocationService.prototype._set = function (state, title, url, replace) {\n        this._location.hash = url;\n    };\n    HashLocationService.prototype.dispose = function (router) {\n        _super.prototype.dispose.call(this, router);\n        root.removeEventListener('hashchange', this._listener);\n    };\n    return HashLocationService;\n}(BaseLocationServices));\nexport { HashLocationService };\n//# sourceMappingURL=hashLocationService.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/** @internalapi @module vanilla */ /** */\nimport { BaseLocationServices } from './baseLocationService';\n/** A `LocationServices` that gets/sets the current location from an in-memory object */\nvar MemoryLocationService = /** @class */ (function (_super) {\n    __extends(MemoryLocationService, _super);\n    function MemoryLocationService(router) {\n        return _super.call(this, router, true) || this;\n    }\n    MemoryLocationService.prototype._get = function () {\n        return this._url;\n    };\n    MemoryLocationService.prototype._set = function (state, title, url, replace) {\n        this._url = url;\n    };\n    return MemoryLocationService;\n}(BaseLocationServices));\nexport { MemoryLocationService };\n//# sourceMappingURL=memoryLocationService.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { BaseLocationServices } from './baseLocationService';\nimport { root, splitHash, splitQuery, stripLastPathElement } from '../common';\n/**\n * A `LocationServices` that gets/sets the current location using the browser's `location` and `history` apis\n *\n * Uses `history.pushState` and `history.replaceState`\n */\nvar PushStateLocationService = /** @class */ (function (_super) {\n    __extends(PushStateLocationService, _super);\n    function PushStateLocationService(router) {\n        var _this = _super.call(this, router, true) || this;\n        _this._config = router.urlService.config;\n        root.addEventListener('popstate', _this._listener, false);\n        return _this;\n    }\n    /**\n     * Gets the base prefix without:\n     * - trailing slash\n     * - trailing filename\n     * - protocol and hostname\n     *\n     * If <base href='/base/'>, this returns '/base'.\n     * If <base href='/foo/base/'>, this returns '/foo/base'.\n     * If <base href='/base/index.html'>, this returns '/base'.\n     * If <base href='http://localhost:8080/base/index.html'>, this returns '/base'.\n     * If <base href='/base'>, this returns ''.\n     * If <base href='http://localhost:8080'>, this returns ''.\n     * If <base href='http://localhost:8080/'>, this returns ''.\n     *\n     * See: https://html.spec.whatwg.org/dev/semantics.html#the-base-element\n     */\n    PushStateLocationService.prototype._getBasePrefix = function () {\n        return stripLastPathElement(this._config.baseHref());\n    };\n    PushStateLocationService.prototype._get = function () {\n        var _a = this._location, pathname = _a.pathname, hash = _a.hash, search = _a.search;\n        search = splitQuery(search)[1]; // strip ? if found\n        hash = splitHash(hash)[1]; // strip # if found\n        var basePrefix = this._getBasePrefix();\n        var exactBaseHrefMatch = pathname === this._config.baseHref();\n        var startsWithBase = pathname.substr(0, basePrefix.length) === basePrefix;\n        pathname = exactBaseHrefMatch ? '/' : startsWithBase ? pathname.substring(basePrefix.length) : pathname;\n        return pathname + (search ? '?' + search : '') + (hash ? '#' + hash : '');\n    };\n    PushStateLocationService.prototype._set = function (state, title, url, replace) {\n        var basePrefix = this._getBasePrefix();\n        var slash = url && url[0] !== '/' ? '/' : '';\n        var fullUrl = url === '' || url === '/' ? this._config.baseHref() : basePrefix + slash + url;\n        if (replace) {\n            this._history.replaceState(state, title, fullUrl);\n        }\n        else {\n            this._history.pushState(state, title, fullUrl);\n        }\n    };\n    PushStateLocationService.prototype.dispose = function (router) {\n        _super.prototype.dispose.call(this, router);\n        root.removeEventListener('popstate', this._listener);\n    };\n    return PushStateLocationService;\n}(BaseLocationServices));\nexport { PushStateLocationService };\n//# sourceMappingURL=pushStateLocationService.js.map","/** @internalapi @module vanilla */\n/** */\nimport { isDefined, isUndefined } from '../common/predicates';\n/** A `LocationConfig` that delegates to the browser's `location` object */\nvar BrowserLocationConfig = /** @class */ (function () {\n    function BrowserLocationConfig(router, _isHtml5) {\n        if (_isHtml5 === void 0) { _isHtml5 = false; }\n        this._isHtml5 = _isHtml5;\n        this._baseHref = undefined;\n        this._hashPrefix = '';\n    }\n    BrowserLocationConfig.prototype.port = function () {\n        if (location.port) {\n            return Number(location.port);\n        }\n        return this.protocol() === 'https' ? 443 : 80;\n    };\n    BrowserLocationConfig.prototype.protocol = function () {\n        return location.protocol.replace(/:/g, '');\n    };\n    BrowserLocationConfig.prototype.host = function () {\n        return location.hostname;\n    };\n    BrowserLocationConfig.prototype.html5Mode = function () {\n        return this._isHtml5;\n    };\n    BrowserLocationConfig.prototype.hashPrefix = function (newprefix) {\n        return isDefined(newprefix) ? (this._hashPrefix = newprefix) : this._hashPrefix;\n    };\n    BrowserLocationConfig.prototype.baseHref = function (href) {\n        if (isDefined(href))\n            this._baseHref = href;\n        if (isUndefined(this._baseHref))\n            this._baseHref = this.getBaseHref();\n        return this._baseHref;\n    };\n    BrowserLocationConfig.prototype.getBaseHref = function () {\n        var baseTag = document.getElementsByTagName('base')[0];\n        if (baseTag && baseTag.href) {\n            return baseTag.href.replace(/^([^/:]*:)?\\/\\/[^/]*/, '');\n        }\n        return this._isHtml5 ? '/' : location.pathname || '/';\n    };\n    BrowserLocationConfig.prototype.dispose = function () { };\n    return BrowserLocationConfig;\n}());\nexport { BrowserLocationConfig };\n//# sourceMappingURL=browserLocationConfig.js.map","/** @internalapi @module vanilla */ /** */\nimport { BrowserLocationConfig } from './browserLocationConfig';\nimport { HashLocationService } from './hashLocationService';\nimport { locationPluginFactory } from './utils';\nimport { PushStateLocationService } from './pushStateLocationService';\nimport { MemoryLocationService } from './memoryLocationService';\nimport { MemoryLocationConfig } from './memoryLocationConfig';\nimport { $injector } from './injector';\nimport { $q } from './q';\nimport { services } from '../common/coreservices';\nexport function servicesPlugin(router) {\n    services.$injector = $injector;\n    services.$q = $q;\n    return { name: 'vanilla.services', $q: $q, $injector: $injector, dispose: function () { return null; } };\n}\n/** A `UIRouterPlugin` uses the browser hash to get/set the current location */\nexport var hashLocationPlugin = locationPluginFactory('vanilla.hashBangLocation', false, HashLocationService, BrowserLocationConfig);\n/** A `UIRouterPlugin` that gets/sets the current location using the browser's `location` and `history` apis */\nexport var pushStateLocationPlugin = locationPluginFactory('vanilla.pushStateLocation', true, PushStateLocationService, BrowserLocationConfig);\n/** A `UIRouterPlugin` that gets/sets the current location from an in-memory object */\nexport var memoryLocationPlugin = locationPluginFactory('vanilla.memoryLocation', false, MemoryLocationService, MemoryLocationConfig);\n//# sourceMappingURL=plugins.js.map","export { LitElement, html, css } from 'lit-element';\nexport { pushStateLocationPlugin, servicesPlugin, UIRouter } from '@uirouter/core';\n\n// https://gist.github.com/gordonbrander/2230317\nexport const genId = function() {\n  return '_' + Math.random().toString(36).substr(2, 9);\n}"],"names":["directives","WeakMap","isDirective","o","has","isCEPolyfill","undefined","window","customElements","polyfillWrapFlushCallback","removeNodes","container","start","end","n","nextSibling","removeChild","noChange","nothing","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","[object Object]","result","element","this","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","length","node","nextNode","nodeType","hasAttributes","attributes","count","i","endsWith","name","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","currentNode","data","indexOf","parent","parentNode","lastIndex","insert","s","createMarker","match","createTextNode","insertBefore","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","TemplateInstance","template","processor","options","__parts","setValue","commit","fragment","cloneNode","importNode","nodeIndex","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","TemplateResult","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","createElement","innerHTML","getHTML","isPrimitive","value","isIterable","Array","isArray","Symbol","iterator","AttributeCommitter","dirty","_createPart","AttributePart","text","v","t","setAttribute","_getValue","committer","directive","NodePart","__pendingValue","startNode","appendChild","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","templateFactory","update","instance","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","BooleanAttributePart","Error","PropertyCommitter","super","single","PropertyPart","eventOptionsSupported","capture","addEventListener","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","shouldAddListener","__options","getOptions","event","call","defaultTemplateProcessor","prefix","templateCache","templateCaches","get","stringsArray","keyString","Map","set","key","join","getTemplateElement","walkerNodeFilter","removeNodesFromTemplate","nextActiveIndexInTemplateParts","removeCount","nodesToRemoveInTemplate","currentRemovingNode","forEach","countNodes","startIndex","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","console","warn","TEMPLATE_TYPES","shadyRenderSet","Set","prepareTemplateStyles","renderedDOM","add","styles","querySelectorAll","condensedStyle","style","textContent","templates","from","refNode","insertCount","walkerIndex","insertNodeIntoTemplate","firstChild","querySelector","nativeShadow","removes","JSCompiler_renameProperty","prop","_obj","defaultConverter","Boolean","Object","JSON","stringify","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","microtaskPromise","Promise","resolve","STATE_HAS_UPDATED","STATE_UPDATE_REQUESTED","STATE_IS_REFLECTING_TO_ATTRIBUTE","STATE_IS_REFLECTING_TO_PROPERTY","STATE_HAS_CONNECTED","UpdatingElement","HTMLElement","_updateState","_instanceProperties","_updatePromise","_hasConnectedResolver","_changedProperties","_reflectingProperties","initialize","observedAttributes","finalize","_classProperties","p","attr","_attributeNameForProperty","_attributeToPropertyMap","hasOwnProperty","superProperties","getPrototypeOf","k","_ensureClassProperties","noAccessor","prototype","defineProperty","oldValue","_requestUpdate","configurable","enumerable","finalized","superCtor","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","createProperty","fromAttribute","toAttribute","_saveInstanceProperties","constructor","_v","_attributeToProperty","ctor","attrValue","_propertyValueToAttribute","propName","_propertyValueFromAttribute","shouldRequestUpdate","_valueHasChanged","_hasRequestedUpdate","_enqueueUpdate","updateComplete","reject","previousUpdatePromise","res","rej","_hasConnected","performUpdate","hasUpdated","_applyInstanceProperties","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","size","_propertyToAttribute","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","styleSheet","_styleSheet","replaceSync","flattenStyles","flat","Infinity","arrayFlat","LitElement","_styles","_getUniqueStyles","userStyles","reduceRight","unshift","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","mode","adoptedStyleSheets","map","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","connectedCallback","styleElement","templateResult","render","curry","fn","initial_args","apply","arguments","func_args_length","curried","args","concat","pipe","funcs","_i","reverse","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","assign","appendInto","litRender","cacheKey","shadyTemplateFactory","delete","obj","propEq","_val","not","all","fn1","arr","reduce","b","x","any","is","val","pattern","struct","fn2","toStr","toString","tis","isUndefined","isDefined","isNull","isNullOrUndefined","isFunction","isNumber","isString","isObject","isDate","isRegExp","isInjectable","head","tail","filter","isPromise","and","makeStub","service","methods","acc","fnname","services","$q","$injector","root","self","global","angular","fromJson","bind","toJson","cb","_this","keys","extend","toObj","j","equals","_equals","identity","noop","createProxyFunctions","source","target","fnNames","latebind","bindFunction","fnName","inherit","extra","create","inArray","array","removeFrom","idx","splice","pushTo","defaults","opts","defaultsList","defaultVals","pick","mergeR","memo","propNames","objCopy","_prop","omit","collection","callback","accept","find","mapObj","allTrueR","elem","anyTrueR","unnestR","flattenR","pushR","uniqR","token","unnest","assertPredicate","predicateOrMap","errMsg","arrayTuples","maxArrayLen","min","_loop_1","applyPairs","keyValTuple","copy","src","dest","o1","o2","t1","a1","a2","tup","getTime","RejectType","silenceUncaughtInPromise","promise","catch","silentRejection","error","Glob","glob","regexpString","seg","regexp","fromString","matches","test","Queue","_items","_limit","_evictListeners","onEvict","enqueue","items","evict","shift","dequeue","current","remove","peekTail","peekHead","id","Rejection","message","detail","$id","isRejectionPromise","then","_transitionRejection","superseded","rejection","SUPERSEDED","redirected","invalid","INVALID","ignored","IGNORED","aborted","ABORTED","errored","ERROR","normalize","d","toPromise","maxLength","max","functionToString","fnStr","fnToString","namedFunctionMatch","_fn","isRejection","stringifyPattern","seen","format","replace","beforeAfterSubstr","char","stripLastPathElement","splitHash","splitQuery","splitEqual","joinNeighborsR","uiViewString","uiview","state","creationContext","$type","fqn","normalizedCat","input","Category","consoleLog","Function","log","consoletable","table","_tid","_rid","transLbl","trans","trace","Trace","_enabled","approximateDigests","_set","enabled","categories","parseInt","isNaN","category","enable","disable","traceTransitionStart","TRANSITION","traceTransitionIgnored","traceHookInvocation","step","HOOK","context","registeredHook","traceHookResult","hookResult","transitionOptions","traceResolvePath","path","when","RESOLVE","traceResolvableResolved","resolvable","traceError","reason","traceSuccess","finalState","traceUIViewEvent","viewData","UIVIEW","padString","traceUIViewConfigUpdated","traceUIViewFill","traceViewSync","pairs","VIEWCONFIG","uivheader","mapping","_a","_b","uiView","viewConfig","uiv","cfg","viewDecl","$context","$name","sort","a","localeCompare","traceViewServiceEvent","view","$uiViewName","$uiViewContextAnchor","viewConfigString","traceViewServiceUIViewEvent","ParamType","def","encode","decode","$subPattern","sub","$normalize","$asArray","isSearch","arrayWrap","arrayHandler","allTruthyMode","arrayUnwrap","arrayEqualsHandler","val1","val2","left","right","paramTypeFn","wrapperFn","dynamic","raw","$arrayMode","DefType","hasOwn","isShorthand","getParamDeclaration","paramName","location","noReloadOnSearch","reloadOnSearch","SEARCH","defaultConfig","paramConfig","getStaticDefaultValue","$$fn","unwrapShorthand","params","makeDefaultType","Param","urlConfig","config","urlType","paramTypes","CONFIG","PATH","getType","arrayDefaults","arrayParamNomenclature","arrayMode","isOptional","squash","defaultPolicy","getSquashPolicy","defaultSquashPolicy","to","configuredKeys","getReplace","paramValues","params_1","param","changed","values1","values2","validates","isDefaultValue","tuple","replaceSpecialValues","_defaultValueCache","defaultValue","invoke","getDefaultValue","normalized","encoded","ParamTypes","typeQueue","defaultTypes","types","definition","dispose","definitionFn","_flushTypeQueue","valToString","defaultTypeBase","string","query","hash","int","bool","date","getFullYear","getMonth","getDate","Date","valueOf","r","json","StateParams","$inherit","newParams","$current","$to","parentParams","parents","first","second","ancestors","inherited","inheritList","PathNode","stateOrNode","paramSchema","resolvables","views","parameters","clone","applyRawParams","pDef","paramDef","parameter","paramsFn","diff","TargetState","_stateRegistry","_identifier","_params","_options","_definition","matcher","relative","identifier","$state","exists","valid","base","stateName","withState","withParams","withOptions","newOpts","isDef","PathUtils","makeTargetState","registry","buildPath","targetState","toParams","buildToPath","fromPath","toPath","inheritParams","applyViewConfigs","$view","states","viewDecls","subPath","viewConfigs","createViewConfig","toKeys","noInherit","toNode","toParamVals","incomingParamVals","fromParamVals","ownParamVals","treeChanges","reloadState","node1","node2","retained","exiting","entering","keep","nonDynamicParams","retainedWithToParams","retainedNode","cloned","matching","pathA","pathB","done","nodeA","nodeB","predicate","elementIdx","resolvePolicies","LAZY","EAGER","defaultResolvePolicy","Resolvable","arg1","resolveFn","deps","policy","resolved","literal","getPolicy","thisPolicy","statePolicy","resolvePolicy","async","resolveContext","findNode","maybeWaitForRx","observable$","cached","cache","take","getDependencies","resolvedDeps","resolvedValue","fromData","whens","ALL_WHENS","EAGER_WHENS","NATIVE_INJECTOR_TOKEN","ResolveContext","_path","getTokens","getResolvable","subContext","addResolvables","newResolvables","resolvePath","matchedWhens","matchesPolicy","acceptedVals","whenOrAsync","promises","nodeResolvables","nowait","wait","getResult","injector","_injector","UIInjectorImpl","availableResolvables","_node","fromInjector","getNative","native","getAsync","nameBuilder","selfBuilder","$$state","dataBuilder","getUrlBuilder","$urlMatcherFactoryProvider","stateObject","stateDec","url","newStateDec","parsed","charAt","substring","parseUrl","compile","isMatcher","navigable","append","getNavigableBuilder","isRoot","getParamsBuilder","paramFactory","urlParams","nonUrlParams","fromConfig","pathBuilder","includesBuilder","includes","resolvablesBuilder","resolveObj","getToken","provide","literal2Resolvable","useFactory","dependencies","useClass","useValue","useExisting","tuple2Resolvable","annotate","strictDi","item2Resolvable","decl","TransitionHookPhase","TransitionHookScope","StateBuilder","urlMatcherFactory","builders","parentName","builder","build","chain","parentFn","_state","segments","StateObject","stateDecl","isStateClass","__stateObjectCache","nameGlob","matchingKeys","isState","StateMatcher","_states","isRelative","stateOrName","matchGlob","isStr","baseState","splitName","pathLength","relName","StateQueueManager","router","listeners","queue","register","flush","registered","orphans","previousQueueLength","getState","notifyListeners","listener","name_1","orphanIdx","existingState","existingFutureState","stateRegistry","deregister","attachRoute","prev","abstract","rulesApi","urlService","rules","rule","urlRuleFactory","StateRegistry","stateQueue","_registerRoot","_root","#","onStatesChanged","stateDefinition","_deregisterTree","getChildren","_children","children","deregistered","removeRule","deregisteredStates","found","decorator","func","defaultOptions","transition","traceData","TransitionHook","stateContext","isSuperseded","hookPhase","RUN","isActive","eventType","hooks","waitFor","nextHook","invokeHook","invokeHooks","doneCallback","remainingHooks","runAllHooks","hook","logError","err","stateService","defaultErrorHandler","_deregistered","notCurrent","getNotCurrentRejection","handleError","getErrorHandler","handleResult","getResultHandler","synchronous","invokeLimit","invokeCount","handleHookResult","isTargetState","_disposed","_aborted","HANDLE_RESULT","LOG_REJECTED_RESULT","LOG_ERROR","REJECT_ERROR","THROW_ERROR","matchState","criterion","toMatch","globStrings","RegisteredHook","tranSvc","matchCriteria","removeHookFromRegistry","priority","_matchingNodes","nodes","_getDefaultMatchCriteria","_pluginapi","_getPathTypes","_getMatchingNodes","criteria","mn","pathtype","isStateHook","scope","STATE","every","makeEvent","transitionService","_registeredHooks","removeHookFn","hookRegistrationFn","matchObject","HookBuilder","buildHooksForPhase","phase","_getEvents","buildHooks","hookType","matchingHooks","getMatchingHooks","baseHookOptions","criteriaMatchPath","transitionHook","reverseDepthSort","factor","depthDelta","tupleSort","reverseSort","isCreate","CREATE","$transitions","reg","getHooks","stateSelf","Transition","_deferred","defer","_hookBuilder","globals","_targetState","_transitionCount","_treeChanges","createTransitionHookRegFns","onCreateHooks","onBefore","onStart","onExit","onRetain","onEnter","onFinish","onSuccess","onError","hookName","enteringStates","$from","compare","pathname","freeze","paramsChanged","fromParams","allParamDescriptors","pathNode","changedValues","descriptor","pathName","getResolveTokens","addResolvable","topath","targetNode","redirectedFrom","originalTransition","rf","redirect","redirects","redirectOpts","newOptions","newTransition","originalEnteringNodes","redirectEnteringNodes","_changedParams","tc","reload","nodeSchemas","schema","toVals","fromVals","changes","_ignoredReason","pending","same","newTC","pendTC","run","getHooksFor","allBeforeHooks","BEFORE","lastStartedTransitionId","transitionHistory","allRunHooks","success","SUCCESS","_error","abort","paramDefs","invalidParams","invalidValues","fromStateOrName","toStateOrName","avoidEmptyHash","diToken","quoteRegExp","surroundPattern","re","splitOnSlash","strict","caseInsensitive","UrlMatcher","_cache","_segments","_compiled","matchArray","details","segment","placeholder","searchPlaceholder","patterns","last","checkParamErrors","nameValidator","matchDetails","m","search","fromSearch","_pattern","encodeDashes","encodeURIComponent","c","charCodeAt","toUpperCase","pathSegmentsAndParams","queryParams","weights","weightsA","weightsB","padVal","len","padArrays","cmp","_pairs","reverseString","allParams","pathParams","searchParams","nPathSegments","urlm","findParam","urlMatchers","getDetails","isValid","pathString","queryString","paramDetails","__assign","ParamFactory","UrlMatcherFactory","strictMode","globalConfig","_isStrictMode","_isCaseInsensitive","object","$get","UrlRuleFactory","what","handler","makeRule","_what","fromUrlMatcher","fromState","fromRegExp","BaseUrlRule","urlMatcher","_handler","matchPriority","optional","href","transitionTo","sticky","isUrlRule","defaultRuleSortFn","UrlRouter","sync","evt","listen","deferIntercept","urlParts","initial","otherwise","compareFn","read","$url","locationService","absolute","isHtml5","html5Mode","hashPrefix","baseHref","appendBasePath","slash","cfgPort","port","protocol","interceptDeferred","ViewService","_uiViews","_viewConfigs","_viewConfigFactories","_listeners","_rootViewContext","_viewConfigFactory","_registeredUIView","_registeredUIViews","_activeViewConfigs","_onSync","normalizeUIViewTarget","rawViewName","viewAtContext","uiViewName","uiViewContextAnchor","relativeViewNameSugar","anchor","_rootContext","viewType","factory","cfgFactory","cfgs","deactivateViewConfig","activateViewConfig","uiViewsByFqn","viewConfigDepth","depthCompare","depthFn","posNeg","uiViewTuples","stateDepth","matchingConfigs","matchedViewConfigs","unmatchedConfigTuples","configUpdated","allTuples","registerUIView","uiViews","available","active","vc","vcSegments","uivSegments","negOffset","fqnToFirstSegment","uiViewContext","UIRouterGlobals","successfulTransitions","getHandlerFn","prioritySort","URLMATCHER","REGEXP","RAW","OTHER","typeSort","urlMatcherSort","useMatchPriority","idSort","UrlRules","_sortFn","_rules","_id","_otherwiseFn","handlerFn","_sorted","ensureSorted","sorted","stableSort","group","_group","arrOfWrapper","wrapperA","wrapperB","cmpDiff","wrapper","UrlConfig","_defaultSquashPolicy","locationConfig","newprefix","UrlService","newurl","onChange","defaultPrevented","best","go","applyResult","_stopListeningFn","weight","_routerInstance","locationServiceStub","locationConfigStub","UIRouter","_disposables","viewService","TransitionService","urlRouter","StateService","_plugins","disposable","plugin","pluginInstance","getPlugin","pluginName","addCoreResolvables","isTransition","treeChangesCleanup","replaceTransitionWithNull","redirectToHook","redirectTo","makeEnterExitRetainHook","hookFn","onExitHook","onRetainHook","onEnterHook","eagerResolvePath","lazyResolveState","resolveRemaining","loadEnteringViews","enteringViews","load","activateViews","exitingViews","updateGlobalState","clearCurrentTransition","updateUrl","$urlRouter","urlOptions","lazyLoadHook","lazyLoad","lazyLoadState","orig","lazyLoadFn","TransitionEventType","hookOrder","ignoredHook","ignoredReason","invalidTransitionHook","defaultTransOpts","notify","custom","_router","_eventTypes","_criteriaPaths","_deregisterHookFns","_defineCorePaths","_defineCoreEvents","_registerCoreTransitionHooks","onCreate","hooksArray","Phase","TH","paths","_defineEvent","_definePathType","cmpByPhase","hookScope","fns","addCoreResolves","registerIgnoredTransitionHook","registerInvalidTransitionHook","registerRedirectToHook","registerOnExitHook","registerOnRetainHook","registerOnEnterHook","eagerResolve","registerEagerResolvePath","lazyResolve","registerLazyResolveState","resolveAll","registerResolveRemaining","loadViews","registerLoadEnteringViews","registerActivateViews","updateGlobals","registerUpdateGlobalState","registerUpdateUrl","registerLazyLoadHook","invalidCallbacks","_defaultErrorHandler","$error$","boundFns","_handleInvalidTargetState","toState","latestThing","latest","callbackQueue","checkForRedirect","invokeNextCallback","nextCallback","onInvalid","transOpts","getCurrentPath","latestSuccess","currentPath","rejectedTransitionHandler","isLatest","errorHandler","transitionToPromise","include","lossy","nav","deferred","STRIP_COMMENTS","ARGUMENT_NAMES","locals","ensureExist","$inject","keyValsToObjectR","accum","getParams","orEmptyString","beforehash","extendStatics","BaseLocationServices","fireAfterUpdate","_listener","_get","_location","_history","history","loc","searchObject","functions","__extends","setPrototypeOf","__proto__","__","_super","HashLocationService","title","MemoryLocationService","_url","PushStateLocationService","_config","_getBasePrefix","basePrefix","exactBaseHrefMatch","startsWithBase","fullUrl","replaceState","pushState","BrowserLocationConfig","_isHtml5","_baseHref","_hashPrefix","hostname","getBaseHref","baseTag","getElementsByTagName","serviceClass","configurationClass","pushStateLocationPlugin","uiRouter","configuration","textFromCSSResult"],"mappings":"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"}